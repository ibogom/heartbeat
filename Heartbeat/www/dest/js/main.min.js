eval("/*!\r\n * jQuery JavaScript Library v1.8.3\r\n * http://jquery.com/\r\n *\r\n * Includes Sizzle.js\r\n * http://sizzlejs.com/\r\n *\r\n * Copyright 2012 jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: Tue Nov 13 2012 08:20:33 GMT-0500 (Eastern Standard Time)\r\n */\r\n(function( window, undefined ) {\r\nvar\r\n    // A central reference to the root jQuery(document)\r\n    rootjQuery,\r\n\r\n    // The deferred used on DOM ready\r\n    readyList,\r\n\r\n    // Use the correct document accordingly with window argument (sandbox)\r\n    document = window.document,\r\n    location = window.location,\r\n    navigator = window.navigator,\r\n\r\n    // Map over jQuery in case of overwrite\r\n    _jQuery = window.jQuery,\r\n\r\n    // Map over the $ in case of overwrite\r\n    _$ = window.$,\r\n\r\n    // Save a reference to some core methods\r\n    core_push = Array.prototype.push,\r\n    core_slice = Array.prototype.slice,\r\n    core_indexOf = Array.prototype.indexOf,\r\n    core_toString = Object.prototype.toString,\r\n    core_hasOwn = Object.prototype.hasOwnProperty,\r\n    core_trim = String.prototype.trim,\r\n\r\n    // Define a local copy of jQuery\r\n    jQuery = function( selector, context ) {\r\n        // The jQuery object is actually just the init constructor \'enhanced\'\r\n        return new jQuery.fn.init( selector, context, rootjQuery );\r\n    },\r\n\r\n    // Used for matching numbers\r\n    core_pnum = /[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source,\r\n\r\n    // Used for detecting and trimming whitespace\r\n    core_rnotwhite = /\\S/,\r\n    core_rspace = /\\s+/,\r\n\r\n    // Make sure we trim BOM and NBSP (here\'s looking at you, Safari 5.0 and IE)\r\n    rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\r\n\r\n    // A simple way to check for HTML strings\r\n    // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\r\n    rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,\r\n\r\n    // Match a standalone tag\r\n    rsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n\r\n    // JSON RegExp\r\n    rvalidchars = /^[\\],:{}\\s]*$/,\r\n    rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\r\n    rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,\r\n    rvalidtokens = /\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/g,\r\n\r\n    // Matches dashed string for camelizing\r\n    rmsPrefix = /^-ms-/,\r\n    rdashAlpha = /-([\\da-z])/gi,\r\n\r\n    // Used by jQuery.camelCase as callback to replace()\r\n    fcamelCase = function( all, letter ) {\r\n        return ( letter + \"\" ).toUpperCase();\r\n    },\r\n\r\n    // The ready event handler and self cleanup method\r\n    DOMContentLoaded = function() {\r\n        if ( document.addEventListener ) {\r\n            document.removeEventListener( \"DOMContentLoaded\", DOMContentLoaded, false );\r\n            jQuery.ready();\r\n        } else if ( document.readyState === \"complete\" ) {\r\n            // we\'re here because readyState === \"complete\" in oldIE\r\n            // which is good enough for us to call the dom ready!\r\n            document.detachEvent( \"onreadystatechange\", DOMContentLoaded );\r\n            jQuery.ready();\r\n        }\r\n    },\r\n\r\n    // [[Class]] -> type pairs\r\n    class2type = {};\r\n\r\njQuery.fn = jQuery.prototype = {\r\n    constructor: jQuery,\r\n    init: function( selector, context, rootjQuery ) {\r\n        var match, elem, ret, doc;\r\n\r\n        // Handle $(\"\"), $(null), $(undefined), $(false)\r\n        if ( !selector ) {\r\n            return this;\r\n        }\r\n\r\n        // Handle $(DOMElement)\r\n        if ( selector.nodeType ) {\r\n            this.context = this[0] = selector;\r\n            this.length = 1;\r\n            return this;\r\n        }\r\n\r\n        // Handle HTML strings\r\n        if ( typeof selector === \"string\" ) {\r\n            if ( selector.charAt(0) === \"<\" && selector.charAt( selector.length - 1 ) === \">\" && selector.length >= 3 ) {\r\n                // Assume that strings that start and end with <> are HTML and skip the regex check\r\n                match = [ null, selector, null ];\r\n\r\n            } else {\r\n                match = rquickExpr.exec( selector );\r\n            }\r\n\r\n            // Match html or make sure no context is specified for #id\r\n            if ( match && (match[1] || !context) ) {\r\n\r\n                // HANDLE: $(html) -> $(array)\r\n                if ( match[1] ) {\r\n                    context = context instanceof jQuery ? context[0] : context;\r\n                    doc = ( context && context.nodeType ? context.ownerDocument || context : document );\r\n\r\n                    // scripts is true for back-compat\r\n                    selector = jQuery.parseHTML( match[1], doc, true );\r\n                    if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\r\n                        this.attr.call( selector, context, true );\r\n                    }\r\n\r\n                    return jQuery.merge( this, selector );\r\n\r\n                // HANDLE: $(#id)\r\n                } else {\r\n                    elem = document.getElementById( match[2] );\r\n\r\n                    // Check parentNode to catch when Blackberry 4.6 returns\r\n                    // nodes that are no longer in the document #6963\r\n                    if ( elem && elem.parentNode ) {\r\n                        // Handle the case where IE and Opera return items\r\n                        // by name instead of ID\r\n                        if ( elem.id !== match[2] ) {\r\n                            return rootjQuery.find( selector );\r\n                        }\r\n\r\n                        // Otherwise, we inject the element directly into the jQuery object\r\n                        this.length = 1;\r\n                        this[0] = elem;\r\n                    }\r\n\r\n                    this.context = document;\r\n                    this.selector = selector;\r\n                    return this;\r\n                }\r\n\r\n            // HANDLE: $(expr, $(...))\r\n            } else if ( !context || context.jquery ) {\r\n                return ( context || rootjQuery ).find( selector );\r\n\r\n            // HANDLE: $(expr, context)\r\n            // (which is just equivalent to: $(context).find(expr)\r\n            } else {\r\n                return this.constructor( context ).find( selector );\r\n            }\r\n\r\n        // HANDLE: $(function)\r\n        // Shortcut for document ready\r\n        } else if ( jQuery.isFunction( selector ) ) {\r\n            return rootjQuery.ready( selector );\r\n        }\r\n\r\n        if ( selector.selector !== undefined ) {\r\n            this.selector = selector.selector;\r\n            this.context = selector.context;\r\n        }\r\n\r\n        return jQuery.makeArray( selector, this );\r\n    },\r\n\r\n    // Start with an empty selector\r\n    selector: \"\",\r\n\r\n    // The current version of jQuery being used\r\n    jquery: \"1.8.3\",\r\n\r\n    // The default length of a jQuery object is 0\r\n    length: 0,\r\n\r\n    // The number of elements contained in the matched element set\r\n    size: function() {\r\n        return this.length;\r\n    },\r\n\r\n    toArray: function() {\r\n        return core_slice.call( this );\r\n    },\r\n\r\n    // Get the Nth element in the matched element set OR\r\n    // Get the whole matched element set as a clean array\r\n    get: function( num ) {\r\n        return num == null ?\r\n\r\n            // Return a \'clean\' array\r\n            this.toArray() :\r\n\r\n            // Return just the object\r\n            ( num < 0 ? this[ this.length + num ] : this[ num ] );\r\n    },\r\n\r\n    // Take an array of elements and push it onto the stack\r\n    // (returning the new matched element set)\r\n    pushStack: function( elems, name, selector ) {\r\n\r\n        // Build a new jQuery matched element set\r\n        var ret = jQuery.merge( this.constructor(), elems );\r\n\r\n        // Add the old object onto the stack (as a reference)\r\n        ret.prevObject = this;\r\n\r\n        ret.context = this.context;\r\n\r\n        if ( name === \"find\" ) {\r\n            ret.selector = this.selector + ( this.selector ? \" \" : \"\" ) + selector;\r\n        } else if ( name ) {\r\n            ret.selector = this.selector + \".\" + name + \"(\" + selector + \")\";\r\n        }\r\n\r\n        // Return the newly-formed element set\r\n        return ret;\r\n    },\r\n\r\n    // Execute a callback for every element in the matched set.\r\n    // (You can seed the arguments with an array of args, but this is\r\n    // only used internally.)\r\n    each: function( callback, args ) {\r\n        return jQuery.each( this, callback, args );\r\n    },\r\n\r\n    ready: function( fn ) {\r\n        // Add the callback\r\n        jQuery.ready.promise().done( fn );\r\n\r\n        return this;\r\n    },\r\n\r\n    eq: function( i ) {\r\n        i = +i;\r\n        return i === -1 ?\r\n            this.slice( i ) :\r\n            this.slice( i, i + 1 );\r\n    },\r\n\r\n    first: function() {\r\n        return this.eq( 0 );\r\n    },\r\n\r\n    last: function() {\r\n        return this.eq( -1 );\r\n    },\r\n\r\n    slice: function() {\r\n        return this.pushStack( core_slice.apply( this, arguments ),\r\n            \"slice\", core_slice.call(arguments).join(\",\") );\r\n    },\r\n\r\n    map: function( callback ) {\r\n        return this.pushStack( jQuery.map(this, function( elem, i ) {\r\n            return callback.call( elem, i, elem );\r\n        }));\r\n    },\r\n\r\n    end: function() {\r\n        return this.prevObject || this.constructor(null);\r\n    },\r\n\r\n    // For internal use only.\r\n    // Behaves like an Array\'s method, not like a jQuery method.\r\n    push: core_push,\r\n    sort: [].sort,\r\n    splice: [].splice\r\n};\r\n\r\n// Give the init function the jQuery prototype for later instantiation\r\njQuery.fn.init.prototype = jQuery.fn;\r\n\r\njQuery.extend = jQuery.fn.extend = function() {\r\n    var options, name, src, copy, copyIsArray, clone,\r\n        target = arguments[0] || {},\r\n        i = 1,\r\n        length = arguments.length,\r\n        deep = false;\r\n\r\n    // Handle a deep copy situation\r\n    if ( typeof target === \"boolean\" ) {\r\n        deep = target;\r\n        target = arguments[1] || {};\r\n        // skip the boolean and the target\r\n        i = 2;\r\n    }\r\n\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\r\n        target = {};\r\n    }\r\n\r\n    // extend jQuery itself if only one argument is passed\r\n    if ( length === i ) {\r\n        target = this;\r\n        --i;\r\n    }\r\n\r\n    for ( ; i < length; i++ ) {\r\n        // Only deal with non-null/undefined values\r\n        if ( (options = arguments[ i ]) != null ) {\r\n            // Extend the base object\r\n            for ( name in options ) {\r\n                src = target[ name ];\r\n                copy = options[ name ];\r\n\r\n                // Prevent never-ending loop\r\n                if ( target === copy ) {\r\n                    continue;\r\n                }\r\n\r\n                // Recurse if we\'re merging plain objects or arrays\r\n                if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\r\n                    if ( copyIsArray ) {\r\n                        copyIsArray = false;\r\n                        clone = src && jQuery.isArray(src) ? src : [];\r\n\r\n                    } else {\r\n                        clone = src && jQuery.isPlainObject(src) ? src : {};\r\n                    }\r\n\r\n                    // Never move original objects, clone them\r\n                    target[ name ] = jQuery.extend( deep, clone, copy );\r\n\r\n                // Don\'t bring in undefined values\r\n                } else if ( copy !== undefined ) {\r\n                    target[ name ] = copy;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Return the modified object\r\n    return target;\r\n};\r\n\r\njQuery.extend({\r\n    noConflict: function( deep ) {\r\n        if ( window.$ === jQuery ) {\r\n            window.$ = _$;\r\n        }\r\n\r\n        if ( deep && window.jQuery === jQuery ) {\r\n            window.jQuery = _jQuery;\r\n        }\r\n\r\n        return jQuery;\r\n    },\r\n\r\n    // Is the DOM ready to be used? Set to true once it occurs.\r\n    isReady: false,\r\n\r\n    // A counter to track how many items to wait for before\r\n    // the ready event fires. See #6781\r\n    readyWait: 1,\r\n\r\n    // Hold (or release) the ready event\r\n    holdReady: function( hold ) {\r\n        if ( hold ) {\r\n            jQuery.readyWait++;\r\n        } else {\r\n            jQuery.ready( true );\r\n        }\r\n    },\r\n\r\n    // Handle when the DOM is ready\r\n    ready: function( wait ) {\r\n\r\n        // Abort if there are pending holds or we\'re already ready\r\n        if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\r\n            return;\r\n        }\r\n\r\n        // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\r\n        if ( !document.body ) {\r\n            return setTimeout( jQuery.ready, 1 );\r\n        }\r\n\r\n        // Remember that the DOM is ready\r\n        jQuery.isReady = true;\r\n\r\n        // If a normal DOM Ready event fired, decrement, and wait if need be\r\n        if ( wait !== true && --jQuery.readyWait > 0 ) {\r\n            return;\r\n        }\r\n\r\n        // If there are functions bound, to execute\r\n        readyList.resolveWith( document, [ jQuery ] );\r\n\r\n        // Trigger any bound ready events\r\n        if ( jQuery.fn.trigger ) {\r\n            jQuery( document ).trigger(\"ready\").off(\"ready\");\r\n        }\r\n    },\r\n\r\n    // See test/unit/core.js for details concerning isFunction.\r\n    // Since version 1.3, DOM methods and functions like alert\r\n    // aren\'t supported. They return false on IE (#2968).\r\n    isFunction: function( obj ) {\r\n        return jQuery.type(obj) === \"function\";\r\n    },\r\n\r\n    isArray: Array.isArray || function( obj ) {\r\n        return jQuery.type(obj) === \"array\";\r\n    },\r\n\r\n    isWindow: function( obj ) {\r\n        return obj != null && obj == obj.window;\r\n    },\r\n\r\n    isNumeric: function( obj ) {\r\n        return !isNaN( parseFloat(obj) ) && isFinite( obj );\r\n    },\r\n\r\n    type: function( obj ) {\r\n        return obj == null ?\r\n            String( obj ) :\r\n            class2type[ core_toString.call(obj) ] || \"object\";\r\n    },\r\n\r\n    isPlainObject: function( obj ) {\r\n        // Must be an Object.\r\n        // Because of IE, we also have to check the presence of the constructor property.\r\n        // Make sure that DOM nodes and window objects don\'t pass through, as well\r\n        if ( !obj || jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            // Not own constructor property must be Object\r\n            if ( obj.constructor &&\r\n                !core_hasOwn.call(obj, \"constructor\") &&\r\n                !core_hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\r\n                return false;\r\n            }\r\n        } catch ( e ) {\r\n            // IE8,9 Will throw exceptions on certain host objects #9897\r\n            return false;\r\n        }\r\n\r\n        // Own properties are enumerated firstly, so to speed up,\r\n        // if last one is own, then all properties are own.\r\n\r\n        var key;\r\n        for ( key in obj ) {}\r\n\r\n        return key === undefined || core_hasOwn.call( obj, key );\r\n    },\r\n\r\n    isEmptyObject: function( obj ) {\r\n        var name;\r\n        for ( name in obj ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    error: function( msg ) {\r\n        throw new Error( msg );\r\n    },\r\n\r\n    // data: string of html\r\n    // context (optional): If specified, the fragment will be created in this context, defaults to document\r\n    // scripts (optional): If true, will include scripts passed in the html string\r\n    parseHTML: function( data, context, scripts ) {\r\n        var parsed;\r\n        if ( !data || typeof data !== \"string\" ) {\r\n            return null;\r\n        }\r\n        if ( typeof context === \"boolean\" ) {\r\n            scripts = context;\r\n            context = 0;\r\n        }\r\n        context = context || document;\r\n\r\n        // Single tag\r\n        if ( (parsed = rsingleTag.exec( data )) ) {\r\n            return [ context.createElement( parsed[1] ) ];\r\n        }\r\n\r\n        parsed = jQuery.buildFragment( [ data ], context, scripts ? null : [] );\r\n        return jQuery.merge( [],\r\n            (parsed.cacheable ? jQuery.clone( parsed.fragment ) : parsed.fragment).childNodes );\r\n    },\r\n\r\n    parseJSON: function( data ) {\r\n        if ( !data || typeof data !== \"string\") {\r\n            return null;\r\n        }\r\n\r\n        // Make sure leading/trailing whitespace is removed (IE can\'t handle it)\r\n        data = jQuery.trim( data );\r\n\r\n        // Attempt to parse using the native JSON parser first\r\n        if ( window.JSON && window.JSON.parse ) {\r\n            return window.JSON.parse( data );\r\n        }\r\n\r\n        // Make sure the incoming data is actual JSON\r\n        // Logic borrowed from http://json.org/json2.js\r\n        if ( rvalidchars.test( data.replace( rvalidescape, \"@\" )\r\n            .replace( rvalidtokens, \"]\" )\r\n            .replace( rvalidbraces, \"\")) ) {\r\n\r\n            return ( new Function( \"return \" + data ) )();\r\n\r\n        }\r\n        jQuery.error( \"Invalid JSON: \" + data );\r\n    },\r\n\r\n    // Cross-browser xml parsing\r\n    parseXML: function( data ) {\r\n        var xml, tmp;\r\n        if ( !data || typeof data !== \"string\" ) {\r\n            return null;\r\n        }\r\n        try {\r\n            if ( window.DOMParser ) { // Standard\r\n                tmp = new DOMParser();\r\n                xml = tmp.parseFromString( data , \"text/xml\" );\r\n            } else { // IE\r\n                xml = new ActiveXObject( \"Microsoft.XMLDOM\" );\r\n                xml.async = \"false\";\r\n                xml.loadXML( data );\r\n            }\r\n        } catch( e ) {\r\n            xml = undefined;\r\n        }\r\n        if ( !xml || !xml.documentElement || xml.getElementsByTagName( \"parsererror\" ).length ) {\r\n            jQuery.error( \"Invalid XML: \" + data );\r\n        }\r\n        return xml;\r\n    },\r\n\r\n    noop: function() {},\r\n\r\n    // Evaluates a script in a global context\r\n    // Workarounds based on findings by Jim Driscoll\r\n    // http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\r\n    globalEval: function( data ) {\r\n        if ( data && core_rnotwhite.test( data ) ) {\r\n            // We use execScript on Internet Explorer\r\n            // We use an anonymous function so that context is window\r\n            // rather than jQuery in Firefox\r\n            ( window.execScript || function( data ) {\r\n                window[ \"eval\" ].call( window, data );\r\n            } )( data );\r\n        }\r\n    },\r\n\r\n    // Convert dashed to camelCase; used by the css and data modules\r\n    // Microsoft forgot to hump their vendor prefix (#9572)\r\n    camelCase: function( string ) {\r\n        return string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\r\n    },\r\n\r\n    nodeName: function( elem, name ) {\r\n        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\r\n    },\r\n\r\n    // args is for internal usage only\r\n    each: function( obj, callback, args ) {\r\n        var name,\r\n            i = 0,\r\n            length = obj.length,\r\n            isObj = length === undefined || jQuery.isFunction( obj );\r\n\r\n        if ( args ) {\r\n            if ( isObj ) {\r\n                for ( name in obj ) {\r\n                    if ( callback.apply( obj[ name ], args ) === false ) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for ( ; i < length; ) {\r\n                    if ( callback.apply( obj[ i++ ], args ) === false ) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n        // A special, fast, case for the most common use of each\r\n        } else {\r\n            if ( isObj ) {\r\n                for ( name in obj ) {\r\n                    if ( callback.call( obj[ name ], name, obj[ name ] ) === false ) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for ( ; i < length; ) {\r\n                    if ( callback.call( obj[ i ], i, obj[ i++ ] ) === false ) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return obj;\r\n    },\r\n\r\n    // Use native String.trim function wherever possible\r\n    trim: core_trim && !core_trim.call(\"\\uFEFF\\xA0\") ?\r\n        function( text ) {\r\n            return text == null ?\r\n                \"\" :\r\n                core_trim.call( text );\r\n        } :\r\n\r\n        // Otherwise use our own trimming functionality\r\n        function( text ) {\r\n            return text == null ?\r\n                \"\" :\r\n                ( text + \"\" ).replace( rtrim, \"\" );\r\n        },\r\n\r\n    // results is for internal usage only\r\n    makeArray: function( arr, results ) {\r\n        var type,\r\n            ret = results || [];\r\n\r\n        if ( arr != null ) {\r\n            // The window, strings (and functions) also have \'length\'\r\n            // Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930\r\n            type = jQuery.type( arr );\r\n\r\n            if ( arr.length == null || type === \"string\" || type === \"function\" || type === \"regexp\" || jQuery.isWindow( arr ) ) {\r\n                core_push.call( ret, arr );\r\n            } else {\r\n                jQuery.merge( ret, arr );\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    },\r\n\r\n    inArray: function( elem, arr, i ) {\r\n        var len;\r\n\r\n        if ( arr ) {\r\n            if ( core_indexOf ) {\r\n                return core_indexOf.call( arr, elem, i );\r\n            }\r\n\r\n            len = arr.length;\r\n            i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;\r\n\r\n            for ( ; i < len; i++ ) {\r\n                // Skip accessing in sparse arrays\r\n                if ( i in arr && arr[ i ] === elem ) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    },\r\n\r\n    merge: function( first, second ) {\r\n        var l = second.length,\r\n            i = first.length,\r\n            j = 0;\r\n\r\n        if ( typeof l === \"number\" ) {\r\n            for ( ; j < l; j++ ) {\r\n                first[ i++ ] = second[ j ];\r\n            }\r\n\r\n        } else {\r\n            while ( second[j] !== undefined ) {\r\n                first[ i++ ] = second[ j++ ];\r\n            }\r\n        }\r\n\r\n        first.length = i;\r\n\r\n        return first;\r\n    },\r\n\r\n    grep: function( elems, callback, inv ) {\r\n        var retVal,\r\n            ret = [],\r\n            i = 0,\r\n            length = elems.length;\r\n        inv = !!inv;\r\n\r\n        // Go through the array, only saving the items\r\n        // that pass the validator function\r\n        for ( ; i < length; i++ ) {\r\n            retVal = !!callback( elems[ i ], i );\r\n            if ( inv !== retVal ) {\r\n                ret.push( elems[ i ] );\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    },\r\n\r\n    // arg is for internal usage only\r\n    map: function( elems, callback, arg ) {\r\n        var value, key,\r\n            ret = [],\r\n            i = 0,\r\n            length = elems.length,\r\n            // jquery objects are treated as arrays\r\n            isArray = elems instanceof jQuery || length !== undefined && typeof length === \"number\" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;\r\n\r\n        // Go through the array, translating each of the items to their\r\n        if ( isArray ) {\r\n            for ( ; i < length; i++ ) {\r\n                value = callback( elems[ i ], i, arg );\r\n\r\n                if ( value != null ) {\r\n                    ret[ ret.length ] = value;\r\n                }\r\n            }\r\n\r\n        // Go through every key on the object,\r\n        } else {\r\n            for ( key in elems ) {\r\n                value = callback( elems[ key ], key, arg );\r\n\r\n                if ( value != null ) {\r\n                    ret[ ret.length ] = value;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Flatten any nested arrays\r\n        return ret.concat.apply( [], ret );\r\n    },\r\n\r\n    // A global GUID counter for objects\r\n    guid: 1,\r\n\r\n    // Bind a function to a context, optionally partially applying any\r\n    // arguments.\r\n    proxy: function( fn, context ) {\r\n        var tmp, args, proxy;\r\n\r\n        if ( typeof context === \"string\" ) {\r\n            tmp = fn[ context ];\r\n            context = fn;\r\n            fn = tmp;\r\n        }\r\n\r\n        // Quick check to determine if target is callable, in the spec\r\n        // this throws a TypeError, but we will just return undefined.\r\n        if ( !jQuery.isFunction( fn ) ) {\r\n            return undefined;\r\n        }\r\n\r\n        // Simulated bind\r\n        args = core_slice.call( arguments, 2 );\r\n        proxy = function() {\r\n            return fn.apply( context, args.concat( core_slice.call( arguments ) ) );\r\n        };\r\n\r\n        // Set the guid of unique handler to the same of original handler, so it can be removed\r\n        proxy.guid = fn.guid = fn.guid || jQuery.guid++;\r\n\r\n        return proxy;\r\n    },\r\n\r\n    // Multifunctional method to get and set values of a collection\r\n    // The value/s can optionally be executed if it\'s a function\r\n    access: function( elems, fn, key, value, chainable, emptyGet, pass ) {\r\n        var exec,\r\n            bulk = key == null,\r\n            i = 0,\r\n            length = elems.length;\r\n\r\n        // Sets many values\r\n        if ( key && typeof key === \"object\" ) {\r\n            for ( i in key ) {\r\n                jQuery.access( elems, fn, i, key[i], 1, emptyGet, value );\r\n            }\r\n            chainable = 1;\r\n\r\n        // Sets one value\r\n        } else if ( value !== undefined ) {\r\n            // Optionally, function values get executed if exec is true\r\n            exec = pass === undefined && jQuery.isFunction( value );\r\n\r\n            if ( bulk ) {\r\n                // Bulk operations only iterate when executing function values\r\n                if ( exec ) {\r\n                    exec = fn;\r\n                    fn = function( elem, key, value ) {\r\n                        return exec.call( jQuery( elem ), value );\r\n                    };\r\n\r\n                // Otherwise they run against the entire set\r\n                } else {\r\n                    fn.call( elems, value );\r\n                    fn = null;\r\n                }\r\n            }\r\n\r\n            if ( fn ) {\r\n                for (; i < length; i++ ) {\r\n                    fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );\r\n                }\r\n            }\r\n\r\n            chainable = 1;\r\n        }\r\n\r\n        return chainable ?\r\n            elems :\r\n\r\n            // Gets\r\n            bulk ?\r\n                fn.call( elems ) :\r\n                length ? fn( elems[0], key ) : emptyGet;\r\n    },\r\n\r\n    now: function() {\r\n        return ( new Date() ).getTime();\r\n    }\r\n});\r\n\r\njQuery.ready.promise = function( obj ) {\r\n    if ( !readyList ) {\r\n\r\n        readyList = jQuery.Deferred();\r\n\r\n        // Catch cases where $(document).ready() is called after the browser event has already occurred.\r\n        // we once tried to use readyState \"interactive\" here, but it caused issues like the one\r\n        // discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\r\n        if ( document.readyState === \"complete\" ) {\r\n            // Handle it asynchronously to allow scripts the opportunity to delay ready\r\n            setTimeout( jQuery.ready, 1 );\r\n\r\n        // Standards-based browsers support DOMContentLoaded\r\n        } else if ( document.addEventListener ) {\r\n            // Use the handy event callback\r\n            document.addEventListener( \"DOMContentLoaded\", DOMContentLoaded, false );\r\n\r\n            // A fallback to window.onload, that will always work\r\n            window.addEventListener( \"load\", jQuery.ready, false );\r\n\r\n        // If IE event model is used\r\n        } else {\r\n            // Ensure firing before onload, maybe late but safe also for iframes\r\n            document.attachEvent( \"onreadystatechange\", DOMContentLoaded );\r\n\r\n            // A fallback to window.onload, that will always work\r\n            window.attachEvent( \"onload\", jQuery.ready );\r\n\r\n            // If IE and not a frame\r\n            // continually check to see if the document is ready\r\n            var top = false;\r\n\r\n            try {\r\n                top = window.frameElement == null && document.documentElement;\r\n            } catch(e) {}\r\n\r\n            if ( top && top.doScroll ) {\r\n                (function doScrollCheck() {\r\n                    if ( !jQuery.isReady ) {\r\n\r\n                        try {\r\n                            // Use the trick by Diego Perini\r\n                            // http://javascript.nwbox.com/IEContentLoaded/\r\n                            top.doScroll(\"left\");\r\n                        } catch(e) {\r\n                            return setTimeout( doScrollCheck, 50 );\r\n                        }\r\n\r\n                        // and execute any waiting functions\r\n                        jQuery.ready();\r\n                    }\r\n                })();\r\n            }\r\n        }\r\n    }\r\n    return readyList.promise( obj );\r\n};\r\n\r\n// Populate the class2type map\r\njQuery.each(\"Boolean Number String Function Array Date RegExp Object\".split(\" \"), function(i, name) {\r\n    class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\r\n});\r\n\r\n// All jQuery objects should point back to these\r\nrootjQuery = jQuery(document);\r\n// String to Object options format cache\r\nvar optionsCache = {};\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\nfunction createOptions( options ) {\r\n    var object = optionsCache[ options ] = {};\r\n    jQuery.each( options.split( core_rspace ), function( _, flag ) {\r\n        object[ flag ] = true;\r\n    });\r\n    return object;\r\n}\r\n\r\n/*\r\n * Create a callback list using the following parameters:\r\n *\r\n *  options: an optional list of space-separated options that will change how\r\n *          the callback list behaves or a more traditional option object\r\n *\r\n * By default a callback list will act like an event callback list and can be\r\n * \"fired\" multiple times.\r\n *\r\n * Possible options:\r\n *\r\n *  once:           will ensure the callback list can only be fired once (like a Deferred)\r\n *\r\n *  memory:         will keep track of previous values and will call any callback added\r\n *                  after the list has been fired right away with the latest \"memorized\"\r\n *                  values (like a Deferred)\r\n *\r\n *  unique:         will ensure a callback can only be added once (no duplicate in the list)\r\n *\r\n *  stopOnFalse:    interrupt callings when a callback returns false\r\n *\r\n */\r\njQuery.Callbacks = function( options ) {\r\n\r\n    // Convert options from String-formatted to Object-formatted if needed\r\n    // (we check in cache first)\r\n    options = typeof options === \"string\" ?\r\n        ( optionsCache[ options ] || createOptions( options ) ) :\r\n        jQuery.extend( {}, options );\r\n\r\n    var // Last fire value (for non-forgettable lists)\r\n        memory,\r\n        // Flag to know if list was already fired\r\n        fired,\r\n        // Flag to know if list is currently firing\r\n        firing,\r\n        // First callback to fire (used internally by add and fireWith)\r\n        firingStart,\r\n        // End of the loop when firing\r\n        firingLength,\r\n        // Index of currently firing callback (modified by remove if needed)\r\n        firingIndex,\r\n        // Actual callback list\r\n        list = [],\r\n        // Stack of fire calls for repeatable lists\r\n        stack = !options.once && [],\r\n        // Fire callbacks\r\n        fire = function( data ) {\r\n            memory = options.memory && data;\r\n            fired = true;\r\n            firingIndex = firingStart || 0;\r\n            firingStart = 0;\r\n            firingLength = list.length;\r\n            firing = true;\r\n            for ( ; list && firingIndex < firingLength; firingIndex++ ) {\r\n                if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\r\n                    memory = false; // To prevent further calls using add\r\n                    break;\r\n                }\r\n            }\r\n            firing = false;\r\n            if ( list ) {\r\n                if ( stack ) {\r\n                    if ( stack.length ) {\r\n                        fire( stack.shift() );\r\n                    }\r\n                } else if ( memory ) {\r\n                    list = [];\r\n                } else {\r\n                    self.disable();\r\n                }\r\n            }\r\n        },\r\n        // Actual Callbacks object\r\n        self = {\r\n            // Add a callback or a collection of callbacks to the list\r\n            add: function() {\r\n                if ( list ) {\r\n                    // First, we save the current length\r\n                    var start = list.length;\r\n                    (function add( args ) {\r\n                        jQuery.each( args, function( _, arg ) {\r\n                            var type = jQuery.type( arg );\r\n                            if ( type === \"function\" ) {\r\n                                if ( !options.unique || !self.has( arg ) ) {\r\n                                    list.push( arg );\r\n                                }\r\n                            } else if ( arg && arg.length && type !== \"string\" ) {\r\n                                // Inspect recursively\r\n                                add( arg );\r\n                            }\r\n                        });\r\n                    })( arguments );\r\n                    // Do we need to add the callbacks to the\r\n                    // current firing batch?\r\n                    if ( firing ) {\r\n                        firingLength = list.length;\r\n                    // With memory, if we\'re not firing then\r\n                    // we should call right away\r\n                    } else if ( memory ) {\r\n                        firingStart = start;\r\n                        fire( memory );\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n            // Remove a callback from the list\r\n            remove: function() {\r\n                if ( list ) {\r\n                    jQuery.each( arguments, function( _, arg ) {\r\n                        var index;\r\n                        while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\r\n                            list.splice( index, 1 );\r\n                            // Handle firing indexes\r\n                            if ( firing ) {\r\n                                if ( index <= firingLength ) {\r\n                                    firingLength--;\r\n                                }\r\n                                if ( index <= firingIndex ) {\r\n                                    firingIndex--;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // Control if a given callback is in the list\r\n            has: function( fn ) {\r\n                return jQuery.inArray( fn, list ) > -1;\r\n            },\r\n            // Remove all callbacks from the list\r\n            empty: function() {\r\n                list = [];\r\n                return this;\r\n            },\r\n            // Have the list do nothing anymore\r\n            disable: function() {\r\n                list = stack = memory = undefined;\r\n                return this;\r\n            },\r\n            // Is it disabled?\r\n            disabled: function() {\r\n                return !list;\r\n            },\r\n            // Lock the list in its current state\r\n            lock: function() {\r\n                stack = undefined;\r\n                if ( !memory ) {\r\n                    self.disable();\r\n                }\r\n                return this;\r\n            },\r\n            // Is it locked?\r\n            locked: function() {\r\n                return !stack;\r\n            },\r\n            // Call all callbacks with the given context and arguments\r\n            fireWith: function( context, args ) {\r\n                args = args || [];\r\n                args = [ context, args.slice ? args.slice() : args ];\r\n                if ( list && ( !fired || stack ) ) {\r\n                    if ( firing ) {\r\n                        stack.push( args );\r\n                    } else {\r\n                        fire( args );\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n            // Call all the callbacks with the given arguments\r\n            fire: function() {\r\n                self.fireWith( this, arguments );\r\n                return this;\r\n            },\r\n            // To know if the callbacks have already been called at least once\r\n            fired: function() {\r\n                return !!fired;\r\n            }\r\n        };\r\n\r\n    return self;\r\n};\r\njQuery.extend({\r\n\r\n    Deferred: function( func ) {\r\n        var tuples = [\r\n                // action, add listener, listener list, final state\r\n                [ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\r\n                [ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\r\n                [ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\r\n            ],\r\n            state = \"pending\",\r\n            promise = {\r\n                state: function() {\r\n                    return state;\r\n                },\r\n                always: function() {\r\n                    deferred.done( arguments ).fail( arguments );\r\n                    return this;\r\n                },\r\n                then: function( /* fnDone, fnFail, fnProgress */ ) {\r\n                    var fns = arguments;\r\n                    return jQuery.Deferred(function( newDefer ) {\r\n                        jQuery.each( tuples, function( i, tuple ) {\r\n                            var action = tuple[ 0 ],\r\n                                fn = fns[ i ];\r\n                            // deferred[ done | fail | progress ] for forwarding actions to newDefer\r\n                            deferred[ tuple[1] ]( jQuery.isFunction( fn ) ?\r\n                                function() {\r\n                                    var returned = fn.apply( this, arguments );\r\n                                    if ( returned && jQuery.isFunction( returned.promise ) ) {\r\n                                        returned.promise()\r\n                                            .done( newDefer.resolve )\r\n                                            .fail( newDefer.reject )\r\n                                            .progress( newDefer.notify );\r\n                                    } else {\r\n                                        newDefer[ action + \"With\" ]( this === deferred ? newDefer : this, [ returned ] );\r\n                                    }\r\n                                } :\r\n                                newDefer[ action ]\r\n                            );\r\n                        });\r\n                        fns = null;\r\n                    }).promise();\r\n                },\r\n                // Get a promise for this deferred\r\n                // If obj is provided, the promise aspect is added to the object\r\n                promise: function( obj ) {\r\n                    return obj != null ? jQuery.extend( obj, promise ) : promise;\r\n                }\r\n            },\r\n            deferred = {};\r\n\r\n        // Keep pipe for back-compat\r\n        promise.pipe = promise.then;\r\n\r\n        // Add list-specific methods\r\n        jQuery.each( tuples, function( i, tuple ) {\r\n            var list = tuple[ 2 ],\r\n                stateString = tuple[ 3 ];\r\n\r\n            // promise[ done | fail | progress ] = list.add\r\n            promise[ tuple[1] ] = list.add;\r\n\r\n            // Handle state\r\n            if ( stateString ) {\r\n                list.add(function() {\r\n                    // state = [ resolved | rejected ]\r\n                    state = stateString;\r\n\r\n                // [ reject_list | resolve_list ].disable; progress_list.lock\r\n                }, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\r\n            }\r\n\r\n            // deferred[ resolve | reject | notify ] = list.fire\r\n            deferred[ tuple[0] ] = list.fire;\r\n            deferred[ tuple[0] + \"With\" ] = list.fireWith;\r\n        });\r\n\r\n        // Make the deferred a promise\r\n        promise.promise( deferred );\r\n\r\n        // Call given func if any\r\n        if ( func ) {\r\n            func.call( deferred, deferred );\r\n        }\r\n\r\n        // All done!\r\n        return deferred;\r\n    },\r\n\r\n    // Deferred helper\r\n    when: function( subordinate /* , ..., subordinateN */ ) {\r\n        var i = 0,\r\n            resolveValues = core_slice.call( arguments ),\r\n            length = resolveValues.length,\r\n\r\n            // the count of uncompleted subordinates\r\n            remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\r\n\r\n            // the master Deferred. If resolveValues consist of only a single Deferred, just use that.\r\n            deferred = remaining === 1 ? subordinate : jQuery.Deferred(),\r\n\r\n            // Update function for both resolve and progress values\r\n            updateFunc = function( i, contexts, values ) {\r\n                return function( value ) {\r\n                    contexts[ i ] = this;\r\n                    values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;\r\n                    if( values === progressValues ) {\r\n                        deferred.notifyWith( contexts, values );\r\n                    } else if ( !( --remaining ) ) {\r\n                        deferred.resolveWith( contexts, values );\r\n                    }\r\n                };\r\n            },\r\n\r\n            progressValues, progressContexts, resolveContexts;\r\n\r\n        // add listeners to Deferred subordinates; treat others as resolved\r\n        if ( length > 1 ) {\r\n            progressValues = new Array( length );\r\n            progressContexts = new Array( length );\r\n            resolveContexts = new Array( length );\r\n            for ( ; i < length; i++ ) {\r\n                if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\r\n                    resolveValues[ i ].promise()\r\n                        .done( updateFunc( i, resolveContexts, resolveValues ) )\r\n                        .fail( deferred.reject )\r\n                        .progress( updateFunc( i, progressContexts, progressValues ) );\r\n                } else {\r\n                    --remaining;\r\n                }\r\n            }\r\n        }\r\n\r\n        // if we\'re not waiting on anything, resolve the master\r\n        if ( !remaining ) {\r\n            deferred.resolveWith( resolveContexts, resolveValues );\r\n        }\r\n\r\n        return deferred.promise();\r\n    }\r\n});\r\njQuery.support = (function() {\r\n\r\n    var support,\r\n        all,\r\n        a,\r\n        select,\r\n        opt,\r\n        input,\r\n        fragment,\r\n        eventName,\r\n        i,\r\n        isSupported,\r\n        clickFn,\r\n        div = document.createElement(\"div\");\r\n\r\n    // Setup\r\n    div.setAttribute( \"className\", \"t\" );\r\n    div.innerHTML = \"  <link/><table></table><a href=\'/a\'>a</a><input type=\'checkbox\'/>\";\r\n\r\n    // Support tests won\'t run in some limited or non-browser environments\r\n    all = div.getElementsByTagName(\"*\");\r\n    a = div.getElementsByTagName(\"a\")[ 0 ];\r\n    if ( !all || !a || !all.length ) {\r\n        return {};\r\n    }\r\n\r\n    // First batch of tests\r\n    select = document.createElement(\"select\");\r\n    opt = select.appendChild( document.createElement(\"option\") );\r\n    input = div.getElementsByTagName(\"input\")[ 0 ];\r\n\r\n    a.style.cssText = \"top:1px;float:left;opacity:.5\";\r\n    support = {\r\n        // IE strips leading whitespace when .innerHTML is used\r\n        leadingWhitespace: ( div.firstChild.nodeType === 3 ),\r\n\r\n        // Make sure that tbody elements aren\'t automatically inserted\r\n        // IE will insert them into empty tables\r\n        tbody: !div.getElementsByTagName(\"tbody\").length,\r\n\r\n        // Make sure that link elements get serialized correctly by innerHTML\r\n        // This requires a wrapper element in IE\r\n        htmlSerialize: !!div.getElementsByTagName(\"link\").length,\r\n\r\n        // Get the style information from getAttribute\r\n        // (IE uses .cssText instead)\r\n        style: /top/.test( a.getAttribute(\"style\") ),\r\n\r\n        // Make sure that URLs aren\'t manipulated\r\n        // (IE normalizes it by default)\r\n        hrefNormalized: ( a.getAttribute(\"href\") === \"/a\" ),\r\n\r\n        // Make sure that element opacity exists\r\n        // (IE uses filter instead)\r\n        // Use a regex to work around a WebKit issue. See #5145\r\n        opacity: /^0.5/.test( a.style.opacity ),\r\n\r\n        // Verify style float existence\r\n        // (IE uses styleFloat instead of cssFloat)\r\n        cssFloat: !!a.style.cssFloat,\r\n\r\n        // Make sure that if no value is specified for a checkbox\r\n        // that it defaults to \"on\".\r\n        // (WebKit defaults to \"\" instead)\r\n        checkOn: ( input.value === \"on\" ),\r\n\r\n        // Make sure that a selected-by-default option has a working selected property.\r\n        // (WebKit defaults to false instead of true, IE too, if it\'s in an optgroup)\r\n        optSelected: opt.selected,\r\n\r\n        // Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)\r\n        getSetAttribute: div.className !== \"t\",\r\n\r\n        // Tests for enctype support on a form (#6743)\r\n        enctype: !!document.createElement(\"form\").enctype,\r\n\r\n        // Makes sure cloning an html5 element does not cause problems\r\n        // Where outerHTML is undefined, this still works\r\n        html5Clone: document.createElement(\"nav\").cloneNode( true ).outerHTML !== \"<:nav></:nav>\",\r\n\r\n        // jQuery.support.boxModel DEPRECATED in 1.8 since we don\'t support Quirks Mode\r\n        boxModel: ( document.compatMode === \"CSS1Compat\" ),\r\n\r\n        // Will be defined later\r\n        submitBubbles: true,\r\n        changeBubbles: true,\r\n        focusinBubbles: false,\r\n        deleteExpando: true,\r\n        noCloneEvent: true,\r\n        inlineBlockNeedsLayout: false,\r\n        shrinkWrapBlocks: false,\r\n        reliableMarginRight: true,\r\n        boxSizingReliable: true,\r\n        pixelPosition: false\r\n    };\r\n\r\n    // Make sure checked status is properly cloned\r\n    input.checked = true;\r\n    support.noCloneChecked = input.cloneNode( true ).checked;\r\n\r\n    // Make sure that the options inside disabled selects aren\'t marked as disabled\r\n    // (WebKit marks them as disabled)\r\n    select.disabled = true;\r\n    support.optDisabled = !opt.disabled;\r\n\r\n    // Test to see if it\'s possible to delete an expando from an element\r\n    // Fails in Internet Explorer\r\n    try {\r\n        delete div.test;\r\n    } catch( e ) {\r\n        support.deleteExpando = false;\r\n    }\r\n\r\n    if ( !div.addEventListener && div.attachEvent && div.fireEvent ) {\r\n        div.attachEvent( \"onclick\", clickFn = function() {\r\n            // Cloning a node shouldn\'t copy over any\r\n            // bound event handlers (IE does this)\r\n            support.noCloneEvent = false;\r\n        });\r\n        div.cloneNode( true ).fireEvent(\"onclick\");\r\n        div.detachEvent( \"onclick\", clickFn );\r\n    }\r\n\r\n    // Check if a radio maintains its value\r\n    // after being appended to the DOM\r\n    input = document.createElement(\"input\");\r\n    input.value = \"t\";\r\n    input.setAttribute( \"type\", \"radio\" );\r\n    support.radioValue = input.value === \"t\";\r\n\r\n    input.setAttribute( \"checked\", \"checked\" );\r\n\r\n    // #11217 - WebKit loses check when the name is after the checked attribute\r\n    input.setAttribute( \"name\", \"t\" );\r\n\r\n    div.appendChild( input );\r\n    fragment = document.createDocumentFragment();\r\n    fragment.appendChild( div.lastChild );\r\n\r\n    // WebKit doesn\'t clone checked state correctly in fragments\r\n    support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;\r\n\r\n    // Check if a disconnected checkbox will retain its checked\r\n    // value of true after appended to the DOM (IE6/7)\r\n    support.appendChecked = input.checked;\r\n\r\n    fragment.removeChild( input );\r\n    fragment.appendChild( div );\r\n\r\n    // Technique from Juriy Zaytsev\r\n    // http://perfectionkills.com/detecting-event-support-without-browser-sniffing/\r\n    // We only care about the case where non-standard event systems\r\n    // are used, namely in IE. Short-circuiting here helps us to\r\n    // avoid an eval call (in setAttribute) which can cause CSP\r\n    // to go haywire. See: https://developer.mozilla.org/en/Security/CSP\r\n    if ( div.attachEvent ) {\r\n        for ( i in {\r\n            submit: true,\r\n            change: true,\r\n            focusin: true\r\n        }) {\r\n            eventName = \"on\" + i;\r\n            isSupported = ( eventName in div );\r\n            if ( !isSupported ) {\r\n                div.setAttribute( eventName, \"return;\" );\r\n                isSupported = ( typeof div[ eventName ] === \"function\" );\r\n            }\r\n            support[ i + \"Bubbles\" ] = isSupported;\r\n        }\r\n    }\r\n\r\n    // Run tests that need a body at doc ready\r\n    jQuery(function() {\r\n        var container, div, tds, marginDiv,\r\n            divReset = \"padding:0;margin:0;border:0;display:block;overflow:hidden;\",\r\n            body = document.getElementsByTagName(\"body\")[0];\r\n\r\n        if ( !body ) {\r\n            // Return for frameset docs that don\'t have a body\r\n            return;\r\n        }\r\n\r\n        container = document.createElement(\"div\");\r\n        container.style.cssText = \"visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px\";\r\n        body.insertBefore( container, body.firstChild );\r\n\r\n        // Construct the test element\r\n        div = document.createElement(\"div\");\r\n        container.appendChild( div );\r\n\r\n        // Check if table cells still have offsetWidth/Height when they are set\r\n        // to display:none and there are still other visible table cells in a\r\n        // table row; if so, offsetWidth/Height are not reliable for use when\r\n        // determining if an element has been hidden directly using\r\n        // display:none (it is still safe to use offsets if a parent element is\r\n        // hidden; don safety goggles and see bug #4512 for more information).\r\n        // (only IE 8 fails this test)\r\n        div.innerHTML = \"<table><tr><td></td><td>t</td></tr></table>\";\r\n        tds = div.getElementsByTagName(\"td\");\r\n        tds[ 0 ].style.cssText = \"padding:0;margin:0;border:0;display:none\";\r\n        isSupported = ( tds[ 0 ].offsetHeight === 0 );\r\n\r\n        tds[ 0 ].style.display = \"\";\r\n        tds[ 1 ].style.display = \"none\";\r\n\r\n        // Check if empty table cells still have offsetWidth/Height\r\n        // (IE <= 8 fail this test)\r\n        support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );\r\n\r\n        // Check box-sizing and margin behavior\r\n        div.innerHTML = \"\";\r\n        div.style.cssText = \"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\";\r\n        support.boxSizing = ( div.offsetWidth === 4 );\r\n        support.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== 1 );\r\n\r\n        // NOTE: To any future maintainer, we\'ve window.getComputedStyle\r\n        // because jsdom on node.js will break without it.\r\n        if ( window.getComputedStyle ) {\r\n            support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== \"1%\";\r\n            support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: \"4px\" } ).width === \"4px\";\r\n\r\n            // Check if div with explicit width and no margin-right incorrectly\r\n            // gets computed margin-right based on width of container. For more\r\n            // info see bug #3333\r\n            // Fails in WebKit before Feb 2011 nightlies\r\n            // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\r\n            marginDiv = document.createElement(\"div\");\r\n            marginDiv.style.cssText = div.style.cssText = divReset;\r\n            marginDiv.style.marginRight = marginDiv.style.width = \"0\";\r\n            div.style.width = \"1px\";\r\n            div.appendChild( marginDiv );\r\n            support.reliableMarginRight =\r\n                !parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );\r\n        }\r\n\r\n        if ( typeof div.style.zoom !== \"undefined\" ) {\r\n            // Check if natively block-level elements act like inline-block\r\n            // elements when setting their display to \'inline\' and giving\r\n            // them layout\r\n            // (IE < 8 does this)\r\n            div.innerHTML = \"\";\r\n            div.style.cssText = divReset + \"width:1px;padding:1px;display:inline;zoom:1\";\r\n            support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );\r\n\r\n            // Check if elements with layout shrink-wrap their children\r\n            // (IE 6 does this)\r\n            div.style.display = \"block\";\r\n            div.style.overflow = \"visible\";\r\n            div.innerHTML = \"<div></div>\";\r\n            div.firstChild.style.width = \"5px\";\r\n            support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );\r\n\r\n            container.style.zoom = 1;\r\n        }\r\n\r\n        // Null elements to avoid leaks in IE\r\n        body.removeChild( container );\r\n        container = div = tds = marginDiv = null;\r\n    });\r\n\r\n    // Null elements to avoid leaks in IE\r\n    fragment.removeChild( div );\r\n    all = a = select = opt = input = fragment = div = null;\r\n\r\n    return support;\r\n})();\r\nvar rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n    rmultiDash = /([A-Z])/g;\r\n\r\njQuery.extend({\r\n    cache: {},\r\n\r\n    deletedIds: [],\r\n\r\n    // Remove at next major release (1.9/2.0)\r\n    uuid: 0,\r\n\r\n    // Unique for each copy of jQuery on the page\r\n    // Non-digits removed to match rinlinejQuery\r\n    expando: \"jQuery\" + ( jQuery.fn.jquery + Math.random() ).replace( /\\D/g, \"\" ),\r\n\r\n    // The following elements throw uncatchable exceptions if you\r\n    // attempt to add expando properties to them.\r\n    noData: {\r\n        \"embed\": true,\r\n        // Ban all objects except for Flash (which handle expandos)\r\n        \"object\": \"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",\r\n        \"applet\": true\r\n    },\r\n\r\n    hasData: function( elem ) {\r\n        elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];\r\n        return !!elem && !isEmptyDataObject( elem );\r\n    },\r\n\r\n    data: function( elem, name, data, pvt /* Internal Use Only */ ) {\r\n        if ( !jQuery.acceptData( elem ) ) {\r\n            return;\r\n        }\r\n\r\n        var thisCache, ret,\r\n            internalKey = jQuery.expando,\r\n            getByName = typeof name === \"string\",\r\n\r\n            // We have to handle DOM nodes and JS objects differently because IE6-7\r\n            // can\'t GC object references properly across the DOM-JS boundary\r\n            isNode = elem.nodeType,\r\n\r\n            // Only DOM nodes need the global jQuery cache; JS object data is\r\n            // attached directly to the object so GC can occur automatically\r\n            cache = isNode ? jQuery.cache : elem,\r\n\r\n            // Only defining an ID for JS objects if its cache already exists allows\r\n            // the code to shortcut on the same path as a DOM node with no cache\r\n            id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;\r\n\r\n        // Avoid doing any more work than we need to when trying to get data on an\r\n        // object that has no data at all\r\n        if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && getByName && data === undefined ) {\r\n            return;\r\n        }\r\n\r\n        if ( !id ) {\r\n            // Only DOM nodes need a new unique ID for each element since their data\r\n            // ends up in the global cache\r\n            if ( isNode ) {\r\n                elem[ internalKey ] = id = jQuery.deletedIds.pop() || jQuery.guid++;\r\n            } else {\r\n                id = internalKey;\r\n            }\r\n        }\r\n\r\n        if ( !cache[ id ] ) {\r\n            cache[ id ] = {};\r\n\r\n            // Avoids exposing jQuery metadata on plain JS objects when the object\r\n            // is serialized using JSON.stringify\r\n            if ( !isNode ) {\r\n                cache[ id ].toJSON = jQuery.noop;\r\n            }\r\n        }\r\n\r\n        // An object can be passed to jQuery.data instead of a key/value pair; this gets\r\n        // shallow copied over onto the existing cache\r\n        if ( typeof name === \"object\" || typeof name === \"function\" ) {\r\n            if ( pvt ) {\r\n                cache[ id ] = jQuery.extend( cache[ id ], name );\r\n            } else {\r\n                cache[ id ].data = jQuery.extend( cache[ id ].data, name );\r\n            }\r\n        }\r\n\r\n        thisCache = cache[ id ];\r\n\r\n        // jQuery data() is stored in a separate object inside the object\'s internal data\r\n        // cache in order to avoid key collisions between internal data and user-defined\r\n        // data.\r\n        if ( !pvt ) {\r\n            if ( !thisCache.data ) {\r\n                thisCache.data = {};\r\n            }\r\n\r\n            thisCache = thisCache.data;\r\n        }\r\n\r\n        if ( data !== undefined ) {\r\n            thisCache[ jQuery.camelCase( name ) ] = data;\r\n        }\r\n\r\n        // Check for both converted-to-camel and non-converted data property names\r\n        // If a data property was specified\r\n        if ( getByName ) {\r\n\r\n            // First Try to find as-is property data\r\n            ret = thisCache[ name ];\r\n\r\n            // Test for null|undefined property data\r\n            if ( ret == null ) {\r\n\r\n                // Try to find the camelCased property\r\n                ret = thisCache[ jQuery.camelCase( name ) ];\r\n            }\r\n        } else {\r\n            ret = thisCache;\r\n        }\r\n\r\n        return ret;\r\n    },\r\n\r\n    removeData: function( elem, name, pvt /* Internal Use Only */ ) {\r\n        if ( !jQuery.acceptData( elem ) ) {\r\n            return;\r\n        }\r\n\r\n        var thisCache, i, l,\r\n\r\n            isNode = elem.nodeType,\r\n\r\n            // See jQuery.data for more information\r\n            cache = isNode ? jQuery.cache : elem,\r\n            id = isNode ? elem[ jQuery.expando ] : jQuery.expando;\r\n\r\n        // If there is already no cache entry for this object, there is no\r\n        // purpose in continuing\r\n        if ( !cache[ id ] ) {\r\n            return;\r\n        }\r\n\r\n        if ( name ) {\r\n\r\n            thisCache = pvt ? cache[ id ] : cache[ id ].data;\r\n\r\n            if ( thisCache ) {\r\n\r\n                // Support array or space separated string names for data keys\r\n                if ( !jQuery.isArray( name ) ) {\r\n\r\n                    // try the string as a key before any manipulation\r\n                    if ( name in thisCache ) {\r\n                        name = [ name ];\r\n                    } else {\r\n\r\n                        // split the camel cased version by spaces unless a key with the spaces exists\r\n                        name = jQuery.camelCase( name );\r\n                        if ( name in thisCache ) {\r\n                            name = [ name ];\r\n                        } else {\r\n                            name = name.split(\" \");\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for ( i = 0, l = name.length; i < l; i++ ) {\r\n                    delete thisCache[ name[i] ];\r\n                }\r\n\r\n                // If there is no data left in the cache, we want to continue\r\n                // and let the cache object itself get destroyed\r\n                if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // See jQuery.data for more information\r\n        if ( !pvt ) {\r\n            delete cache[ id ].data;\r\n\r\n            // Don\'t destroy the parent cache unless the internal data object\r\n            // had been the only thing left in it\r\n            if ( !isEmptyDataObject( cache[ id ] ) ) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Destroy the cache\r\n        if ( isNode ) {\r\n            jQuery.cleanData( [ elem ], true );\r\n\r\n        // Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)\r\n        } else if ( jQuery.support.deleteExpando || cache != cache.window ) {\r\n            delete cache[ id ];\r\n\r\n        // When all else fails, null\r\n        } else {\r\n            cache[ id ] = null;\r\n        }\r\n    },\r\n\r\n    // For internal use only.\r\n    _data: function( elem, name, data ) {\r\n        return jQuery.data( elem, name, data, true );\r\n    },\r\n\r\n    // A method for determining if a DOM node can handle the data expando\r\n    acceptData: function( elem ) {\r\n        var noData = elem.nodeName && jQuery.noData[ elem.nodeName.toLowerCase() ];\r\n\r\n        // nodes accept data unless otherwise specified; rejection can be conditional\r\n        return !noData || noData !== true && elem.getAttribute(\"classid\") === noData;\r\n    }\r\n});\r\n\r\njQuery.fn.extend({\r\n    data: function( key, value ) {\r\n        var parts, part, attr, name, l,\r\n            elem = this[0],\r\n            i = 0,\r\n            data = null;\r\n\r\n        // Gets all values\r\n        if ( key === undefined ) {\r\n            if ( this.length ) {\r\n                data = jQuery.data( elem );\r\n\r\n                if ( elem.nodeType === 1 && !jQuery._data( elem, \"parsedAttrs\" ) ) {\r\n                    attr = elem.attributes;\r\n                    for ( l = attr.length; i < l; i++ ) {\r\n                        name = attr[i].name;\r\n\r\n                        if ( !name.indexOf( \"data-\" ) ) {\r\n                            name = jQuery.camelCase( name.substring(5) );\r\n\r\n                            dataAttr( elem, name, data[ name ] );\r\n                        }\r\n                    }\r\n                    jQuery._data( elem, \"parsedAttrs\", true );\r\n                }\r\n            }\r\n\r\n            return data;\r\n        }\r\n\r\n        // Sets multiple values\r\n        if ( typeof key === \"object\" ) {\r\n            return this.each(function() {\r\n                jQuery.data( this, key );\r\n            });\r\n        }\r\n\r\n        parts = key.split( \".\", 2 );\r\n        parts[1] = parts[1] ? \".\" + parts[1] : \"\";\r\n        part = parts[1] + \"!\";\r\n\r\n        return jQuery.access( this, function( value ) {\r\n\r\n            if ( value === undefined ) {\r\n                data = this.triggerHandler( \"getData\" + part, [ parts[0] ] );\r\n\r\n                // Try to fetch any internally stored data first\r\n                if ( data === undefined && elem ) {\r\n                    data = jQuery.data( elem, key );\r\n                    data = dataAttr( elem, key, data );\r\n                }\r\n\r\n                return data === undefined && parts[1] ?\r\n                    this.data( parts[0] ) :\r\n                    data;\r\n            }\r\n\r\n            parts[1] = value;\r\n            this.each(function() {\r\n                var self = jQuery( this );\r\n\r\n                self.triggerHandler( \"setData\" + part, parts );\r\n                jQuery.data( this, key, value );\r\n                self.triggerHandler( \"changeData\" + part, parts );\r\n            });\r\n        }, null, value, arguments.length > 1, null, false );\r\n    },\r\n\r\n    removeData: function( key ) {\r\n        return this.each(function() {\r\n            jQuery.removeData( this, key );\r\n        });\r\n    }\r\n});\r\n\r\nfunction dataAttr( elem, key, data ) {\r\n    // If nothing was found internally, try to fetch any\r\n    // data from the HTML5 data-* attribute\r\n    if ( data === undefined && elem.nodeType === 1 ) {\r\n\r\n        var name = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\r\n\r\n        data = elem.getAttribute( name );\r\n\r\n        if ( typeof data === \"string\" ) {\r\n            try {\r\n                data = data === \"true\" ? true :\r\n                data === \"false\" ? false :\r\n                data === \"null\" ? null :\r\n                // Only convert to a number if it doesn\'t change the string\r\n                +data + \"\" === data ? +data :\r\n                rbrace.test( data ) ? jQuery.parseJSON( data ) :\r\n                    data;\r\n            } catch( e ) {}\r\n\r\n            // Make sure we set the data so it isn\'t changed later\r\n            jQuery.data( elem, key, data );\r\n\r\n        } else {\r\n            data = undefined;\r\n        }\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\n// checks a cache object for emptiness\r\nfunction isEmptyDataObject( obj ) {\r\n    var name;\r\n    for ( name in obj ) {\r\n\r\n        // if the public data object is empty, the private is still empty\r\n        if ( name === \"data\" && jQuery.isEmptyObject( obj[name] ) ) {\r\n            continue;\r\n        }\r\n        if ( name !== \"toJSON\" ) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\njQuery.extend({\r\n    queue: function( elem, type, data ) {\r\n        var queue;\r\n\r\n        if ( elem ) {\r\n            type = ( type || \"fx\" ) + \"queue\";\r\n            queue = jQuery._data( elem, type );\r\n\r\n            // Speed up dequeue by getting out quickly if this is just a lookup\r\n            if ( data ) {\r\n                if ( !queue || jQuery.isArray(data) ) {\r\n                    queue = jQuery._data( elem, type, jQuery.makeArray(data) );\r\n                } else {\r\n                    queue.push( data );\r\n                }\r\n            }\r\n            return queue || [];\r\n        }\r\n    },\r\n\r\n    dequeue: function( elem, type ) {\r\n        type = type || \"fx\";\r\n\r\n        var queue = jQuery.queue( elem, type ),\r\n            startLength = queue.length,\r\n            fn = queue.shift(),\r\n            hooks = jQuery._queueHooks( elem, type ),\r\n            next = function() {\r\n                jQuery.dequeue( elem, type );\r\n            };\r\n\r\n        // If the fx queue is dequeued, always remove the progress sentinel\r\n        if ( fn === \"inprogress\" ) {\r\n            fn = queue.shift();\r\n            startLength--;\r\n        }\r\n\r\n        if ( fn ) {\r\n\r\n            // Add a progress sentinel to prevent the fx queue from being\r\n            // automatically dequeued\r\n            if ( type === \"fx\" ) {\r\n                queue.unshift( \"inprogress\" );\r\n            }\r\n\r\n            // clear up the last queue stop function\r\n            delete hooks.stop;\r\n            fn.call( elem, next, hooks );\r\n        }\r\n\r\n        if ( !startLength && hooks ) {\r\n            hooks.empty.fire();\r\n        }\r\n    },\r\n\r\n    // not intended for public consumption - generates a queueHooks object, or returns the current one\r\n    _queueHooks: function( elem, type ) {\r\n        var key = type + \"queueHooks\";\r\n        return jQuery._data( elem, key ) || jQuery._data( elem, key, {\r\n            empty: jQuery.Callbacks(\"once memory\").add(function() {\r\n                jQuery.removeData( elem, type + \"queue\", true );\r\n                jQuery.removeData( elem, key, true );\r\n            })\r\n        });\r\n    }\r\n});\r\n\r\njQuery.fn.extend({\r\n    queue: function( type, data ) {\r\n        var setter = 2;\r\n\r\n        if ( typeof type !== \"string\" ) {\r\n            data = type;\r\n            type = \"fx\";\r\n            setter--;\r\n        }\r\n\r\n        if ( arguments.length < setter ) {\r\n            return jQuery.queue( this[0], type );\r\n        }\r\n\r\n        return data === undefined ?\r\n            this :\r\n            this.each(function() {\r\n                var queue = jQuery.queue( this, type, data );\r\n\r\n                // ensure a hooks for this queue\r\n                jQuery._queueHooks( this, type );\r\n\r\n                if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\r\n                    jQuery.dequeue( this, type );\r\n                }\r\n            });\r\n    },\r\n    dequeue: function( type ) {\r\n        return this.each(function() {\r\n            jQuery.dequeue( this, type );\r\n        });\r\n    },\r\n    // Based off of the plugin by Clint Helfers, with permission.\r\n    // http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n    delay: function( time, type ) {\r\n        time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\r\n        type = type || \"fx\";\r\n\r\n        return this.queue( type, function( next, hooks ) {\r\n            var timeout = setTimeout( next, time );\r\n            hooks.stop = function() {\r\n                clearTimeout( timeout );\r\n            };\r\n        });\r\n    },\r\n    clearQueue: function( type ) {\r\n        return this.queue( type || \"fx\", [] );\r\n    },\r\n    // Get a promise resolved when queues of a certain type\r\n    // are emptied (fx is the type by default)\r\n    promise: function( type, obj ) {\r\n        var tmp,\r\n            count = 1,\r\n            defer = jQuery.Deferred(),\r\n            elements = this,\r\n            i = this.length,\r\n            resolve = function() {\r\n                if ( !( --count ) ) {\r\n                    defer.resolveWith( elements, [ elements ] );\r\n                }\r\n            };\r\n\r\n        if ( typeof type !== \"string\" ) {\r\n            obj = type;\r\n            type = undefined;\r\n        }\r\n        type = type || \"fx\";\r\n\r\n        while( i-- ) {\r\n            tmp = jQuery._data( elements[ i ], type + \"queueHooks\" );\r\n            if ( tmp && tmp.empty ) {\r\n                count++;\r\n                tmp.empty.add( resolve );\r\n            }\r\n        }\r\n        resolve();\r\n        return defer.promise( obj );\r\n    }\r\n});\r\nvar nodeHook, boolHook, fixSpecified,\r\n    rclass = /[\\t\\r\\n]/g,\r\n    rreturn = /\\r/g,\r\n    rtype = /^(?:button|input)$/i,\r\n    rfocusable = /^(?:button|input|object|select|textarea)$/i,\r\n    rclickable = /^a(?:rea|)$/i,\r\n    rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,\r\n    getSetAttribute = jQuery.support.getSetAttribute;\r\n\r\njQuery.fn.extend({\r\n    attr: function( name, value ) {\r\n        return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );\r\n    },\r\n\r\n    removeAttr: function( name ) {\r\n        return this.each(function() {\r\n            jQuery.removeAttr( this, name );\r\n        });\r\n    },\r\n\r\n    prop: function( name, value ) {\r\n        return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );\r\n    },\r\n\r\n    removeProp: function( name ) {\r\n        name = jQuery.propFix[ name ] || name;\r\n        return this.each(function() {\r\n            // try/catch handles cases where IE balks (such as removing a property on window)\r\n            try {\r\n                this[ name ] = undefined;\r\n                delete this[ name ];\r\n            } catch( e ) {}\r\n        });\r\n    },\r\n\r\n    addClass: function( value ) {\r\n        var classNames, i, l, elem,\r\n            setClass, c, cl;\r\n\r\n        if ( jQuery.isFunction( value ) ) {\r\n            return this.each(function( j ) {\r\n                jQuery( this ).addClass( value.call(this, j, this.className) );\r\n            });\r\n        }\r\n\r\n        if ( value && typeof value === \"string\" ) {\r\n            classNames = value.split( core_rspace );\r\n\r\n            for ( i = 0, l = this.length; i < l; i++ ) {\r\n                elem = this[ i ];\r\n\r\n                if ( elem.nodeType === 1 ) {\r\n                    if ( !elem.className && classNames.length === 1 ) {\r\n                        elem.className = value;\r\n\r\n                    } else {\r\n                        setClass = \" \" + elem.className + \" \";\r\n\r\n                        for ( c = 0, cl = classNames.length; c < cl; c++ ) {\r\n                            if ( setClass.indexOf( \" \" + classNames[ c ] + \" \" ) < 0 ) {\r\n                                setClass += classNames[ c ] + \" \";\r\n                            }\r\n                        }\r\n                        elem.className = jQuery.trim( setClass );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    removeClass: function( value ) {\r\n        var removes, className, elem, c, cl, i, l;\r\n\r\n        if ( jQuery.isFunction( value ) ) {\r\n            return this.each(function( j ) {\r\n                jQuery( this ).removeClass( value.call(this, j, this.className) );\r\n            });\r\n        }\r\n        if ( (value && typeof value === \"string\") || value === undefined ) {\r\n            removes = ( value || \"\" ).split( core_rspace );\r\n\r\n            for ( i = 0, l = this.length; i < l; i++ ) {\r\n                elem = this[ i ];\r\n                if ( elem.nodeType === 1 && elem.className ) {\r\n\r\n                    className = (\" \" + elem.className + \" \").replace( rclass, \" \" );\r\n\r\n                    // loop over each item in the removal list\r\n                    for ( c = 0, cl = removes.length; c < cl; c++ ) {\r\n                        // Remove until there is nothing to remove,\r\n                        while ( className.indexOf(\" \" + removes[ c ] + \" \") >= 0 ) {\r\n                            className = className.replace( \" \" + removes[ c ] + \" \" , \" \" );\r\n                        }\r\n                    }\r\n                    elem.className = value ? jQuery.trim( className ) : \"\";\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    toggleClass: function( value, stateVal ) {\r\n        var type = typeof value,\r\n            isBool = typeof stateVal === \"boolean\";\r\n\r\n        if ( jQuery.isFunction( value ) ) {\r\n            return this.each(function( i ) {\r\n                jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\r\n            });\r\n        }\r\n\r\n        return this.each(function() {\r\n            if ( type === \"string\" ) {\r\n                // toggle individual class names\r\n                var className,\r\n                    i = 0,\r\n                    self = jQuery( this ),\r\n                    state = stateVal,\r\n                    classNames = value.split( core_rspace );\r\n\r\n                while ( (className = classNames[ i++ ]) ) {\r\n                    // check each className given, space separated list\r\n                    state = isBool ? state : !self.hasClass( className );\r\n                    self[ state ? \"addClass\" : \"removeClass\" ]( className );\r\n                }\r\n\r\n            } else if ( type === \"undefined\" || type === \"boolean\" ) {\r\n                if ( this.className ) {\r\n                    // store className if set\r\n                    jQuery._data( this, \"__className__\", this.className );\r\n                }\r\n\r\n                // toggle whole className\r\n                this.className = this.className || value === false ? \"\" : jQuery._data( this, \"__className__\" ) || \"\";\r\n            }\r\n        });\r\n    },\r\n\r\n    hasClass: function( selector ) {\r\n        var className = \" \" + selector + \" \",\r\n            i = 0,\r\n            l = this.length;\r\n        for ( ; i < l; i++ ) {\r\n            if ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    val: function( value ) {\r\n        var hooks, ret, isFunction,\r\n            elem = this[0];\r\n\r\n        if ( !arguments.length ) {\r\n            if ( elem ) {\r\n                hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\r\n\r\n                if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\r\n                    return ret;\r\n                }\r\n\r\n                ret = elem.value;\r\n\r\n                return typeof ret === \"string\" ?\r\n                    // handle most common string cases\r\n                    ret.replace(rreturn, \"\") :\r\n                    // handle cases where value is null/undef or number\r\n                    ret == null ? \"\" : ret;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        isFunction = jQuery.isFunction( value );\r\n\r\n        return this.each(function( i ) {\r\n            var val,\r\n                self = jQuery(this);\r\n\r\n            if ( this.nodeType !== 1 ) {\r\n                return;\r\n            }\r\n\r\n            if ( isFunction ) {\r\n                val = value.call( this, i, self.val() );\r\n            } else {\r\n                val = value;\r\n            }\r\n\r\n            // Treat null/undefined as \"\"; convert numbers to string\r\n            if ( val == null ) {\r\n                val = \"\";\r\n            } else if ( typeof val === \"number\" ) {\r\n                val += \"\";\r\n            } else if ( jQuery.isArray( val ) ) {\r\n                val = jQuery.map(val, function ( value ) {\r\n                    return value == null ? \"\" : value + \"\";\r\n                });\r\n            }\r\n\r\n            hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\r\n\r\n            // If set returns undefined, fall back to normal setting\r\n            if ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\r\n                this.value = val;\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\njQuery.extend({\r\n    valHooks: {\r\n        option: {\r\n            get: function( elem ) {\r\n                // attributes.value is undefined in Blackberry 4.7 but\r\n                // uses .value. See #6932\r\n                var val = elem.attributes.value;\r\n                return !val || val.specified ? elem.value : elem.text;\r\n            }\r\n        },\r\n        select: {\r\n            get: function( elem ) {\r\n                var value, option,\r\n                    options = elem.options,\r\n                    index = elem.selectedIndex,\r\n                    one = elem.type === \"select-one\" || index < 0,\r\n                    values = one ? null : [],\r\n                    max = one ? index + 1 : options.length,\r\n                    i = index < 0 ?\r\n                        max :\r\n                        one ? index : 0;\r\n\r\n                // Loop through all the selected options\r\n                for ( ; i < max; i++ ) {\r\n                    option = options[ i ];\r\n\r\n                    // oldIE doesn\'t update selected after form reset (#2551)\r\n                    if ( ( option.selected || i === index ) &&\r\n                            // Don\'t return options that are disabled or in a disabled optgroup\r\n                            ( jQuery.support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null ) &&\r\n                            ( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n                        // Get the specific value for the option\r\n                        value = jQuery( option ).val();\r\n\r\n                        // We don\'t need an array for one selects\r\n                        if ( one ) {\r\n                            return value;\r\n                        }\r\n\r\n                        // Multi-Selects return an array\r\n                        values.push( value );\r\n                    }\r\n                }\r\n\r\n                return values;\r\n            },\r\n\r\n            set: function( elem, value ) {\r\n                var values = jQuery.makeArray( value );\r\n\r\n                jQuery(elem).find(\"option\").each(function() {\r\n                    this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;\r\n                });\r\n\r\n                if ( !values.length ) {\r\n                    elem.selectedIndex = -1;\r\n                }\r\n                return values;\r\n            }\r\n        }\r\n    },\r\n\r\n    // Unused in 1.8, left in so attrFn-stabbers won\'t die; remove in 1.9\r\n    attrFn: {},\r\n\r\n    attr: function( elem, name, value, pass ) {\r\n        var ret, hooks, notxml,\r\n            nType = elem.nodeType;\r\n\r\n        // don\'t get/set attributes on text, comment and attribute nodes\r\n        if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\r\n            return;\r\n        }\r\n\r\n        if ( pass && jQuery.isFunction( jQuery.fn[ name ] ) ) {\r\n            return jQuery( elem )[ name ]( value );\r\n        }\r\n\r\n        // Fallback to prop when attributes are not supported\r\n        if ( typeof elem.getAttribute === \"undefined\" ) {\r\n            return jQuery.prop( elem, name, value );\r\n        }\r\n\r\n        notxml = nType !== 1 || !jQuery.isXMLDoc( elem );\r\n\r\n        // All attributes are lowercase\r\n        // Grab necessary hook if one is defined\r\n        if ( notxml ) {\r\n            name = name.toLowerCase();\r\n            hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );\r\n        }\r\n\r\n        if ( value !== undefined ) {\r\n\r\n            if ( value === null ) {\r\n                jQuery.removeAttr( elem, name );\r\n                return;\r\n\r\n            } else if ( hooks && \"set\" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {\r\n                return ret;\r\n\r\n            } else {\r\n                elem.setAttribute( name, value + \"\" );\r\n                return value;\r\n            }\r\n\r\n        } else if ( hooks && \"get\" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {\r\n            return ret;\r\n\r\n        } else {\r\n\r\n            ret = elem.getAttribute( name );\r\n\r\n            // Non-existent attributes return null, we normalize to undefined\r\n            return ret === null ?\r\n                undefined :\r\n                ret;\r\n        }\r\n    },\r\n\r\n    removeAttr: function( elem, value ) {\r\n        var propName, attrNames, name, isBool,\r\n            i = 0;\r\n\r\n        if ( value && elem.nodeType === 1 ) {\r\n\r\n            attrNames = value.split( core_rspace );\r\n\r\n            for ( ; i < attrNames.length; i++ ) {\r\n                name = attrNames[ i ];\r\n\r\n                if ( name ) {\r\n                    propName = jQuery.propFix[ name ] || name;\r\n                    isBool = rboolean.test( name );\r\n\r\n                    // See #9699 for explanation of this approach (setting first, then removal)\r\n                    // Do not do this for boolean attributes (see #10870)\r\n                    if ( !isBool ) {\r\n                        jQuery.attr( elem, name, \"\" );\r\n                    }\r\n                    elem.removeAttribute( getSetAttribute ? name : propName );\r\n\r\n                    // Set corresponding property to false for boolean attributes\r\n                    if ( isBool && propName in elem ) {\r\n                        elem[ propName ] = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    attrHooks: {\r\n        type: {\r\n            set: function( elem, value ) {\r\n                // We can\'t allow the type property to be changed (since it causes problems in IE)\r\n                if ( rtype.test( elem.nodeName ) && elem.parentNode ) {\r\n                    jQuery.error( \"type property can\'t be changed\" );\r\n                } else if ( !jQuery.support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\") ) {\r\n                    // Setting the type on a radio button after the value resets the value in IE6-9\r\n                    // Reset value to it\'s default in case type is set after value\r\n                    // This is for element creation\r\n                    var val = elem.value;\r\n                    elem.setAttribute( \"type\", value );\r\n                    if ( val ) {\r\n                        elem.value = val;\r\n                    }\r\n                    return value;\r\n                }\r\n            }\r\n        },\r\n        // Use the value property for back compat\r\n        // Use the nodeHook for button elements in IE6/7 (#1954)\r\n        value: {\r\n            get: function( elem, name ) {\r\n                if ( nodeHook && jQuery.nodeName( elem, \"button\" ) ) {\r\n                    return nodeHook.get( elem, name );\r\n                }\r\n                return name in elem ?\r\n                    elem.value :\r\n                    null;\r\n            },\r\n            set: function( elem, value, name ) {\r\n                if ( nodeHook && jQuery.nodeName( elem, \"button\" ) ) {\r\n                    return nodeHook.set( elem, value, name );\r\n                }\r\n                // Does not return so that setAttribute is also used\r\n                elem.value = value;\r\n            }\r\n        }\r\n    },\r\n\r\n    propFix: {\r\n        tabindex: \"tabIndex\",\r\n        readonly: \"readOnly\",\r\n        \"for\": \"htmlFor\",\r\n        \"class\": \"className\",\r\n        maxlength: \"maxLength\",\r\n        cellspacing: \"cellSpacing\",\r\n        cellpadding: \"cellPadding\",\r\n        rowspan: \"rowSpan\",\r\n        colspan: \"colSpan\",\r\n        usemap: \"useMap\",\r\n        frameborder: \"frameBorder\",\r\n        contenteditable: \"contentEditable\"\r\n    },\r\n\r\n    prop: function( elem, name, value ) {\r\n        var ret, hooks, notxml,\r\n            nType = elem.nodeType;\r\n\r\n        // don\'t get/set properties on text, comment and attribute nodes\r\n        if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\r\n            return;\r\n        }\r\n\r\n        notxml = nType !== 1 || !jQuery.isXMLDoc( elem );\r\n\r\n        if ( notxml ) {\r\n            // Fix name and attach hooks\r\n            name = jQuery.propFix[ name ] || name;\r\n            hooks = jQuery.propHooks[ name ];\r\n        }\r\n\r\n        if ( value !== undefined ) {\r\n            if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\r\n                return ret;\r\n\r\n            } else {\r\n                return ( elem[ name ] = value );\r\n            }\r\n\r\n        } else {\r\n            if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\r\n                return ret;\r\n\r\n            } else {\r\n                return elem[ name ];\r\n            }\r\n        }\r\n    },\r\n\r\n    propHooks: {\r\n        tabIndex: {\r\n            get: function( elem ) {\r\n                // elem.tabIndex doesn\'t always return the correct value when it hasn\'t been explicitly set\r\n                // http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\r\n                var attributeNode = elem.getAttributeNode(\"tabindex\");\r\n\r\n                return attributeNode && attributeNode.specified ?\r\n                    parseInt( attributeNode.value, 10 ) :\r\n                    rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?\r\n                        0 :\r\n                        undefined;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n// Hook for boolean attributes\r\nboolHook = {\r\n    get: function( elem, name ) {\r\n        // Align boolean attributes with corresponding properties\r\n        // Fall back to attribute presence where some booleans are not supported\r\n        var attrNode,\r\n            property = jQuery.prop( elem, name );\r\n        return property === true || typeof property !== \"boolean\" && ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?\r\n            name.toLowerCase() :\r\n            undefined;\r\n    },\r\n    set: function( elem, value, name ) {\r\n        var propName;\r\n        if ( value === false ) {\r\n            // Remove boolean attributes when set to false\r\n            jQuery.removeAttr( elem, name );\r\n        } else {\r\n            // value is true since we know at this point it\'s type boolean and not false\r\n            // Set boolean attributes to the same name and set the DOM property\r\n            propName = jQuery.propFix[ name ] || name;\r\n            if ( propName in elem ) {\r\n                // Only set the IDL specifically if it already exists on the element\r\n                elem[ propName ] = true;\r\n            }\r\n\r\n            elem.setAttribute( name, name.toLowerCase() );\r\n        }\r\n        return name;\r\n    }\r\n};\r\n\r\n// IE6/7 do not support getting/setting some attributes with get/setAttribute\r\nif ( !getSetAttribute ) {\r\n\r\n    fixSpecified = {\r\n        name: true,\r\n        id: true,\r\n        coords: true\r\n    };\r\n\r\n    // Use this for any attribute in IE6/7\r\n    // This fixes almost every IE6/7 issue\r\n    nodeHook = jQuery.valHooks.button = {\r\n        get: function( elem, name ) {\r\n            var ret;\r\n            ret = elem.getAttributeNode( name );\r\n            return ret && ( fixSpecified[ name ] ? ret.value !== \"\" : ret.specified ) ?\r\n                ret.value :\r\n                undefined;\r\n        },\r\n        set: function( elem, value, name ) {\r\n            // Set the existing or create a new attribute node\r\n            var ret = elem.getAttributeNode( name );\r\n            if ( !ret ) {\r\n                ret = document.createAttribute( name );\r\n                elem.setAttributeNode( ret );\r\n            }\r\n            return ( ret.value = value + \"\" );\r\n        }\r\n    };\r\n\r\n    // Set width and height to auto instead of 0 on empty string( Bug #8150 )\r\n    // This is for removals\r\n    jQuery.each([ \"width\", \"height\" ], function( i, name ) {\r\n        jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {\r\n            set: function( elem, value ) {\r\n                if ( value === \"\" ) {\r\n                    elem.setAttribute( name, \"auto\" );\r\n                    return value;\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    // Set contenteditable to false on removals(#10429)\r\n    // Setting to empty string throws an error as an invalid value\r\n    jQuery.attrHooks.contenteditable = {\r\n        get: nodeHook.get,\r\n        set: function( elem, value, name ) {\r\n            if ( value === \"\" ) {\r\n                value = \"false\";\r\n            }\r\n            nodeHook.set( elem, value, name );\r\n        }\r\n    };\r\n}\r\n\r\n\r\n// Some attributes require a special call on IE\r\nif ( !jQuery.support.hrefNormalized ) {\r\n    jQuery.each([ \"href\", \"src\", \"width\", \"height\" ], function( i, name ) {\r\n        jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {\r\n            get: function( elem ) {\r\n                var ret = elem.getAttribute( name, 2 );\r\n                return ret === null ? undefined : ret;\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nif ( !jQuery.support.style ) {\r\n    jQuery.attrHooks.style = {\r\n        get: function( elem ) {\r\n            // Return undefined in the case of empty string\r\n            // Normalize to lowercase since IE uppercases css property names\r\n            return elem.style.cssText.toLowerCase() || undefined;\r\n        },\r\n        set: function( elem, value ) {\r\n            return ( elem.style.cssText = value + \"\" );\r\n        }\r\n    };\r\n}\r\n\r\n// Safari mis-reports the default selected property of an option\r\n// Accessing the parent\'s selectedIndex property fixes it\r\nif ( !jQuery.support.optSelected ) {\r\n    jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {\r\n        get: function( elem ) {\r\n            var parent = elem.parentNode;\r\n\r\n            if ( parent ) {\r\n                parent.selectedIndex;\r\n\r\n                // Make sure that it also works with optgroups, see #5701\r\n                if ( parent.parentNode ) {\r\n                    parent.parentNode.selectedIndex;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\r\n}\r\n\r\n// IE6/7 call enctype encoding\r\nif ( !jQuery.support.enctype ) {\r\n    jQuery.propFix.enctype = \"encoding\";\r\n}\r\n\r\n// Radios and checkboxes getter/setter\r\nif ( !jQuery.support.checkOn ) {\r\n    jQuery.each([ \"radio\", \"checkbox\" ], function() {\r\n        jQuery.valHooks[ this ] = {\r\n            get: function( elem ) {\r\n                // Handle the case where in Webkit \"\" is returned instead of \"on\" if a value isn\'t specified\r\n                return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\r\n            }\r\n        };\r\n    });\r\n}\r\njQuery.each([ \"radio\", \"checkbox\" ], function() {\r\n    jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {\r\n        set: function( elem, value ) {\r\n            if ( jQuery.isArray( value ) ) {\r\n                return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\r\n            }\r\n        }\r\n    });\r\n});\r\nvar rformElems = /^(?:textarea|input|select)$/i,\r\n    rtypenamespace = /^([^\\.]*|)(?:\\.(.+)|)$/,\r\n    rhoverHack = /(?:^|\\s)hover(\\.\\S+|)\\b/,\r\n    rkeyEvent = /^key/,\r\n    rmouseEvent = /^(?:mouse|contextmenu)|click/,\r\n    rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\r\n    hoverHack = function( events ) {\r\n        return jQuery.event.special.hover ? events : events.replace( rhoverHack, \"mouseenter$1 mouseleave$1\" );\r\n    };\r\n\r\n/*\r\n * Helper functions for managing events -- not part of the public interface.\r\n * Props to Dean Edwards\' addEvent library for many of the ideas.\r\n */\r\njQuery.event = {\r\n\r\n    add: function( elem, types, handler, data, selector ) {\r\n\r\n        var elemData, eventHandle, events,\r\n            t, tns, type, namespaces, handleObj,\r\n            handleObjIn, handlers, special;\r\n\r\n        // Don\'t attach events to noData or text/comment nodes (allow plain objects tho)\r\n        if ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {\r\n            return;\r\n        }\r\n\r\n        // Caller can pass in an object of custom data in lieu of the handler\r\n        if ( handler.handler ) {\r\n            handleObjIn = handler;\r\n            handler = handleObjIn.handler;\r\n            selector = handleObjIn.selector;\r\n        }\r\n\r\n        // Make sure that the handler has a unique ID, used to find/remove it later\r\n        if ( !handler.guid ) {\r\n            handler.guid = jQuery.guid++;\r\n        }\r\n\r\n        // Init the element\'s event structure and main handler, if this is the first\r\n        events = elemData.events;\r\n        if ( !events ) {\r\n            elemData.events = events = {};\r\n        }\r\n        eventHandle = elemData.handle;\r\n        if ( !eventHandle ) {\r\n            elemData.handle = eventHandle = function( e ) {\r\n                // Discard the second event of a jQuery.event.trigger() and\r\n                // when an event is called after a page has unloaded\r\n                return typeof jQuery !== \"undefined\" && (!e || jQuery.event.triggered !== e.type) ?\r\n                    jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :\r\n                    undefined;\r\n            };\r\n            // Add elem as a property of the handle fn to prevent a memory leak with IE non-native events\r\n            eventHandle.elem = elem;\r\n        }\r\n\r\n        // Handle multiple events separated by a space\r\n        // jQuery(...).bind(\"mouseover mouseout\", fn);\r\n        types = jQuery.trim( hoverHack(types) ).split( \" \" );\r\n        for ( t = 0; t < types.length; t++ ) {\r\n\r\n            tns = rtypenamespace.exec( types[t] ) || [];\r\n            type = tns[1];\r\n            namespaces = ( tns[2] || \"\" ).split( \".\" ).sort();\r\n\r\n            // If event changes its type, use the special event handlers for the changed type\r\n            special = jQuery.event.special[ type ] || {};\r\n\r\n            // If selector defined, determine special event api type, otherwise given type\r\n            type = ( selector ? special.delegateType : special.bindType ) || type;\r\n\r\n            // Update special based on newly reset type\r\n            special = jQuery.event.special[ type ] || {};\r\n\r\n            // handleObj is passed to all event handlers\r\n            handleObj = jQuery.extend({\r\n                type: type,\r\n                origType: tns[1],\r\n                data: data,\r\n                handler: handler,\r\n                guid: handler.guid,\r\n                selector: selector,\r\n                needsContext: selector && jQuery.expr.match.needsContext.test( selector ),\r\n                namespace: namespaces.join(\".\")\r\n            }, handleObjIn );\r\n\r\n            // Init the event handler queue if we\'re the first\r\n            handlers = events[ type ];\r\n            if ( !handlers ) {\r\n                handlers = events[ type ] = [];\r\n                handlers.delegateCount = 0;\r\n\r\n                // Only use addEventListener/attachEvent if the special events handler returns false\r\n                if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\r\n                    // Bind the global event handler to the element\r\n                    if ( elem.addEventListener ) {\r\n                        elem.addEventListener( type, eventHandle, false );\r\n\r\n                    } else if ( elem.attachEvent ) {\r\n                        elem.attachEvent( \"on\" + type, eventHandle );\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ( special.add ) {\r\n                special.add.call( elem, handleObj );\r\n\r\n                if ( !handleObj.handler.guid ) {\r\n                    handleObj.handler.guid = handler.guid;\r\n                }\r\n            }\r\n\r\n            // Add to the element\'s handler list, delegates in front\r\n            if ( selector ) {\r\n                handlers.splice( handlers.delegateCount++, 0, handleObj );\r\n            } else {\r\n                handlers.push( handleObj );\r\n            }\r\n\r\n            // Keep track of which events have ever been used, for event optimization\r\n            jQuery.event.global[ type ] = true;\r\n        }\r\n\r\n        // Nullify elem to prevent memory leaks in IE\r\n        elem = null;\r\n    },\r\n\r\n    global: {},\r\n\r\n    // Detach an event or set of events from an element\r\n    remove: function( elem, types, handler, selector, mappedTypes ) {\r\n\r\n        var t, tns, type, origType, namespaces, origCount,\r\n            j, events, special, eventType, handleObj,\r\n            elemData = jQuery.hasData( elem ) && jQuery._data( elem );\r\n\r\n        if ( !elemData || !(events = elemData.events) ) {\r\n            return;\r\n        }\r\n\r\n        // Once for each type.namespace in types; type may be omitted\r\n        types = jQuery.trim( hoverHack( types || \"\" ) ).split(\" \");\r\n        for ( t = 0; t < types.length; t++ ) {\r\n            tns = rtypenamespace.exec( types[t] ) || [];\r\n            type = origType = tns[1];\r\n            namespaces = tns[2];\r\n\r\n            // Unbind all events (on this namespace, if provided) for the element\r\n            if ( !type ) {\r\n                for ( type in events ) {\r\n                    jQuery.event.remove( elem, type + types[ t ], handler, selector, true );\r\n                }\r\n                continue;\r\n            }\r\n\r\n            special = jQuery.event.special[ type ] || {};\r\n            type = ( selector? special.delegateType : special.bindType ) || type;\r\n            eventType = events[ type ] || [];\r\n            origCount = eventType.length;\r\n            namespaces = namespaces ? new RegExp(\"(^|\\\\.)\" + namespaces.split(\".\").sort().join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null;\r\n\r\n            // Remove matching events\r\n            for ( j = 0; j < eventType.length; j++ ) {\r\n                handleObj = eventType[ j ];\r\n\r\n                if ( ( mappedTypes || origType === handleObj.origType ) &&\r\n                     ( !handler || handler.guid === handleObj.guid ) &&\r\n                     ( !namespaces || namespaces.test( handleObj.namespace ) ) &&\r\n                     ( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\r\n                    eventType.splice( j--, 1 );\r\n\r\n                    if ( handleObj.selector ) {\r\n                        eventType.delegateCount--;\r\n                    }\r\n                    if ( special.remove ) {\r\n                        special.remove.call( elem, handleObj );\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Remove generic event handler if we removed something and no more handlers exist\r\n            // (avoids potential for endless recursion during removal of special event handlers)\r\n            if ( eventType.length === 0 && origCount !== eventType.length ) {\r\n                if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\r\n                    jQuery.removeEvent( elem, type, elemData.handle );\r\n                }\r\n\r\n                delete events[ type ];\r\n            }\r\n        }\r\n\r\n        // Remove the expando if it\'s no longer used\r\n        if ( jQuery.isEmptyObject( events ) ) {\r\n            delete elemData.handle;\r\n\r\n            // removeData also checks for emptiness and clears the expando if empty\r\n            // so use it instead of delete\r\n            jQuery.removeData( elem, \"events\", true );\r\n        }\r\n    },\r\n\r\n    // Events that are safe to short-circuit if no handlers are attached.\r\n    // Native DOM events should not be added, they may have inline handlers.\r\n    customEvent: {\r\n        \"getData\": true,\r\n        \"setData\": true,\r\n        \"changeData\": true\r\n    },\r\n\r\n    trigger: function( event, data, elem, onlyHandlers ) {\r\n        // Don\'t do events on text and comment nodes\r\n        if ( elem && (elem.nodeType === 3 || elem.nodeType === 8) ) {\r\n            return;\r\n        }\r\n\r\n        // Event object or event type\r\n        var cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType,\r\n            type = event.type || event,\r\n            namespaces = [];\r\n\r\n        // focus/blur morphs to focusin/out; ensure we\'re not firing them right now\r\n        if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\r\n            return;\r\n        }\r\n\r\n        if ( type.indexOf( \"!\" ) >= 0 ) {\r\n            // Exclusive events trigger only for the exact event (no namespaces)\r\n            type = type.slice(0, -1);\r\n            exclusive = true;\r\n        }\r\n\r\n        if ( type.indexOf( \".\" ) >= 0 ) {\r\n            // Namespaced trigger; create a regexp to match event type in handle()\r\n            namespaces = type.split(\".\");\r\n            type = namespaces.shift();\r\n            namespaces.sort();\r\n        }\r\n\r\n        if ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {\r\n            // No jQuery handlers for this event type, and it can\'t have inline handlers\r\n            return;\r\n        }\r\n\r\n        // Caller can pass in an Event, Object, or just an event type string\r\n        event = typeof event === \"object\" ?\r\n            // jQuery.Event object\r\n            event[ jQuery.expando ] ? event :\r\n            // Object literal\r\n            new jQuery.Event( type, event ) :\r\n            // Just the event type (string)\r\n            new jQuery.Event( type );\r\n\r\n        event.type = type;\r\n        event.isTrigger = true;\r\n        event.exclusive = exclusive;\r\n        event.namespace = namespaces.join( \".\" );\r\n        event.namespace_re = event.namespace? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null;\r\n        ontype = type.indexOf( \":\" ) < 0 ? \"on\" + type : \"\";\r\n\r\n        // Handle a global trigger\r\n        if ( !elem ) {\r\n\r\n            // TODO: Stop taunting the data cache; remove global events and always attach to document\r\n            cache = jQuery.cache;\r\n            for ( i in cache ) {\r\n                if ( cache[ i ].events && cache[ i ].events[ type ] ) {\r\n                    jQuery.event.trigger( event, data, cache[ i ].handle.elem, true );\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Clean up the event in case it is being reused\r\n        event.result = undefined;\r\n        if ( !event.target ) {\r\n            event.target = elem;\r\n        }\r\n\r\n        // Clone any incoming data and prepend the event, creating the handler arg list\r\n        data = data != null ? jQuery.makeArray( data ) : [];\r\n        data.unshift( event );\r\n\r\n        // Allow special events to draw outside the lines\r\n        special = jQuery.event.special[ type ] || {};\r\n        if ( special.trigger && special.trigger.apply( elem, data ) === false ) {\r\n            return;\r\n        }\r\n\r\n        // Determine event propagation path in advance, per W3C events spec (#9951)\r\n        // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\r\n        eventPath = [[ elem, special.bindType || type ]];\r\n        if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\r\n\r\n            bubbleType = special.delegateType || type;\r\n            cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;\r\n            for ( old = elem; cur; cur = cur.parentNode ) {\r\n                eventPath.push([ cur, bubbleType ]);\r\n                old = cur;\r\n            }\r\n\r\n            // Only add window if we got to document (e.g., not plain obj or detached DOM)\r\n            if ( old === (elem.ownerDocument || document) ) {\r\n                eventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);\r\n            }\r\n        }\r\n\r\n        // Fire handlers on the event path\r\n        for ( i = 0; i < eventPath.length && !event.isPropagationStopped(); i++ ) {\r\n\r\n            cur = eventPath[i][0];\r\n            event.type = eventPath[i][1];\r\n\r\n            handle = ( jQuery._data( cur, \"events\" ) || {} )[ event.type ] && jQuery._data( cur, \"handle\" );\r\n            if ( handle ) {\r\n                handle.apply( cur, data );\r\n            }\r\n            // Note that this is a bare JS function and not a jQuery handler\r\n            handle = ontype && cur[ ontype ];\r\n            if ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {\r\n                event.preventDefault();\r\n            }\r\n        }\r\n        event.type = type;\r\n\r\n        // If nobody prevented the default action, do it now\r\n        if ( !onlyHandlers && !event.isDefaultPrevented() ) {\r\n\r\n            if ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&\r\n                !(type === \"click\" && jQuery.nodeName( elem, \"a\" )) && jQuery.acceptData( elem ) ) {\r\n\r\n                // Call a native DOM method on the target with the same name name as the event.\r\n                // Can\'t use an .isFunction() check here because IE6/7 fails that test.\r\n                // Don\'t do default actions on window, that\'s where global variables be (#6170)\r\n                // IE<9 dies on focus/blur to hidden element (#1486)\r\n                if ( ontype && elem[ type ] && ((type !== \"focus\" && type !== \"blur\") || event.target.offsetWidth !== 0) && !jQuery.isWindow( elem ) ) {\r\n\r\n                    // Don\'t re-trigger an onFOO event when we call its FOO() method\r\n                    old = elem[ ontype ];\r\n\r\n                    if ( old ) {\r\n                        elem[ ontype ] = null;\r\n                    }\r\n\r\n                    // Prevent re-triggering of the same event, since we already bubbled it above\r\n                    jQuery.event.triggered = type;\r\n                    elem[ type ]();\r\n                    jQuery.event.triggered = undefined;\r\n\r\n                    if ( old ) {\r\n                        elem[ ontype ] = old;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return event.result;\r\n    },\r\n\r\n    dispatch: function( event ) {\r\n\r\n        // Make a writable jQuery.Event from the native event object\r\n        event = jQuery.event.fix( event || window.event );\r\n\r\n        var i, j, cur, ret, selMatch, matched, matches, handleObj, sel, related,\r\n            handlers = ( (jQuery._data( this, \"events\" ) || {} )[ event.type ] || []),\r\n            delegateCount = handlers.delegateCount,\r\n            args = core_slice.call( arguments ),\r\n            run_all = !event.exclusive && !event.namespace,\r\n            special = jQuery.event.special[ event.type ] || {},\r\n            handlerQueue = [];\r\n\r\n        // Use the fix-ed jQuery.Event rather than the (read-only) native event\r\n        args[0] = event;\r\n        event.delegateTarget = this;\r\n\r\n        // Call the preDispatch hook for the mapped type, and let it bail if desired\r\n        if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\r\n            return;\r\n        }\r\n\r\n        // Determine handlers that should run if there are delegated events\r\n        // Avoid non-left-click bubbling in Firefox (#3861)\r\n        if ( delegateCount && !(event.button && event.type === \"click\") ) {\r\n\r\n            for ( cur = event.target; cur != this; cur = cur.parentNode || this ) {\r\n\r\n                // Don\'t process clicks (ONLY) on disabled elements (#6911, #8165, #11382, #11764)\r\n                if ( cur.disabled !== true || event.type !== \"click\" ) {\r\n                    selMatch = {};\r\n                    matches = [];\r\n                    for ( i = 0; i < delegateCount; i++ ) {\r\n                        handleObj = handlers[ i ];\r\n                        sel = handleObj.selector;\r\n\r\n                        if ( selMatch[ sel ] === undefined ) {\r\n                            selMatch[ sel ] = handleObj.needsContext ?\r\n                                jQuery( sel, this ).index( cur ) >= 0 :\r\n                                jQuery.find( sel, this, null, [ cur ] ).length;\r\n                        }\r\n                        if ( selMatch[ sel ] ) {\r\n                            matches.push( handleObj );\r\n                        }\r\n                    }\r\n                    if ( matches.length ) {\r\n                        handlerQueue.push({ elem: cur, matches: matches });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Add the remaining (directly-bound) handlers\r\n        if ( handlers.length > delegateCount ) {\r\n            handlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });\r\n        }\r\n\r\n        // Run delegates first; they may want to stop propagation beneath us\r\n        for ( i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++ ) {\r\n            matched = handlerQueue[ i ];\r\n            event.currentTarget = matched.elem;\r\n\r\n            for ( j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++ ) {\r\n                handleObj = matched.matches[ j ];\r\n\r\n                // Triggered event must either 1) be non-exclusive and have no namespace, or\r\n                // 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\r\n                if ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {\r\n\r\n                    event.data = handleObj.data;\r\n                    event.handleObj = handleObj;\r\n\r\n                    ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\r\n                            .apply( matched.elem, args );\r\n\r\n                    if ( ret !== undefined ) {\r\n                        event.result = ret;\r\n                        if ( ret === false ) {\r\n                            event.preventDefault();\r\n                            event.stopPropagation();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Call the postDispatch hook for the mapped type\r\n        if ( special.postDispatch ) {\r\n            special.postDispatch.call( this, event );\r\n        }\r\n\r\n        return event.result;\r\n    },\r\n\r\n    // Includes some event props shared by KeyEvent and MouseEvent\r\n    // *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***\r\n    props: \"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\r\n\r\n    fixHooks: {},\r\n\r\n    keyHooks: {\r\n        props: \"char charCode key keyCode\".split(\" \"),\r\n        filter: function( event, original ) {\r\n\r\n            // Add which for key events\r\n            if ( event.which == null ) {\r\n                event.which = original.charCode != null ? original.charCode : original.keyCode;\r\n            }\r\n\r\n            return event;\r\n        }\r\n    },\r\n\r\n    mouseHooks: {\r\n        props: \"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\r\n        filter: function( event, original ) {\r\n            var eventDoc, doc, body,\r\n                button = original.button,\r\n                fromElement = original.fromElement;\r\n\r\n            // Calculate pageX/Y if missing and clientX/Y available\r\n            if ( event.pageX == null && original.clientX != null ) {\r\n                eventDoc = event.target.ownerDocument || document;\r\n                doc = eventDoc.documentElement;\r\n                body = eventDoc.body;\r\n\r\n                event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\r\n                event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\r\n            }\r\n\r\n            // Add relatedTarget, if necessary\r\n            if ( !event.relatedTarget && fromElement ) {\r\n                event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;\r\n            }\r\n\r\n            // Add which for click: 1 === left; 2 === middle; 3 === right\r\n            // Note: button is not normalized, so don\'t use it\r\n            if ( !event.which && button !== undefined ) {\r\n                event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\r\n            }\r\n\r\n            return event;\r\n        }\r\n    },\r\n\r\n    fix: function( event ) {\r\n        if ( event[ jQuery.expando ] ) {\r\n            return event;\r\n        }\r\n\r\n        // Create a writable copy of the event object and normalize some properties\r\n        var i, prop,\r\n            originalEvent = event,\r\n            fixHook = jQuery.event.fixHooks[ event.type ] || {},\r\n            copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\r\n\r\n        event = jQuery.Event( originalEvent );\r\n\r\n        for ( i = copy.length; i; ) {\r\n            prop = copy[ --i ];\r\n            event[ prop ] = originalEvent[ prop ];\r\n        }\r\n\r\n        // Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)\r\n        if ( !event.target ) {\r\n            event.target = originalEvent.srcElement || document;\r\n        }\r\n\r\n        // Target should not be a text node (#504, Safari)\r\n        if ( event.target.nodeType === 3 ) {\r\n            event.target = event.target.parentNode;\r\n        }\r\n\r\n        // For mouse/key events, metaKey==false if it\'s undefined (#3368, #11328; IE6/7/8)\r\n        event.metaKey = !!event.metaKey;\r\n\r\n        return fixHook.filter? fixHook.filter( event, originalEvent ) : event;\r\n    },\r\n\r\n    special: {\r\n        load: {\r\n            // Prevent triggered image.load events from bubbling to window.load\r\n            noBubble: true\r\n        },\r\n\r\n        focus: {\r\n            delegateType: \"focusin\"\r\n        },\r\n        blur: {\r\n            delegateType: \"focusout\"\r\n        },\r\n\r\n        beforeunload: {\r\n            setup: function( data, namespaces, eventHandle ) {\r\n                // We only want to do this special case on windows\r\n                if ( jQuery.isWindow( this ) ) {\r\n                    this.onbeforeunload = eventHandle;\r\n                }\r\n            },\r\n\r\n            teardown: function( namespaces, eventHandle ) {\r\n                if ( this.onbeforeunload === eventHandle ) {\r\n                    this.onbeforeunload = null;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    simulate: function( type, elem, event, bubble ) {\r\n        // Piggyback on a donor event to simulate a different one.\r\n        // Fake originalEvent to avoid donor\'s stopPropagation, but if the\r\n        // simulated event prevents default then we do the same on the donor.\r\n        var e = jQuery.extend(\r\n            new jQuery.Event(),\r\n            event,\r\n            { type: type,\r\n                isSimulated: true,\r\n                originalEvent: {}\r\n            }\r\n        );\r\n        if ( bubble ) {\r\n            jQuery.event.trigger( e, null, elem );\r\n        } else {\r\n            jQuery.event.dispatch.call( elem, e );\r\n        }\r\n        if ( e.isDefaultPrevented() ) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n};\r\n\r\n// Some plugins are using, but it\'s undocumented/deprecated and will be removed.\r\n// The 1.7 special event interface should provide all the hooks needed now.\r\njQuery.event.handle = jQuery.event.dispatch;\r\n\r\njQuery.removeEvent = document.removeEventListener ?\r\n    function( elem, type, handle ) {\r\n        if ( elem.removeEventListener ) {\r\n            elem.removeEventListener( type, handle, false );\r\n        }\r\n    } :\r\n    function( elem, type, handle ) {\r\n        var name = \"on\" + type;\r\n\r\n        if ( elem.detachEvent ) {\r\n\r\n            // #8545, #7054, preventing memory leaks for custom events in IE6-8\r\n            // detachEvent needed property on element, by name of that event, to properly expose it to GC\r\n            if ( typeof elem[ name ] === \"undefined\" ) {\r\n                elem[ name ] = null;\r\n            }\r\n\r\n            elem.detachEvent( name, handle );\r\n        }\r\n    };\r\n\r\njQuery.Event = function( src, props ) {\r\n    // Allow instantiation without the \'new\' keyword\r\n    if ( !(this instanceof jQuery.Event) ) {\r\n        return new jQuery.Event( src, props );\r\n    }\r\n\r\n    // Event object\r\n    if ( src && src.type ) {\r\n        this.originalEvent = src;\r\n        this.type = src.type;\r\n\r\n        // Events bubbling up the document may have been marked as prevented\r\n        // by a handler lower down the tree; reflect the correct value.\r\n        this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||\r\n            src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;\r\n\r\n    // Event type\r\n    } else {\r\n        this.type = src;\r\n    }\r\n\r\n    // Put explicitly provided properties onto the event object\r\n    if ( props ) {\r\n        jQuery.extend( this, props );\r\n    }\r\n\r\n    // Create a timestamp if incoming event doesn\'t have one\r\n    this.timeStamp = src && src.timeStamp || jQuery.now();\r\n\r\n    // Mark it as fixed\r\n    this[ jQuery.expando ] = true;\r\n};\r\n\r\nfunction returnFalse() {\r\n    return false;\r\n}\r\nfunction returnTrue() {\r\n    return true;\r\n}\r\n\r\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\r\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\njQuery.Event.prototype = {\r\n    preventDefault: function() {\r\n        this.isDefaultPrevented = returnTrue;\r\n\r\n        var e = this.originalEvent;\r\n        if ( !e ) {\r\n            return;\r\n        }\r\n\r\n        // if preventDefault exists run it on the original event\r\n        if ( e.preventDefault ) {\r\n            e.preventDefault();\r\n\r\n        // otherwise set the returnValue property of the original event to false (IE)\r\n        } else {\r\n            e.returnValue = false;\r\n        }\r\n    },\r\n    stopPropagation: function() {\r\n        this.isPropagationStopped = returnTrue;\r\n\r\n        var e = this.originalEvent;\r\n        if ( !e ) {\r\n            return;\r\n        }\r\n        // if stopPropagation exists run it on the original event\r\n        if ( e.stopPropagation ) {\r\n            e.stopPropagation();\r\n        }\r\n        // otherwise set the cancelBubble property of the original event to true (IE)\r\n        e.cancelBubble = true;\r\n    },\r\n    stopImmediatePropagation: function() {\r\n        this.isImmediatePropagationStopped = returnTrue;\r\n        this.stopPropagation();\r\n    },\r\n    isDefaultPrevented: returnFalse,\r\n    isPropagationStopped: returnFalse,\r\n    isImmediatePropagationStopped: returnFalse\r\n};\r\n\r\n// Create mouseenter/leave events using mouseover/out and event-time checks\r\njQuery.each({\r\n    mouseenter: \"mouseover\",\r\n    mouseleave: \"mouseout\"\r\n}, function( orig, fix ) {\r\n    jQuery.event.special[ orig ] = {\r\n        delegateType: fix,\r\n        bindType: fix,\r\n\r\n        handle: function( event ) {\r\n            var ret,\r\n                target = this,\r\n                related = event.relatedTarget,\r\n                handleObj = event.handleObj,\r\n                selector = handleObj.selector;\r\n\r\n            // For mousenter/leave call the handler if related is outside the target.\r\n            // NB: No relatedTarget if the mouse left/entered the browser window\r\n            if ( !related || (related !== target && !jQuery.contains( target, related )) ) {\r\n                event.type = handleObj.origType;\r\n                ret = handleObj.handler.apply( this, arguments );\r\n                event.type = fix;\r\n            }\r\n            return ret;\r\n        }\r\n    };\r\n});\r\n\r\n// IE submit delegation\r\nif ( !jQuery.support.submitBubbles ) {\r\n\r\n    jQuery.event.special.submit = {\r\n        setup: function() {\r\n            // Only need this for delegated form submit events\r\n            if ( jQuery.nodeName( this, \"form\" ) ) {\r\n                return false;\r\n            }\r\n\r\n            // Lazy-add a submit handler when a descendant form may potentially be submitted\r\n            jQuery.event.add( this, \"click._submit keypress._submit\", function( e ) {\r\n                // Node name check avoids a VML-related crash in IE (#9807)\r\n                var elem = e.target,\r\n                    form = jQuery.nodeName( elem, \"input\" ) || jQuery.nodeName( elem, \"button\" ) ? elem.form : undefined;\r\n                if ( form && !jQuery._data( form, \"_submit_attached\" ) ) {\r\n                    jQuery.event.add( form, \"submit._submit\", function( event ) {\r\n                        event._submit_bubble = true;\r\n                    });\r\n                    jQuery._data( form, \"_submit_attached\", true );\r\n                }\r\n            });\r\n            // return undefined since we don\'t need an event listener\r\n        },\r\n\r\n        postDispatch: function( event ) {\r\n            // If form was submitted by the user, bubble the event up the tree\r\n            if ( event._submit_bubble ) {\r\n                delete event._submit_bubble;\r\n                if ( this.parentNode && !event.isTrigger ) {\r\n                    jQuery.event.simulate( \"submit\", this.parentNode, event, true );\r\n                }\r\n            }\r\n        },\r\n\r\n        teardown: function() {\r\n            // Only need this for delegated form submit events\r\n            if ( jQuery.nodeName( this, \"form\" ) ) {\r\n                return false;\r\n            }\r\n\r\n            // Remove delegated handlers; cleanData eventually reaps submit handlers attached above\r\n            jQuery.event.remove( this, \"._submit\" );\r\n        }\r\n    };\r\n}\r\n\r\n// IE change delegation and checkbox/radio fix\r\nif ( !jQuery.support.changeBubbles ) {\r\n\r\n    jQuery.event.special.change = {\r\n\r\n        setup: function() {\r\n\r\n            if ( rformElems.test( this.nodeName ) ) {\r\n                // IE doesn\'t fire change on a check/radio until blur; trigger it on click\r\n                // after a propertychange. Eat the blur-change in special.change.handle.\r\n                // This still fires onchange a second time for check/radio after blur.\r\n                if ( this.type === \"checkbox\" || this.type === \"radio\" ) {\r\n                    jQuery.event.add( this, \"propertychange._change\", function( event ) {\r\n                        if ( event.originalEvent.propertyName === \"checked\" ) {\r\n                            this._just_changed = true;\r\n                        }\r\n                    });\r\n                    jQuery.event.add( this, \"click._change\", function( event ) {\r\n                        if ( this._just_changed && !event.isTrigger ) {\r\n                            this._just_changed = false;\r\n                        }\r\n                        // Allow triggered, simulated change events (#11500)\r\n                        jQuery.event.simulate( \"change\", this, event, true );\r\n                    });\r\n                }\r\n                return false;\r\n            }\r\n            // Delegated event; lazy-add a change handler on descendant inputs\r\n            jQuery.event.add( this, \"beforeactivate._change\", function( e ) {\r\n                var elem = e.target;\r\n\r\n                if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, \"_change_attached\" ) ) {\r\n                    jQuery.event.add( elem, \"change._change\", function( event ) {\r\n                        if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {\r\n                            jQuery.event.simulate( \"change\", this.parentNode, event, true );\r\n                        }\r\n                    });\r\n                    jQuery._data( elem, \"_change_attached\", true );\r\n                }\r\n            });\r\n        },\r\n\r\n        handle: function( event ) {\r\n            var elem = event.target;\r\n\r\n            // Swallow native change events from checkbox/radio, we already triggered them above\r\n            if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== \"radio\" && elem.type !== \"checkbox\") ) {\r\n                return event.handleObj.handler.apply( this, arguments );\r\n            }\r\n        },\r\n\r\n        teardown: function() {\r\n            jQuery.event.remove( this, \"._change\" );\r\n\r\n            return !rformElems.test( this.nodeName );\r\n        }\r\n    };\r\n}\r\n\r\n// Create \"bubbling\" focus and blur events\r\nif ( !jQuery.support.focusinBubbles ) {\r\n    jQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\r\n\r\n        // Attach a single capturing handler while someone wants focusin/focusout\r\n        var attaches = 0,\r\n            handler = function( event ) {\r\n                jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\r\n            };\r\n\r\n        jQuery.event.special[ fix ] = {\r\n            setup: function() {\r\n                if ( attaches++ === 0 ) {\r\n                    document.addEventListener( orig, handler, true );\r\n                }\r\n            },\r\n            teardown: function() {\r\n                if ( --attaches === 0 ) {\r\n                    document.removeEventListener( orig, handler, true );\r\n                }\r\n            }\r\n        };\r\n    });\r\n}\r\n\r\njQuery.fn.extend({\r\n\r\n    on: function( types, selector, data, fn, /*INTERNAL*/ one ) {\r\n        var origFn, type;\r\n\r\n        // Types can be a map of types/handlers\r\n        if ( typeof types === \"object\" ) {\r\n            // ( types-Object, selector, data )\r\n            if ( typeof selector !== \"string\" ) { // && selector != null\r\n                // ( types-Object, data )\r\n                data = data || selector;\r\n                selector = undefined;\r\n            }\r\n            for ( type in types ) {\r\n                this.on( type, selector, data, types[ type ], one );\r\n            }\r\n            return this;\r\n        }\r\n\r\n        if ( data == null && fn == null ) {\r\n            // ( types, fn )\r\n            fn = selector;\r\n            data = selector = undefined;\r\n        } else if ( fn == null ) {\r\n            if ( typeof selector === \"string\" ) {\r\n                // ( types, selector, fn )\r\n                fn = data;\r\n                data = undefined;\r\n            } else {\r\n                // ( types, data, fn )\r\n                fn = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n        }\r\n        if ( fn === false ) {\r\n            fn = returnFalse;\r\n        } else if ( !fn ) {\r\n            return this;\r\n        }\r\n\r\n        if ( one === 1 ) {\r\n            origFn = fn;\r\n            fn = function( event ) {\r\n                // Can use an empty set, since event contains the info\r\n                jQuery().off( event );\r\n                return origFn.apply( this, arguments );\r\n            };\r\n            // Use same guid so caller can remove using origFn\r\n            fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\r\n        }\r\n        return this.each( function() {\r\n            jQuery.event.add( this, types, fn, data, selector );\r\n        });\r\n    },\r\n    one: function( types, selector, data, fn ) {\r\n        return this.on( types, selector, data, fn, 1 );\r\n    },\r\n    off: function( types, selector, fn ) {\r\n        var handleObj, type;\r\n        if ( types && types.preventDefault && types.handleObj ) {\r\n            // ( event )  dispatched jQuery.Event\r\n            handleObj = types.handleObj;\r\n            jQuery( types.delegateTarget ).off(\r\n                handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\r\n                handleObj.selector,\r\n                handleObj.handler\r\n            );\r\n            return this;\r\n        }\r\n        if ( typeof types === \"object\" ) {\r\n            // ( types-object [, selector] )\r\n            for ( type in types ) {\r\n                this.off( type, selector, types[ type ] );\r\n            }\r\n            return this;\r\n        }\r\n        if ( selector === false || typeof selector === \"function\" ) {\r\n            // ( types [, fn] )\r\n            fn = selector;\r\n            selector = undefined;\r\n        }\r\n        if ( fn === false ) {\r\n            fn = returnFalse;\r\n        }\r\n        return this.each(function() {\r\n            jQuery.event.remove( this, types, fn, selector );\r\n        });\r\n    },\r\n\r\n    bind: function( types, data, fn ) {\r\n        return this.on( types, null, data, fn );\r\n    },\r\n    unbind: function( types, fn ) {\r\n        return this.off( types, null, fn );\r\n    },\r\n\r\n    live: function( types, data, fn ) {\r\n        jQuery( this.context ).on( types, this.selector, data, fn );\r\n        return this;\r\n    },\r\n    die: function( types, fn ) {\r\n        jQuery( this.context ).off( types, this.selector || \"**\", fn );\r\n        return this;\r\n    },\r\n\r\n    delegate: function( selector, types, data, fn ) {\r\n        return this.on( types, selector, data, fn );\r\n    },\r\n    undelegate: function( selector, types, fn ) {\r\n        // ( namespace ) or ( selector, types [, fn] )\r\n        return arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\r\n    },\r\n\r\n    trigger: function( type, data ) {\r\n        return this.each(function() {\r\n            jQuery.event.trigger( type, data, this );\r\n        });\r\n    },\r\n    triggerHandler: function( type, data ) {\r\n        if ( this[0] ) {\r\n            return jQuery.event.trigger( type, data, this[0], true );\r\n        }\r\n    },\r\n\r\n    toggle: function( fn ) {\r\n        // Save reference to arguments for access in closure\r\n        var args = arguments,\r\n            guid = fn.guid || jQuery.guid++,\r\n            i = 0,\r\n            toggler = function( event ) {\r\n                // Figure out which function to execute\r\n                var lastToggle = ( jQuery._data( this, \"lastToggle\" + fn.guid ) || 0 ) % i;\r\n                jQuery._data( this, \"lastToggle\" + fn.guid, lastToggle + 1 );\r\n\r\n                // Make sure that clicks stop\r\n                event.preventDefault();\r\n\r\n                // and execute the function\r\n                return args[ lastToggle ].apply( this, arguments ) || false;\r\n            };\r\n\r\n        // link all the functions, so any of them can unbind this click handler\r\n        toggler.guid = guid;\r\n        while ( i < args.length ) {\r\n            args[ i++ ].guid = guid;\r\n        }\r\n\r\n        return this.click( toggler );\r\n    },\r\n\r\n    hover: function( fnOver, fnOut ) {\r\n        return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\r\n    }\r\n});\r\n\r\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\r\n    \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\r\n    \"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\r\n\r\n    // Handle event binding\r\n    jQuery.fn[ name ] = function( data, fn ) {\r\n        if ( fn == null ) {\r\n            fn = data;\r\n            data = null;\r\n        }\r\n\r\n        return arguments.length > 0 ?\r\n            this.on( name, null, data, fn ) :\r\n            this.trigger( name );\r\n    };\r\n\r\n    if ( rkeyEvent.test( name ) ) {\r\n        jQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;\r\n    }\r\n\r\n    if ( rmouseEvent.test( name ) ) {\r\n        jQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;\r\n    }\r\n});\r\n/*!\r\n * Sizzle CSS Selector Engine\r\n * Copyright 2012 jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://sizzlejs.com/\r\n */\r\n(function( window, undefined ) {\r\n\r\nvar cachedruns,\r\n    assertGetIdNotName,\r\n    Expr,\r\n    getText,\r\n    isXML,\r\n    contains,\r\n    compile,\r\n    sortOrder,\r\n    hasDuplicate,\r\n    outermostContext,\r\n\r\n    baseHasDuplicate = true,\r\n    strundefined = \"undefined\",\r\n\r\n    expando = ( \"sizcache\" + Math.random() ).replace( \".\", \"\" ),\r\n\r\n    Token = String,\r\n    document = window.document,\r\n    docElem = document.documentElement,\r\n    dirruns = 0,\r\n    done = 0,\r\n    pop = [].pop,\r\n    push = [].push,\r\n    slice = [].slice,\r\n    // Use a stripped-down indexOf if a native one is unavailable\r\n    indexOf = [].indexOf || function( elem ) {\r\n        var i = 0,\r\n            len = this.length;\r\n        for ( ; i < len; i++ ) {\r\n            if ( this[i] === elem ) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    },\r\n\r\n    // Augment a function for special use by Sizzle\r\n    markFunction = function( fn, value ) {\r\n        fn[ expando ] = value == null || value;\r\n        return fn;\r\n    },\r\n\r\n    createCache = function() {\r\n        var cache = {},\r\n            keys = [];\r\n\r\n        return markFunction(function( key, value ) {\r\n            // Only keep the most recent entries\r\n            if ( keys.push( key ) > Expr.cacheLength ) {\r\n                delete cache[ keys.shift() ];\r\n            }\r\n\r\n            // Retrieve with (key + \" \") to avoid collision with native Object.prototype properties (see Issue #157)\r\n            return (cache[ key + \" \" ] = value);\r\n        }, cache );\r\n    },\r\n\r\n    classCache = createCache(),\r\n    tokenCache = createCache(),\r\n    compilerCache = createCache(),\r\n\r\n    // Regex\r\n\r\n    // Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\r\n    whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\r\n    // http://www.w3.org/TR/css3-syntax/#characters\r\n    characterEncoding = \"(?:\\\\\\\\.|[-\\\\w]|[^\\\\x00-\\\\xa0])+\",\r\n\r\n    // Loosely modeled on CSS identifier characters\r\n    // An unquoted value should be a CSS identifier (http://www.w3.org/TR/css3-selectors/#attribute-selectors)\r\n    // Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\r\n    identifier = characterEncoding.replace( \"w\", \"w#\" ),\r\n\r\n    // Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors\r\n    operators = \"([*^$|!~]?=)\",\r\n    attributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")\" + whitespace +\r\n        \"*(?:\" + operators + whitespace + \"*(?:([\'\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\" + identifier + \")|)|)\" + whitespace + \"*\\\\]\",\r\n\r\n    // Prefer arguments not in parens/brackets,\r\n    //   then attribute selectors and non-pseudos (denoted by :),\r\n    //   then anything else\r\n    // These preferences are here to reduce the number of selectors\r\n    //   needing tokenize in the PSEUDO preFilter\r\n    pseudos = \":(\" + characterEncoding + \")(?:\\\\((?:([\'\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\2|([^()[\\\\]]*|(?:(?:\" + attributes + \")|[^:]|\\\\\\\\.)*|.*))\\\\)|)\",\r\n\r\n    // For matchExpr.POS and matchExpr.needsContext\r\n    pos = \":(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\r\n        \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\",\r\n\r\n    // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\r\n    rtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\r\n\r\n    rcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\r\n    rcombinators = new RegExp( \"^\" + whitespace + \"*([\\\\x20\\\\t\\\\r\\\\n\\\\f>+~])\" + whitespace + \"*\" ),\r\n    rpseudo = new RegExp( pseudos ),\r\n\r\n    // Easily-parseable/retrievable ID or TAG or CLASS selectors\r\n    rquickExpr = /^(?:#([\\w\\-]+)|(\\w+)|\\.([\\w\\-]+))$/,\r\n\r\n    rnot = /^:not/,\r\n    rsibling = /[\\x20\\t\\r\\n\\f]*[+~]/,\r\n    rendsWithNot = /:not\\($/,\r\n\r\n    rheader = /h\\d/i,\r\n    rinputs = /input|select|textarea|button/i,\r\n\r\n    rbackslash = /\\\\(?!\\\\)/g,\r\n\r\n    matchExpr = {\r\n        \"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\r\n        \"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\r\n        \"NAME\": new RegExp( \"^\\\\[name=[\'\\\"]?(\" + characterEncoding + \")[\'\\\"]?\\\\]\" ),\r\n        \"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\r\n        \"ATTR\": new RegExp( \"^\" + attributes ),\r\n        \"PSEUDO\": new RegExp( \"^\" + pseudos ),\r\n        \"POS\": new RegExp( pos, \"i\" ),\r\n        \"CHILD\": new RegExp( \"^:(only|nth|first|last)-child(?:\\\\(\" + whitespace +\r\n            \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\r\n            \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\r\n        // For use in libraries implementing .is()\r\n        \"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|\" + pos, \"i\" )\r\n    },\r\n\r\n    // Support\r\n\r\n    // Used for testing something on an element\r\n    assert = function( fn ) {\r\n        var div = document.createElement(\"div\");\r\n\r\n        try {\r\n            return fn( div );\r\n        } catch (e) {\r\n            return false;\r\n        } finally {\r\n            // release memory in IE\r\n            div = null;\r\n        }\r\n    },\r\n\r\n    // Check if getElementsByTagName(\"*\") returns only elements\r\n    assertTagNameNoComments = assert(function( div ) {\r\n        div.appendChild( document.createComment(\"\") );\r\n        return !div.getElementsByTagName(\"*\").length;\r\n    }),\r\n\r\n    // Check if getAttribute returns normalized href attributes\r\n    assertHrefNotNormalized = assert(function( div ) {\r\n        div.innerHTML = \"<a href=\'#\'></a>\";\r\n        return div.firstChild && typeof div.firstChild.getAttribute !== strundefined &&\r\n            div.firstChild.getAttribute(\"href\") === \"#\";\r\n    }),\r\n\r\n    // Check if attributes should be retrieved by attribute nodes\r\n    assertAttributes = assert(function( div ) {\r\n        div.innerHTML = \"<select></select>\";\r\n        var type = typeof div.lastChild.getAttribute(\"multiple\");\r\n        // IE8 returns a string for some attributes even when not present\r\n        return type !== \"boolean\" && type !== \"string\";\r\n    }),\r\n\r\n    // Check if getElementsByClassName can be trusted\r\n    assertUsableClassName = assert(function( div ) {\r\n        // Opera can\'t find a second classname (in 9.6)\r\n        div.innerHTML = \"<div class=\'hidden e\'></div><div class=\'hidden\'></div>\";\r\n        if ( !div.getElementsByClassName || !div.getElementsByClassName(\"e\").length ) {\r\n            return false;\r\n        }\r\n\r\n        // Safari 3.2 caches class attributes and doesn\'t catch changes\r\n        div.lastChild.className = \"e\";\r\n        return div.getElementsByClassName(\"e\").length === 2;\r\n    }),\r\n\r\n    // Check if getElementById returns elements by name\r\n    // Check if getElementsByName privileges form controls or returns elements by ID\r\n    assertUsableName = assert(function( div ) {\r\n        // Inject content\r\n        div.id = expando + 0;\r\n        div.innerHTML = \"<a name=\'\" + expando + \"\'></a><div name=\'\" + expando + \"\'></div>\";\r\n        docElem.insertBefore( div, docElem.firstChild );\r\n\r\n        // Test\r\n        var pass = document.getElementsByName &&\r\n            // buggy browsers will return fewer than the correct 2\r\n            document.getElementsByName( expando ).length === 2 +\r\n            // buggy browsers will return more than the correct 0\r\n            document.getElementsByName( expando + 0 ).length;\r\n        assertGetIdNotName = !document.getElementById( expando );\r\n\r\n        // Cleanup\r\n        docElem.removeChild( div );\r\n\r\n        return pass;\r\n    });\r\n\r\n// If slice is not available, provide a backup\r\ntry {\r\n    slice.call( docElem.childNodes, 0 )[0].nodeType;\r\n} catch ( e ) {\r\n    slice = function( i ) {\r\n        var elem,\r\n            results = [];\r\n        for ( ; (elem = this[i]); i++ ) {\r\n            results.push( elem );\r\n        }\r\n        return results;\r\n    };\r\n}\r\n\r\nfunction Sizzle( selector, context, results, seed ) {\r\n    results = results || [];\r\n    context = context || document;\r\n    var match, elem, xml, m,\r\n        nodeType = context.nodeType;\r\n\r\n    if ( !selector || typeof selector !== \"string\" ) {\r\n        return results;\r\n    }\r\n\r\n    if ( nodeType !== 1 && nodeType !== 9 ) {\r\n        return [];\r\n    }\r\n\r\n    xml = isXML( context );\r\n\r\n    if ( !xml && !seed ) {\r\n        if ( (match = rquickExpr.exec( selector )) ) {\r\n            // Speed-up: Sizzle(\"#ID\")\r\n            if ( (m = match[1]) ) {\r\n                if ( nodeType === 9 ) {\r\n                    elem = context.getElementById( m );\r\n                    // Check parentNode to catch when Blackberry 4.6 returns\r\n                    // nodes that are no longer in the document #6963\r\n                    if ( elem && elem.parentNode ) {\r\n                        // Handle the case where IE, Opera, and Webkit return items\r\n                        // by name instead of ID\r\n                        if ( elem.id === m ) {\r\n                            results.push( elem );\r\n                            return results;\r\n                        }\r\n                    } else {\r\n                        return results;\r\n                    }\r\n                } else {\r\n                    // Context is not a document\r\n                    if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\r\n                        contains( context, elem ) && elem.id === m ) {\r\n                        results.push( elem );\r\n                        return results;\r\n                    }\r\n                }\r\n\r\n            // Speed-up: Sizzle(\"TAG\")\r\n            } else if ( match[2] ) {\r\n                push.apply( results, slice.call(context.getElementsByTagName( selector ), 0) );\r\n                return results;\r\n\r\n            // Speed-up: Sizzle(\".CLASS\")\r\n            } else if ( (m = match[3]) && assertUsableClassName && context.getElementsByClassName ) {\r\n                push.apply( results, slice.call(context.getElementsByClassName( m ), 0) );\r\n                return results;\r\n            }\r\n        }\r\n    }\r\n\r\n    // All others\r\n    return select( selector.replace( rtrim, \"$1\" ), context, results, seed, xml );\r\n}\r\n\r\nSizzle.matches = function( expr, elements ) {\r\n    return Sizzle( expr, null, null, elements );\r\n};\r\n\r\nSizzle.matchesSelector = function( elem, expr ) {\r\n    return Sizzle( expr, null, null, [ elem ] ).length > 0;\r\n};\r\n\r\n// Returns a function to use in pseudos for input types\r\nfunction createInputPseudo( type ) {\r\n    return function( elem ) {\r\n        var name = elem.nodeName.toLowerCase();\r\n        return name === \"input\" && elem.type === type;\r\n    };\r\n}\r\n\r\n// Returns a function to use in pseudos for buttons\r\nfunction createButtonPseudo( type ) {\r\n    return function( elem ) {\r\n        var name = elem.nodeName.toLowerCase();\r\n        return (name === \"input\" || name === \"button\") && elem.type === type;\r\n    };\r\n}\r\n\r\n// Returns a function to use in pseudos for positionals\r\nfunction createPositionalPseudo( fn ) {\r\n    return markFunction(function( argument ) {\r\n        argument = +argument;\r\n        return markFunction(function( seed, matches ) {\r\n            var j,\r\n                matchIndexes = fn( [], seed.length, argument ),\r\n                i = matchIndexes.length;\r\n\r\n            // Match elements found at the specified indexes\r\n            while ( i-- ) {\r\n                if ( seed[ (j = matchIndexes[i]) ] ) {\r\n                    seed[j] = !(matches[j] = seed[j]);\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Utility function for retrieving the text value of an array of DOM nodes\r\n * @param {Array|Element} elem\r\n */\r\ngetText = Sizzle.getText = function( elem ) {\r\n    var node,\r\n        ret = \"\",\r\n        i = 0,\r\n        nodeType = elem.nodeType;\r\n\r\n    if ( nodeType ) {\r\n        if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\r\n            // Use textContent for elements\r\n            // innerText usage removed for consistency of new lines (see #11153)\r\n            if ( typeof elem.textContent === \"string\" ) {\r\n                return elem.textContent;\r\n            } else {\r\n                // Traverse its children\r\n                for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n                    ret += getText( elem );\r\n                }\r\n            }\r\n        } else if ( nodeType === 3 || nodeType === 4 ) {\r\n            return elem.nodeValue;\r\n        }\r\n        // Do not include comment or processing instruction nodes\r\n    } else {\r\n\r\n        // If no nodeType, this is expected to be an array\r\n        for ( ; (node = elem[i]); i++ ) {\r\n            // Do not traverse comment nodes\r\n            ret += getText( node );\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n\r\nisXML = Sizzle.isXML = function( elem ) {\r\n    // documentElement is verified for cases where it doesn\'t yet exist\r\n    // (such as loading iframes in IE - #4833)\r\n    var documentElement = elem && (elem.ownerDocument || elem).documentElement;\r\n    return documentElement ? documentElement.nodeName !== \"HTML\" : false;\r\n};\r\n\r\n// Element contains another\r\ncontains = Sizzle.contains = docElem.contains ?\r\n    function( a, b ) {\r\n        var adown = a.nodeType === 9 ? a.documentElement : a,\r\n            bup = b && b.parentNode;\r\n        return a === bup || !!( bup && bup.nodeType === 1 && adown.contains && adown.contains(bup) );\r\n    } :\r\n    docElem.compareDocumentPosition ?\r\n    function( a, b ) {\r\n        return b && !!( a.compareDocumentPosition( b ) & 16 );\r\n    } :\r\n    function( a, b ) {\r\n        while ( (b = b.parentNode) ) {\r\n            if ( b === a ) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\nSizzle.attr = function( elem, name ) {\r\n    var val,\r\n        xml = isXML( elem );\r\n\r\n    if ( !xml ) {\r\n        name = name.toLowerCase();\r\n    }\r\n    if ( (val = Expr.attrHandle[ name ]) ) {\r\n        return val( elem );\r\n    }\r\n    if ( xml || assertAttributes ) {\r\n        return elem.getAttribute( name );\r\n    }\r\n    val = elem.getAttributeNode( name );\r\n    return val ?\r\n        typeof elem[ name ] === \"boolean\" ?\r\n            elem[ name ] ? name : null :\r\n            val.specified ? val.value : null :\r\n        null;\r\n};\r\n\r\nExpr = Sizzle.selectors = {\r\n\r\n    // Can be adjusted by the user\r\n    cacheLength: 50,\r\n\r\n    createPseudo: markFunction,\r\n\r\n    match: matchExpr,\r\n\r\n    // IE6/7 return a modified href\r\n    attrHandle: assertHrefNotNormalized ?\r\n        {} :\r\n        {\r\n            \"href\": function( elem ) {\r\n                return elem.getAttribute( \"href\", 2 );\r\n            },\r\n            \"type\": function( elem ) {\r\n                return elem.getAttribute(\"type\");\r\n            }\r\n        },\r\n\r\n    find: {\r\n        \"ID\": assertGetIdNotName ?\r\n            function( id, context, xml ) {\r\n                if ( typeof context.getElementById !== strundefined && !xml ) {\r\n                    var m = context.getElementById( id );\r\n                    // Check parentNode to catch when Blackberry 4.6 returns\r\n                    // nodes that are no longer in the document #6963\r\n                    return m && m.parentNode ? [m] : [];\r\n                }\r\n            } :\r\n            function( id, context, xml ) {\r\n                if ( typeof context.getElementById !== strundefined && !xml ) {\r\n                    var m = context.getElementById( id );\r\n\r\n                    return m ?\r\n                        m.id === id || typeof m.getAttributeNode !== strundefined && m.getAttributeNode(\"id\").value === id ?\r\n                            [m] :\r\n                            undefined :\r\n                        [];\r\n                }\r\n            },\r\n\r\n        \"TAG\": assertTagNameNoComments ?\r\n            function( tag, context ) {\r\n                if ( typeof context.getElementsByTagName !== strundefined ) {\r\n                    return context.getElementsByTagName( tag );\r\n                }\r\n            } :\r\n            function( tag, context ) {\r\n                var results = context.getElementsByTagName( tag );\r\n\r\n                // Filter out possible comments\r\n                if ( tag === \"*\" ) {\r\n                    var elem,\r\n                        tmp = [],\r\n                        i = 0;\r\n\r\n                    for ( ; (elem = results[i]); i++ ) {\r\n                        if ( elem.nodeType === 1 ) {\r\n                            tmp.push( elem );\r\n                        }\r\n                    }\r\n\r\n                    return tmp;\r\n                }\r\n                return results;\r\n            },\r\n\r\n        \"NAME\": assertUsableName && function( tag, context ) {\r\n            if ( typeof context.getElementsByName !== strundefined ) {\r\n                return context.getElementsByName( name );\r\n            }\r\n        },\r\n\r\n        \"CLASS\": assertUsableClassName && function( className, context, xml ) {\r\n            if ( typeof context.getElementsByClassName !== strundefined && !xml ) {\r\n                return context.getElementsByClassName( className );\r\n            }\r\n        }\r\n    },\r\n\r\n    relative: {\r\n        \">\": { dir: \"parentNode\", first: true },\r\n        \" \": { dir: \"parentNode\" },\r\n        \"+\": { dir: \"previousSibling\", first: true },\r\n        \"~\": { dir: \"previousSibling\" }\r\n    },\r\n\r\n    preFilter: {\r\n        \"ATTR\": function( match ) {\r\n            match[1] = match[1].replace( rbackslash, \"\" );\r\n\r\n            // Move the given value to match[3] whether quoted or unquoted\r\n            match[3] = ( match[4] || match[5] || \"\" ).replace( rbackslash, \"\" );\r\n\r\n            if ( match[2] === \"~=\" ) {\r\n                match[3] = \" \" + match[3] + \" \";\r\n            }\r\n\r\n            return match.slice( 0, 4 );\r\n        },\r\n\r\n        \"CHILD\": function( match ) {\r\n            /* matches from matchExpr[\"CHILD\"]\r\n                1 type (only|nth|...)\r\n                2 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\r\n                3 xn-component of xn+y argument ([+-]?\\d*n|)\r\n                4 sign of xn-component\r\n                5 x of xn-component\r\n                6 sign of y-component\r\n                7 y of y-component\r\n            */\r\n            match[1] = match[1].toLowerCase();\r\n\r\n            if ( match[1] === \"nth\" ) {\r\n                // nth-child requires argument\r\n                if ( !match[2] ) {\r\n                    Sizzle.error( match[0] );\r\n                }\r\n\r\n                // numeric x and y parameters for Expr.filter.CHILD\r\n                // remember that false/true cast respectively to 0/1\r\n                match[3] = +( match[3] ? match[4] + (match[5] || 1) : 2 * ( match[2] === \"even\" || match[2] === \"odd\" ) );\r\n                match[4] = +( ( match[6] + match[7] ) || match[2] === \"odd\" );\r\n\r\n            // other types prohibit arguments\r\n            } else if ( match[2] ) {\r\n                Sizzle.error( match[0] );\r\n            }\r\n\r\n            return match;\r\n        },\r\n\r\n        \"PSEUDO\": function( match ) {\r\n            var unquoted, excess;\r\n            if ( matchExpr[\"CHILD\"].test( match[0] ) ) {\r\n                return null;\r\n            }\r\n\r\n            if ( match[3] ) {\r\n                match[2] = match[3];\r\n            } else if ( (unquoted = match[4]) ) {\r\n                // Only check arguments that contain a pseudo\r\n                if ( rpseudo.test(unquoted) &&\r\n                    // Get excess from tokenize (recursively)\r\n                    (excess = tokenize( unquoted, true )) &&\r\n                    // advance to the next closing parenthesis\r\n                    (excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\r\n\r\n                    // excess is a negative index\r\n                    unquoted = unquoted.slice( 0, excess );\r\n                    match[0] = match[0].slice( 0, excess );\r\n                }\r\n                match[2] = unquoted;\r\n            }\r\n\r\n            // Return only captures needed by the pseudo filter method (type and argument)\r\n            return match.slice( 0, 3 );\r\n        }\r\n    },\r\n\r\n    filter: {\r\n        \"ID\": assertGetIdNotName ?\r\n            function( id ) {\r\n                id = id.replace( rbackslash, \"\" );\r\n                return function( elem ) {\r\n                    return elem.getAttribute(\"id\") === id;\r\n                };\r\n            } :\r\n            function( id ) {\r\n                id = id.replace( rbackslash, \"\" );\r\n                return function( elem ) {\r\n                    var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\r\n                    return node && node.value === id;\r\n                };\r\n            },\r\n\r\n        \"TAG\": function( nodeName ) {\r\n            if ( nodeName === \"*\" ) {\r\n                return function() { return true; };\r\n            }\r\n            nodeName = nodeName.replace( rbackslash, \"\" ).toLowerCase();\r\n\r\n            return function( elem ) {\r\n                return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\r\n            };\r\n        },\r\n\r\n        \"CLASS\": function( className ) {\r\n            var pattern = classCache[ expando ][ className + \" \" ];\r\n\r\n            return pattern ||\r\n                (pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\r\n                classCache( className, function( elem ) {\r\n                    return pattern.test( elem.className || (typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\")) || \"\" );\r\n                });\r\n        },\r\n\r\n        \"ATTR\": function( name, operator, check ) {\r\n            return function( elem, context ) {\r\n                var result = Sizzle.attr( elem, name );\r\n\r\n                if ( result == null ) {\r\n                    return operator === \"!=\";\r\n                }\r\n                if ( !operator ) {\r\n                    return true;\r\n                }\r\n\r\n                result += \"\";\r\n\r\n                return operator === \"=\" ? result === check :\r\n                    operator === \"!=\" ? result !== check :\r\n                    operator === \"^=\" ? check && result.indexOf( check ) === 0 :\r\n                    operator === \"*=\" ? check && result.indexOf( check ) > -1 :\r\n                    operator === \"$=\" ? check && result.substr( result.length - check.length ) === check :\r\n                    operator === \"~=\" ? ( \" \" + result + \" \" ).indexOf( check ) > -1 :\r\n                    operator === \"|=\" ? result === check || result.substr( 0, check.length + 1 ) === check + \"-\" :\r\n                    false;\r\n            };\r\n        },\r\n\r\n        \"CHILD\": function( type, argument, first, last ) {\r\n\r\n            if ( type === \"nth\" ) {\r\n                return function( elem ) {\r\n                    var node, diff,\r\n                        parent = elem.parentNode;\r\n\r\n                    if ( first === 1 && last === 0 ) {\r\n                        return true;\r\n                    }\r\n\r\n                    if ( parent ) {\r\n                        diff = 0;\r\n                        for ( node = parent.firstChild; node; node = node.nextSibling ) {\r\n                            if ( node.nodeType === 1 ) {\r\n                                diff++;\r\n                                if ( elem === node ) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Incorporate the offset (or cast to NaN), then check against cycle size\r\n                    diff -= last;\r\n                    return diff === first || ( diff % first === 0 && diff / first >= 0 );\r\n                };\r\n            }\r\n\r\n            return function( elem ) {\r\n                var node = elem;\r\n\r\n                switch ( type ) {\r\n                    case \"only\":\r\n                    case \"first\":\r\n                        while ( (node = node.previousSibling) ) {\r\n                            if ( node.nodeType === 1 ) {\r\n                                return false;\r\n                            }\r\n                        }\r\n\r\n                        if ( type === \"first\" ) {\r\n                            return true;\r\n                        }\r\n\r\n                        node = elem;\r\n\r\n                        /* falls through */\r\n                    case \"last\":\r\n                        while ( (node = node.nextSibling) ) {\r\n                            if ( node.nodeType === 1 ) {\r\n                                return false;\r\n                            }\r\n                        }\r\n\r\n                        return true;\r\n                }\r\n            };\r\n        },\r\n\r\n        \"PSEUDO\": function( pseudo, argument ) {\r\n            // pseudo-class names are case-insensitive\r\n            // http://www.w3.org/TR/selectors/#pseudo-classes\r\n            // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\r\n            // Remember that setFilters inherits from pseudos\r\n            var args,\r\n                fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\r\n                    Sizzle.error( \"unsupported pseudo: \" + pseudo );\r\n\r\n            // The user may use createPseudo to indicate that\r\n            // arguments are needed to create the filter function\r\n            // just as Sizzle does\r\n            if ( fn[ expando ] ) {\r\n                return fn( argument );\r\n            }\r\n\r\n            // But maintain support for old signatures\r\n            if ( fn.length > 1 ) {\r\n                args = [ pseudo, pseudo, \"\", argument ];\r\n                return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\r\n                    markFunction(function( seed, matches ) {\r\n                        var idx,\r\n                            matched = fn( seed, argument ),\r\n                            i = matched.length;\r\n                        while ( i-- ) {\r\n                            idx = indexOf.call( seed, matched[i] );\r\n                            seed[ idx ] = !( matches[ idx ] = matched[i] );\r\n                        }\r\n                    }) :\r\n                    function( elem ) {\r\n                        return fn( elem, 0, args );\r\n                    };\r\n            }\r\n\r\n            return fn;\r\n        }\r\n    },\r\n\r\n    pseudos: {\r\n        \"not\": markFunction(function( selector ) {\r\n            // Trim the selector passed to compile\r\n            // to avoid treating leading and trailing\r\n            // spaces as combinators\r\n            var input = [],\r\n                results = [],\r\n                matcher = compile( selector.replace( rtrim, \"$1\" ) );\r\n\r\n            return matcher[ expando ] ?\r\n                markFunction(function( seed, matches, context, xml ) {\r\n                    var elem,\r\n                        unmatched = matcher( seed, null, xml, [] ),\r\n                        i = seed.length;\r\n\r\n                    // Match elements unmatched by `matcher`\r\n                    while ( i-- ) {\r\n                        if ( (elem = unmatched[i]) ) {\r\n                            seed[i] = !(matches[i] = elem);\r\n                        }\r\n                    }\r\n                }) :\r\n                function( elem, context, xml ) {\r\n                    input[0] = elem;\r\n                    matcher( input, null, xml, results );\r\n                    return !results.pop();\r\n                };\r\n        }),\r\n\r\n        \"has\": markFunction(function( selector ) {\r\n            return function( elem ) {\r\n                return Sizzle( selector, elem ).length > 0;\r\n            };\r\n        }),\r\n\r\n        \"contains\": markFunction(function( text ) {\r\n            return function( elem ) {\r\n                return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\r\n            };\r\n        }),\r\n\r\n        \"enabled\": function( elem ) {\r\n            return elem.disabled === false;\r\n        },\r\n\r\n        \"disabled\": function( elem ) {\r\n            return elem.disabled === true;\r\n        },\r\n\r\n        \"checked\": function( elem ) {\r\n            // In CSS3, :checked should return both checked and selected elements\r\n            // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n            var nodeName = elem.nodeName.toLowerCase();\r\n            return (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\r\n        },\r\n\r\n        \"selected\": function( elem ) {\r\n            // Accessing this property makes selected-by-default\r\n            // options in Safari work properly\r\n            if ( elem.parentNode ) {\r\n                elem.parentNode.selectedIndex;\r\n            }\r\n\r\n            return elem.selected === true;\r\n        },\r\n\r\n        \"parent\": function( elem ) {\r\n            return !Expr.pseudos[\"empty\"]( elem );\r\n        },\r\n\r\n        \"empty\": function( elem ) {\r\n            // http://www.w3.org/TR/selectors/#empty-pseudo\r\n            // :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),\r\n            //   not comment, processing instructions, or others\r\n            // Thanks to Diego Perini for the nodeName shortcut\r\n            //   Greater than \"@\" means alpha characters (specifically not starting with \"#\" or \"?\")\r\n            var nodeType;\r\n            elem = elem.firstChild;\r\n            while ( elem ) {\r\n                if ( elem.nodeName > \"@\" || (nodeType = elem.nodeType) === 3 || nodeType === 4 ) {\r\n                    return false;\r\n                }\r\n                elem = elem.nextSibling;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        \"text\": function( elem ) {\r\n            var type, attr;\r\n            // IE6 and 7 will map elem.type to \'text\' for new HTML5 types (search, etc)\r\n            // use getAttribute instead to test this case\r\n            return elem.nodeName.toLowerCase() === \"input\" &&\r\n                (type = elem.type) === \"text\" &&\r\n                ( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === type );\r\n        },\r\n\r\n        // Input types\r\n        \"radio\": createInputPseudo(\"radio\"),\r\n        \"checkbox\": createInputPseudo(\"checkbox\"),\r\n        \"file\": createInputPseudo(\"file\"),\r\n        \"password\": createInputPseudo(\"password\"),\r\n        \"image\": createInputPseudo(\"image\"),\r\n\r\n        \"submit\": createButtonPseudo(\"submit\"),\r\n        \"reset\": createButtonPseudo(\"reset\"),\r\n\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        \"focus\": function( elem ) {\r\n            var doc = elem.ownerDocument;\r\n            return elem === doc.activeElement && (!doc.hasFocus || doc.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\r\n        },\r\n\r\n        \"active\": function( elem ) {\r\n            return elem === elem.ownerDocument.activeElement;\r\n        },\r\n\r\n        // Positional types\r\n        \"first\": createPositionalPseudo(function() {\r\n            return [ 0 ];\r\n        }),\r\n\r\n        \"last\": createPositionalPseudo(function( matchIndexes, length ) {\r\n            return [ length - 1 ];\r\n        }),\r\n\r\n        \"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n            return [ argument < 0 ? argument + length : argument ];\r\n        }),\r\n\r\n        \"even\": createPositionalPseudo(function( matchIndexes, length ) {\r\n            for ( var i = 0; i < length; i += 2 ) {\r\n                matchIndexes.push( i );\r\n            }\r\n            return matchIndexes;\r\n        }),\r\n\r\n        \"odd\": createPositionalPseudo(function( matchIndexes, length ) {\r\n            for ( var i = 1; i < length; i += 2 ) {\r\n                matchIndexes.push( i );\r\n            }\r\n            return matchIndexes;\r\n        }),\r\n\r\n        \"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n            for ( var i = argument < 0 ? argument + length : argument; --i >= 0; ) {\r\n                matchIndexes.push( i );\r\n            }\r\n            return matchIndexes;\r\n        }),\r\n\r\n        \"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n            for ( var i = argument < 0 ? argument + length : argument; ++i < length; ) {\r\n                matchIndexes.push( i );\r\n            }\r\n            return matchIndexes;\r\n        })\r\n    }\r\n};\r\n\r\nfunction siblingCheck( a, b, ret ) {\r\n    if ( a === b ) {\r\n        return ret;\r\n    }\r\n\r\n    var cur = a.nextSibling;\r\n\r\n    while ( cur ) {\r\n        if ( cur === b ) {\r\n            return -1;\r\n        }\r\n\r\n        cur = cur.nextSibling;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nsortOrder = docElem.compareDocumentPosition ?\r\n    function( a, b ) {\r\n        if ( a === b ) {\r\n            hasDuplicate = true;\r\n            return 0;\r\n        }\r\n\r\n        return ( !a.compareDocumentPosition || !b.compareDocumentPosition ?\r\n            a.compareDocumentPosition :\r\n            a.compareDocumentPosition(b) & 4\r\n        ) ? -1 : 1;\r\n    } :\r\n    function( a, b ) {\r\n        // The nodes are identical, we can exit early\r\n        if ( a === b ) {\r\n            hasDuplicate = true;\r\n            return 0;\r\n\r\n        // Fallback to using sourceIndex (in IE) if it\'s available on both nodes\r\n        } else if ( a.sourceIndex && b.sourceIndex ) {\r\n            return a.sourceIndex - b.sourceIndex;\r\n        }\r\n\r\n        var al, bl,\r\n            ap = [],\r\n            bp = [],\r\n            aup = a.parentNode,\r\n            bup = b.parentNode,\r\n            cur = aup;\r\n\r\n        // If the nodes are siblings (or identical) we can do a quick check\r\n        if ( aup === bup ) {\r\n            return siblingCheck( a, b );\r\n\r\n        // If no parents were found then the nodes are disconnected\r\n        } else if ( !aup ) {\r\n            return -1;\r\n\r\n        } else if ( !bup ) {\r\n            return 1;\r\n        }\r\n\r\n        // Otherwise they\'re somewhere else in the tree so we need\r\n        // to build up a full list of the parentNodes for comparison\r\n        while ( cur ) {\r\n            ap.unshift( cur );\r\n            cur = cur.parentNode;\r\n        }\r\n\r\n        cur = bup;\r\n\r\n        while ( cur ) {\r\n            bp.unshift( cur );\r\n            cur = cur.parentNode;\r\n        }\r\n\r\n        al = ap.length;\r\n        bl = bp.length;\r\n\r\n        // Start walking down the tree looking for a discrepancy\r\n        for ( var i = 0; i < al && i < bl; i++ ) {\r\n            if ( ap[i] !== bp[i] ) {\r\n                return siblingCheck( ap[i], bp[i] );\r\n            }\r\n        }\r\n\r\n        // We ended someplace up the tree so do a sibling check\r\n        return i === al ?\r\n            siblingCheck( a, bp[i], -1 ) :\r\n            siblingCheck( ap[i], b, 1 );\r\n    };\r\n\r\n// Always assume the presence of duplicates if sort doesn\'t\r\n// pass them to our comparison function (as in Google Chrome).\r\n[0, 0].sort( sortOrder );\r\nbaseHasDuplicate = !hasDuplicate;\r\n\r\n// Document sorting and removing duplicates\r\nSizzle.uniqueSort = function( results ) {\r\n    var elem,\r\n        duplicates = [],\r\n        i = 1,\r\n        j = 0;\r\n\r\n    hasDuplicate = baseHasDuplicate;\r\n    results.sort( sortOrder );\r\n\r\n    if ( hasDuplicate ) {\r\n        for ( ; (elem = results[i]); i++ ) {\r\n            if ( elem === results[ i - 1 ] ) {\r\n                j = duplicates.push( i );\r\n            }\r\n        }\r\n        while ( j-- ) {\r\n            results.splice( duplicates[ j ], 1 );\r\n        }\r\n    }\r\n\r\n    return results;\r\n};\r\n\r\nSizzle.error = function( msg ) {\r\n    throw new Error( \"Syntax error, unrecognized expression: \" + msg );\r\n};\r\n\r\nfunction tokenize( selector, parseOnly ) {\r\n    var matched, match, tokens, type,\r\n        soFar, groups, preFilters,\r\n        cached = tokenCache[ expando ][ selector + \" \" ];\r\n\r\n    if ( cached ) {\r\n        return parseOnly ? 0 : cached.slice( 0 );\r\n    }\r\n\r\n    soFar = selector;\r\n    groups = [];\r\n    preFilters = Expr.preFilter;\r\n\r\n    while ( soFar ) {\r\n\r\n        // Comma and first run\r\n        if ( !matched || (match = rcomma.exec( soFar )) ) {\r\n            if ( match ) {\r\n                // Don\'t consume trailing commas as valid\r\n                soFar = soFar.slice( match[0].length ) || soFar;\r\n            }\r\n            groups.push( tokens = [] );\r\n        }\r\n\r\n        matched = false;\r\n\r\n        // Combinators\r\n        if ( (match = rcombinators.exec( soFar )) ) {\r\n            tokens.push( matched = new Token( match.shift() ) );\r\n            soFar = soFar.slice( matched.length );\r\n\r\n            // Cast descendant combinators to space\r\n            matched.type = match[0].replace( rtrim, \" \" );\r\n        }\r\n\r\n        // Filters\r\n        for ( type in Expr.filter ) {\r\n            if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\r\n                (match = preFilters[ type ]( match ))) ) {\r\n\r\n                tokens.push( matched = new Token( match.shift() ) );\r\n                soFar = soFar.slice( matched.length );\r\n                matched.type = type;\r\n                matched.matches = match;\r\n            }\r\n        }\r\n\r\n        if ( !matched ) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    // Return the length of the invalid excess\r\n    // if we\'re just parsing\r\n    // Otherwise, throw an error or return tokens\r\n    return parseOnly ?\r\n        soFar.length :\r\n        soFar ?\r\n            Sizzle.error( selector ) :\r\n            // Cache the tokens\r\n            tokenCache( selector, groups ).slice( 0 );\r\n}\r\n\r\nfunction addCombinator( matcher, combinator, base ) {\r\n    var dir = combinator.dir,\r\n        checkNonElements = base && combinator.dir === \"parentNode\",\r\n        doneName = done++;\r\n\r\n    return combinator.first ?\r\n        // Check against closest ancestor/preceding element\r\n        function( elem, context, xml ) {\r\n            while ( (elem = elem[ dir ]) ) {\r\n                if ( checkNonElements || elem.nodeType === 1  ) {\r\n                    return matcher( elem, context, xml );\r\n                }\r\n            }\r\n        } :\r\n\r\n        // Check against all ancestor/preceding elements\r\n        function( elem, context, xml ) {\r\n            // We can\'t set arbitrary data on XML nodes, so they don\'t benefit from dir caching\r\n            if ( !xml ) {\r\n                var cache,\r\n                    dirkey = dirruns + \" \" + doneName + \" \",\r\n                    cachedkey = dirkey + cachedruns;\r\n                while ( (elem = elem[ dir ]) ) {\r\n                    if ( checkNonElements || elem.nodeType === 1 ) {\r\n                        if ( (cache = elem[ expando ]) === cachedkey ) {\r\n                            return elem.sizset;\r\n                        } else if ( typeof cache === \"string\" && cache.indexOf(dirkey) === 0 ) {\r\n                            if ( elem.sizset ) {\r\n                                return elem;\r\n                            }\r\n                        } else {\r\n                            elem[ expando ] = cachedkey;\r\n                            if ( matcher( elem, context, xml ) ) {\r\n                                elem.sizset = true;\r\n                                return elem;\r\n                            }\r\n                            elem.sizset = false;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                while ( (elem = elem[ dir ]) ) {\r\n                    if ( checkNonElements || elem.nodeType === 1 ) {\r\n                        if ( matcher( elem, context, xml ) ) {\r\n                            return elem;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n}\r\n\r\nfunction elementMatcher( matchers ) {\r\n    return matchers.length > 1 ?\r\n        function( elem, context, xml ) {\r\n            var i = matchers.length;\r\n            while ( i-- ) {\r\n                if ( !matchers[i]( elem, context, xml ) ) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        } :\r\n        matchers[0];\r\n}\r\n\r\nfunction condense( unmatched, map, filter, context, xml ) {\r\n    var elem,\r\n        newUnmatched = [],\r\n        i = 0,\r\n        len = unmatched.length,\r\n        mapped = map != null;\r\n\r\n    for ( ; i < len; i++ ) {\r\n        if ( (elem = unmatched[i]) ) {\r\n            if ( !filter || filter( elem, context, xml ) ) {\r\n                newUnmatched.push( elem );\r\n                if ( mapped ) {\r\n                    map.push( i );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return newUnmatched;\r\n}\r\n\r\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\r\n    if ( postFilter && !postFilter[ expando ] ) {\r\n        postFilter = setMatcher( postFilter );\r\n    }\r\n    if ( postFinder && !postFinder[ expando ] ) {\r\n        postFinder = setMatcher( postFinder, postSelector );\r\n    }\r\n    return markFunction(function( seed, results, context, xml ) {\r\n        var temp, i, elem,\r\n            preMap = [],\r\n            postMap = [],\r\n            preexisting = results.length,\r\n\r\n            // Get initial elements from seed or context\r\n            elems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\r\n\r\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\r\n            matcherIn = preFilter && ( seed || !selector ) ?\r\n                condense( elems, preMap, preFilter, context, xml ) :\r\n                elems,\r\n\r\n            matcherOut = matcher ?\r\n                // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\r\n                postFinder || ( seed ? preFilter : preexisting || postFilter ) ?\r\n\r\n                    // ...intermediate processing is necessary\r\n                    [] :\r\n\r\n                    // ...otherwise use results directly\r\n                    results :\r\n                matcherIn;\r\n\r\n        // Find primary matches\r\n        if ( matcher ) {\r\n            matcher( matcherIn, matcherOut, context, xml );\r\n        }\r\n\r\n        // Apply postFilter\r\n        if ( postFilter ) {\r\n            temp = condense( matcherOut, postMap );\r\n            postFilter( temp, [], context, xml );\r\n\r\n            // Un-match failing elements by moving them back to matcherIn\r\n            i = temp.length;\r\n            while ( i-- ) {\r\n                if ( (elem = temp[i]) ) {\r\n                    matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\r\n                }\r\n            }\r\n        }\r\n\r\n        if ( seed ) {\r\n            if ( postFinder || preFilter ) {\r\n                if ( postFinder ) {\r\n                    // Get the final matcherOut by condensing this intermediate into postFinder contexts\r\n                    temp = [];\r\n                    i = matcherOut.length;\r\n                    while ( i-- ) {\r\n                        if ( (elem = matcherOut[i]) ) {\r\n                            // Restore matcherIn since elem is not yet a final match\r\n                            temp.push( (matcherIn[i] = elem) );\r\n                        }\r\n                    }\r\n                    postFinder( null, (matcherOut = []), temp, xml );\r\n                }\r\n\r\n                // Move matched elements from seed to results to keep them synchronized\r\n                i = matcherOut.length;\r\n                while ( i-- ) {\r\n                    if ( (elem = matcherOut[i]) &&\r\n                        (temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {\r\n\r\n                        seed[temp] = !(results[temp] = elem);\r\n                    }\r\n                }\r\n            }\r\n\r\n        // Add elements to results, through postFinder if defined\r\n        } else {\r\n            matcherOut = condense(\r\n                matcherOut === results ?\r\n                    matcherOut.splice( preexisting, matcherOut.length ) :\r\n                    matcherOut\r\n            );\r\n            if ( postFinder ) {\r\n                postFinder( null, results, matcherOut, xml );\r\n            } else {\r\n                push.apply( results, matcherOut );\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction matcherFromTokens( tokens ) {\r\n    var checkContext, matcher, j,\r\n        len = tokens.length,\r\n        leadingRelative = Expr.relative[ tokens[0].type ],\r\n        implicitRelative = leadingRelative || Expr.relative[\" \"],\r\n        i = leadingRelative ? 1 : 0,\r\n\r\n        // The foundational matcher ensures that elements are reachable from top-level context(s)\r\n        matchContext = addCombinator( function( elem ) {\r\n            return elem === checkContext;\r\n        }, implicitRelative, true ),\r\n        matchAnyContext = addCombinator( function( elem ) {\r\n            return indexOf.call( checkContext, elem ) > -1;\r\n        }, implicitRelative, true ),\r\n        matchers = [ function( elem, context, xml ) {\r\n            return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\r\n                (checkContext = context).nodeType ?\r\n                    matchContext( elem, context, xml ) :\r\n                    matchAnyContext( elem, context, xml ) );\r\n        } ];\r\n\r\n    for ( ; i < len; i++ ) {\r\n        if ( (matcher = Expr.relative[ tokens[i].type ]) ) {\r\n            matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\r\n        } else {\r\n            matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\r\n\r\n            // Return special upon seeing a positional matcher\r\n            if ( matcher[ expando ] ) {\r\n                // Find the next relative operator (if any) for proper handling\r\n                j = ++i;\r\n                for ( ; j < len; j++ ) {\r\n                    if ( Expr.relative[ tokens[j].type ] ) {\r\n                        break;\r\n                    }\r\n                }\r\n                return setMatcher(\r\n                    i > 1 && elementMatcher( matchers ),\r\n                    i > 1 && tokens.slice( 0, i - 1 ).join(\"\").replace( rtrim, \"$1\" ),\r\n                    matcher,\r\n                    i < j && matcherFromTokens( tokens.slice( i, j ) ),\r\n                    j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\r\n                    j < len && tokens.join(\"\")\r\n                );\r\n            }\r\n            matchers.push( matcher );\r\n        }\r\n    }\r\n\r\n    return elementMatcher( matchers );\r\n}\r\n\r\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\r\n    var bySet = setMatchers.length > 0,\r\n        byElement = elementMatchers.length > 0,\r\n        superMatcher = function( seed, context, xml, results, expandContext ) {\r\n            var elem, j, matcher,\r\n                setMatched = [],\r\n                matchedCount = 0,\r\n                i = \"0\",\r\n                unmatched = seed && [],\r\n                outermost = expandContext != null,\r\n                contextBackup = outermostContext,\r\n                // We must always have either seed elements or context\r\n                elems = seed || byElement && Expr.find[\"TAG\"]( \"*\", expandContext && context.parentNode || context ),\r\n                // Nested matchers should use non-integer dirruns\r\n                dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.E);\r\n\r\n            if ( outermost ) {\r\n                outermostContext = context !== document && context;\r\n                cachedruns = superMatcher.el;\r\n            }\r\n\r\n            // Add elements passing elementMatchers directly to results\r\n            for ( ; (elem = elems[i]) != null; i++ ) {\r\n                if ( byElement && elem ) {\r\n                    for ( j = 0; (matcher = elementMatchers[j]); j++ ) {\r\n                        if ( matcher( elem, context, xml ) ) {\r\n                            results.push( elem );\r\n                            break;\r\n                        }\r\n                    }\r\n                    if ( outermost ) {\r\n                        dirruns = dirrunsUnique;\r\n                        cachedruns = ++superMatcher.el;\r\n                    }\r\n                }\r\n\r\n                // Track unmatched elements for set filters\r\n                if ( bySet ) {\r\n                    // They will have gone through all possible matchers\r\n                    if ( (elem = !matcher && elem) ) {\r\n                        matchedCount--;\r\n                    }\r\n\r\n                    // Lengthen the array for every element, matched or not\r\n                    if ( seed ) {\r\n                        unmatched.push( elem );\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Apply set filters to unmatched elements\r\n            matchedCount += i;\r\n            if ( bySet && i !== matchedCount ) {\r\n                for ( j = 0; (matcher = setMatchers[j]); j++ ) {\r\n                    matcher( unmatched, setMatched, context, xml );\r\n                }\r\n\r\n                if ( seed ) {\r\n                    // Reintegrate element matches to eliminate the need for sorting\r\n                    if ( matchedCount > 0 ) {\r\n                        while ( i-- ) {\r\n                            if ( !(unmatched[i] || setMatched[i]) ) {\r\n                                setMatched[i] = pop.call( results );\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Discard index placeholder values to get only actual matches\r\n                    setMatched = condense( setMatched );\r\n                }\r\n\r\n                // Add matches to results\r\n                push.apply( results, setMatched );\r\n\r\n                // Seedless set matches succeeding multiple successful matchers stipulate sorting\r\n                if ( outermost && !seed && setMatched.length > 0 &&\r\n                    ( matchedCount + setMatchers.length ) > 1 ) {\r\n\r\n                    Sizzle.uniqueSort( results );\r\n                }\r\n            }\r\n\r\n            // Override manipulation of globals by nested matchers\r\n            if ( outermost ) {\r\n                dirruns = dirrunsUnique;\r\n                outermostContext = contextBackup;\r\n            }\r\n\r\n            return unmatched;\r\n        };\r\n\r\n    superMatcher.el = 0;\r\n    return bySet ?\r\n        markFunction( superMatcher ) :\r\n        superMatcher;\r\n}\r\n\r\ncompile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {\r\n    var i,\r\n        setMatchers = [],\r\n        elementMatchers = [],\r\n        cached = compilerCache[ expando ][ selector + \" \" ];\r\n\r\n    if ( !cached ) {\r\n        // Generate a function of recursive functions that can be used to check each element\r\n        if ( !group ) {\r\n            group = tokenize( selector );\r\n        }\r\n        i = group.length;\r\n        while ( i-- ) {\r\n            cached = matcherFromTokens( group[i] );\r\n            if ( cached[ expando ] ) {\r\n                setMatchers.push( cached );\r\n            } else {\r\n                elementMatchers.push( cached );\r\n            }\r\n        }\r\n\r\n        // Cache the compiled function\r\n        cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\r\n    }\r\n    return cached;\r\n};\r\n\r\nfunction multipleContexts( selector, contexts, results ) {\r\n    var i = 0,\r\n        len = contexts.length;\r\n    for ( ; i < len; i++ ) {\r\n        Sizzle( selector, contexts[i], results );\r\n    }\r\n    return results;\r\n}\r\n\r\nfunction select( selector, context, results, seed, xml ) {\r\n    var i, tokens, token, type, find,\r\n        match = tokenize( selector ),\r\n        j = match.length;\r\n\r\n    if ( !seed ) {\r\n        // Try to minimize operations if there is only one group\r\n        if ( match.length === 1 ) {\r\n\r\n            // Take a shortcut and set the context if the root selector is an ID\r\n            tokens = match[0] = match[0].slice( 0 );\r\n            if ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\r\n                    context.nodeType === 9 && !xml &&\r\n                    Expr.relative[ tokens[1].type ] ) {\r\n\r\n                context = Expr.find[\"ID\"]( token.matches[0].replace( rbackslash, \"\" ), context, xml )[0];\r\n                if ( !context ) {\r\n                    return results;\r\n                }\r\n\r\n                selector = selector.slice( tokens.shift().length );\r\n            }\r\n\r\n            // Fetch a seed set for right-to-left matching\r\n            for ( i = matchExpr[\"POS\"].test( selector ) ? -1 : tokens.length - 1; i >= 0; i-- ) {\r\n                token = tokens[i];\r\n\r\n                // Abort if we hit a combinator\r\n                if ( Expr.relative[ (type = token.type) ] ) {\r\n                    break;\r\n                }\r\n                if ( (find = Expr.find[ type ]) ) {\r\n                    // Search, expanding context for leading sibling combinators\r\n                    if ( (seed = find(\r\n                        token.matches[0].replace( rbackslash, \"\" ),\r\n                        rsibling.test( tokens[0].type ) && context.parentNode || context,\r\n                        xml\r\n                    )) ) {\r\n\r\n                        // If seed is empty or no tokens remain, we can return early\r\n                        tokens.splice( i, 1 );\r\n                        selector = seed.length && tokens.join(\"\");\r\n                        if ( !selector ) {\r\n                            push.apply( results, slice.call( seed, 0 ) );\r\n                            return results;\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Compile and execute a filtering function\r\n    // Provide `match` to avoid retokenization if we modified the selector above\r\n    compile( selector, match )(\r\n        seed,\r\n        context,\r\n        xml,\r\n        results,\r\n        rsibling.test( selector )\r\n    );\r\n    return results;\r\n}\r\n\r\nif ( document.querySelectorAll ) {\r\n    (function() {\r\n        var disconnectedMatch,\r\n            oldSelect = select,\r\n            rescape = /\'|\\\\/g,\r\n            rattributeQuotes = /\\=[\\x20\\t\\r\\n\\f]*([^\'\"\\]]*)[\\x20\\t\\r\\n\\f]*\\]/g,\r\n\r\n            // qSa(:focus) reports false when true (Chrome 21), no need to also add to buggyMatches since matches checks buggyQSA\r\n            // A support test would require too much code (would include document ready)\r\n            rbuggyQSA = [ \":focus\" ],\r\n\r\n            // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\r\n            // A support test would require too much code (would include document ready)\r\n            // just skip matchesSelector for :active\r\n            rbuggyMatches = [ \":active\" ],\r\n            matches = docElem.matchesSelector ||\r\n                docElem.mozMatchesSelector ||\r\n                docElem.webkitMatchesSelector ||\r\n                docElem.oMatchesSelector ||\r\n                docElem.msMatchesSelector;\r\n\r\n        // Build QSA regex\r\n        // Regex strategy adopted from Diego Perini\r\n        assert(function( div ) {\r\n            // Select is set to empty string on purpose\r\n            // This is to test IE\'s treatment of not explictly\r\n            // setting a boolean content attribute,\r\n            // since its presence should be enough\r\n            // http://bugs.jquery.com/ticket/12359\r\n            div.innerHTML = \"<select><option selected=\'\'></option></select>\";\r\n\r\n            // IE8 - Some boolean attributes are not treated correctly\r\n            if ( !div.querySelectorAll(\"[selected]\").length ) {\r\n                rbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:checked|disabled|ismap|multiple|readonly|selected|value)\" );\r\n            }\r\n\r\n            // Webkit/Opera - :checked should return selected option elements\r\n            // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n            // IE8 throws error here (do not put tests after this one)\r\n            if ( !div.querySelectorAll(\":checked\").length ) {\r\n                rbuggyQSA.push(\":checked\");\r\n            }\r\n        });\r\n\r\n        assert(function( div ) {\r\n\r\n            // Opera 10-12/IE9 - ^= $= *= and empty values\r\n            // Should not select anything\r\n            div.innerHTML = \"<p test=\'\'></p>\";\r\n            if ( div.querySelectorAll(\"[test^=\'\']\").length ) {\r\n                rbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:\\\"\\\"|\'\')\" );\r\n            }\r\n\r\n            // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\r\n            // IE8 throws error here (do not put tests after this one)\r\n            div.innerHTML = \"<input type=\'hidden\'/>\";\r\n            if ( !div.querySelectorAll(\":enabled\").length ) {\r\n                rbuggyQSA.push(\":enabled\", \":disabled\");\r\n            }\r\n        });\r\n\r\n        // rbuggyQSA always contains :focus, so no need for a length check\r\n        rbuggyQSA = /* rbuggyQSA.length && */ new RegExp( rbuggyQSA.join(\"|\") );\r\n\r\n        select = function( selector, context, results, seed, xml ) {\r\n            // Only use querySelectorAll when not filtering,\r\n            // when this is not xml,\r\n            // and when no QSA bugs apply\r\n            if ( !seed && !xml && !rbuggyQSA.test( selector ) ) {\r\n                var groups, i,\r\n                    old = true,\r\n                    nid = expando,\r\n                    newContext = context,\r\n                    newSelector = context.nodeType === 9 && selector;\r\n\r\n                // qSA works strangely on Element-rooted queries\r\n                // We can work around this by specifying an extra ID on the root\r\n                // and working up from there (Thanks to Andrew Dupont for the technique)\r\n                // IE 8 doesn\'t work on object elements\r\n                if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\r\n                    groups = tokenize( selector );\r\n\r\n                    if ( (old = context.getAttribute(\"id\")) ) {\r\n                        nid = old.replace( rescape, \"\\\\$&\" );\r\n                    } else {\r\n                        context.setAttribute( \"id\", nid );\r\n                    }\r\n                    nid = \"[id=\'\" + nid + \"\'] \";\r\n\r\n                    i = groups.length;\r\n                    while ( i-- ) {\r\n                        groups[i] = nid + groups[i].join(\"\");\r\n                    }\r\n                    newContext = rsibling.test( selector ) && context.parentNode || context;\r\n                    newSelector = groups.join(\",\");\r\n                }\r\n\r\n                if ( newSelector ) {\r\n                    try {\r\n                        push.apply( results, slice.call( newContext.querySelectorAll(\r\n                            newSelector\r\n                        ), 0 ) );\r\n                        return results;\r\n                    } catch(qsaError) {\r\n                    } finally {\r\n                        if ( !old ) {\r\n                            context.removeAttribute(\"id\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return oldSelect( selector, context, results, seed, xml );\r\n        };\r\n\r\n        if ( matches ) {\r\n            assert(function( div ) {\r\n                // Check to see if it\'s possible to do matchesSelector\r\n                // on a disconnected node (IE 9)\r\n                disconnectedMatch = matches.call( div, \"div\" );\r\n\r\n                // This should fail with an exception\r\n                // Gecko does not error, returns false instead\r\n                try {\r\n                    matches.call( div, \"[test!=\'\']:sizzle\" );\r\n                    rbuggyMatches.push( \"!=\", pseudos );\r\n                } catch ( e ) {}\r\n            });\r\n\r\n            // rbuggyMatches always contains :active and :focus, so no need for a length check\r\n            rbuggyMatches = /* rbuggyMatches.length && */ new RegExp( rbuggyMatches.join(\"|\") );\r\n\r\n            Sizzle.matchesSelector = function( elem, expr ) {\r\n                // Make sure that attribute selectors are quoted\r\n                expr = expr.replace( rattributeQuotes, \"=\'$1\']\" );\r\n\r\n                // rbuggyMatches always contains :active, so no need for an existence check\r\n                if ( !isXML( elem ) && !rbuggyMatches.test( expr ) && !rbuggyQSA.test( expr ) ) {\r\n                    try {\r\n                        var ret = matches.call( elem, expr );\r\n\r\n                        // IE 9\'s matchesSelector returns false on disconnected nodes\r\n                        if ( ret || disconnectedMatch ||\r\n                                // As well, disconnected nodes are said to be in a document\r\n                                // fragment in IE 9\r\n                                elem.document && elem.document.nodeType !== 11 ) {\r\n                            return ret;\r\n                        }\r\n                    } catch(e) {}\r\n                }\r\n\r\n                return Sizzle( expr, null, null, [ elem ] ).length > 0;\r\n            };\r\n        }\r\n    })();\r\n}\r\n\r\n// Deprecated\r\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\r\n\r\n// Back-compat\r\nfunction setFilters() {}\r\nExpr.filters = setFilters.prototype = Expr.pseudos;\r\nExpr.setFilters = new setFilters();\r\n\r\n// Override sizzle attribute retrieval\r\nSizzle.attr = jQuery.attr;\r\njQuery.find = Sizzle;\r\njQuery.expr = Sizzle.selectors;\r\njQuery.expr[\":\"] = jQuery.expr.pseudos;\r\njQuery.unique = Sizzle.uniqueSort;\r\njQuery.text = Sizzle.getText;\r\njQuery.isXMLDoc = Sizzle.isXML;\r\njQuery.contains = Sizzle.contains;\r\n\r\n\r\n})( window );\r\nvar runtil = /Until$/,\r\n    rparentsprev = /^(?:parents|prev(?:Until|All))/,\r\n    isSimple = /^.[^:#\\[\\.,]*$/,\r\n    rneedsContext = jQuery.expr.match.needsContext,\r\n    // methods guaranteed to produce a unique set when starting from a unique set\r\n    guaranteedUnique = {\r\n        children: true,\r\n        contents: true,\r\n        next: true,\r\n        prev: true\r\n    };\r\n\r\njQuery.fn.extend({\r\n    find: function( selector ) {\r\n        var i, l, length, n, r, ret,\r\n            self = this;\r\n\r\n        if ( typeof selector !== \"string\" ) {\r\n            return jQuery( selector ).filter(function() {\r\n                for ( i = 0, l = self.length; i < l; i++ ) {\r\n                    if ( jQuery.contains( self[ i ], this ) ) {\r\n                        return true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        ret = this.pushStack( \"\", \"find\", selector );\r\n\r\n        for ( i = 0, l = this.length; i < l; i++ ) {\r\n            length = ret.length;\r\n            jQuery.find( selector, this[i], ret );\r\n\r\n            if ( i > 0 ) {\r\n                // Make sure that the results are unique\r\n                for ( n = length; n < ret.length; n++ ) {\r\n                    for ( r = 0; r < length; r++ ) {\r\n                        if ( ret[r] === ret[n] ) {\r\n                            ret.splice(n--, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    },\r\n\r\n    has: function( target ) {\r\n        var i,\r\n            targets = jQuery( target, this ),\r\n            len = targets.length;\r\n\r\n        return this.filter(function() {\r\n            for ( i = 0; i < len; i++ ) {\r\n                if ( jQuery.contains( this, targets[i] ) ) {\r\n                    return true;\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    not: function( selector ) {\r\n        return this.pushStack( winnow(this, selector, false), \"not\", selector);\r\n    },\r\n\r\n    filter: function( selector ) {\r\n        return this.pushStack( winnow(this, selector, true), \"filter\", selector );\r\n    },\r\n\r\n    is: function( selector ) {\r\n        return !!selector && (\r\n            typeof selector === \"string\" ?\r\n                // If this is a positional/relative selector, check membership in the returned set\r\n                // so $(\"p:first\").is(\"p:last\") won\'t return true for a doc with two \"p\".\r\n                rneedsContext.test( selector ) ?\r\n                    jQuery( selector, this.context ).index( this[0] ) >= 0 :\r\n                    jQuery.filter( selector, this ).length > 0 :\r\n                this.filter( selector ).length > 0 );\r\n    },\r\n\r\n    closest: function( selectors, context ) {\r\n        var cur,\r\n            i = 0,\r\n            l = this.length,\r\n            ret = [],\r\n            pos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\r\n                jQuery( selectors, context || this.context ) :\r\n                0;\r\n\r\n        for ( ; i < l; i++ ) {\r\n            cur = this[i];\r\n\r\n            while ( cur && cur.ownerDocument && cur !== context && cur.nodeType !== 11 ) {\r\n                if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {\r\n                    ret.push( cur );\r\n                    break;\r\n                }\r\n                cur = cur.parentNode;\r\n            }\r\n        }\r\n\r\n        ret = ret.length > 1 ? jQuery.unique( ret ) : ret;\r\n\r\n        return this.pushStack( ret, \"closest\", selectors );\r\n    },\r\n\r\n    // Determine the position of an element within\r\n    // the matched set of elements\r\n    index: function( elem ) {\r\n\r\n        // No argument, return index in parent\r\n        if ( !elem ) {\r\n            return ( this[0] && this[0].parentNode ) ? this.prevAll().length : -1;\r\n        }\r\n\r\n        // index in selector\r\n        if ( typeof elem === \"string\" ) {\r\n            return jQuery.inArray( this[0], jQuery( elem ) );\r\n        }\r\n\r\n        // Locate the position of the desired element\r\n        return jQuery.inArray(\r\n            // If it receives a jQuery object, the first element is used\r\n            elem.jquery ? elem[0] : elem, this );\r\n    },\r\n\r\n    add: function( selector, context ) {\r\n        var set = typeof selector === \"string\" ?\r\n                jQuery( selector, context ) :\r\n                jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),\r\n            all = jQuery.merge( this.get(), set );\r\n\r\n        return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?\r\n            all :\r\n            jQuery.unique( all ) );\r\n    },\r\n\r\n    addBack: function( selector ) {\r\n        return this.add( selector == null ?\r\n            this.prevObject : this.prevObject.filter(selector)\r\n        );\r\n    }\r\n});\r\n\r\njQuery.fn.andSelf = jQuery.fn.addBack;\r\n\r\n// A painfully simple check to see if an element is disconnected\r\n// from a document (should be improved, where feasible).\r\nfunction isDisconnected( node ) {\r\n    return !node || !node.parentNode || node.parentNode.nodeType === 11;\r\n}\r\n\r\nfunction sibling( cur, dir ) {\r\n    do {\r\n        cur = cur[ dir ];\r\n    } while ( cur && cur.nodeType !== 1 );\r\n\r\n    return cur;\r\n}\r\n\r\njQuery.each({\r\n    parent: function( elem ) {\r\n        var parent = elem.parentNode;\r\n        return parent && parent.nodeType !== 11 ? parent : null;\r\n    },\r\n    parents: function( elem ) {\r\n        return jQuery.dir( elem, \"parentNode\" );\r\n    },\r\n    parentsUntil: function( elem, i, until ) {\r\n        return jQuery.dir( elem, \"parentNode\", until );\r\n    },\r\n    next: function( elem ) {\r\n        return sibling( elem, \"nextSibling\" );\r\n    },\r\n    prev: function( elem ) {\r\n        return sibling( elem, \"previousSibling\" );\r\n    },\r\n    nextAll: function( elem ) {\r\n        return jQuery.dir( elem, \"nextSibling\" );\r\n    },\r\n    prevAll: function( elem ) {\r\n        return jQuery.dir( elem, \"previousSibling\" );\r\n    },\r\n    nextUntil: function( elem, i, until ) {\r\n        return jQuery.dir( elem, \"nextSibling\", until );\r\n    },\r\n    prevUntil: function( elem, i, until ) {\r\n        return jQuery.dir( elem, \"previousSibling\", until );\r\n    },\r\n    siblings: function( elem ) {\r\n        return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\r\n    },\r\n    children: function( elem ) {\r\n        return jQuery.sibling( elem.firstChild );\r\n    },\r\n    contents: function( elem ) {\r\n        return jQuery.nodeName( elem, \"iframe\" ) ?\r\n            elem.contentDocument || elem.contentWindow.document :\r\n            jQuery.merge( [], elem.childNodes );\r\n    }\r\n}, function( name, fn ) {\r\n    jQuery.fn[ name ] = function( until, selector ) {\r\n        var ret = jQuery.map( this, fn, until );\r\n\r\n        if ( !runtil.test( name ) ) {\r\n            selector = until;\r\n        }\r\n\r\n        if ( selector && typeof selector === \"string\" ) {\r\n            ret = jQuery.filter( selector, ret );\r\n        }\r\n\r\n        ret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;\r\n\r\n        if ( this.length > 1 && rparentsprev.test( name ) ) {\r\n            ret = ret.reverse();\r\n        }\r\n\r\n        return this.pushStack( ret, name, core_slice.call( arguments ).join(\",\") );\r\n    };\r\n});\r\n\r\njQuery.extend({\r\n    filter: function( expr, elems, not ) {\r\n        if ( not ) {\r\n            expr = \":not(\" + expr + \")\";\r\n        }\r\n\r\n        return elems.length === 1 ?\r\n            jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :\r\n            jQuery.find.matches(expr, elems);\r\n    },\r\n\r\n    dir: function( elem, dir, until ) {\r\n        var matched = [],\r\n            cur = elem[ dir ];\r\n\r\n        while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {\r\n            if ( cur.nodeType === 1 ) {\r\n                matched.push( cur );\r\n            }\r\n            cur = cur[dir];\r\n        }\r\n        return matched;\r\n    },\r\n\r\n    sibling: function( n, elem ) {\r\n        var r = [];\r\n\r\n        for ( ; n; n = n.nextSibling ) {\r\n            if ( n.nodeType === 1 && n !== elem ) {\r\n                r.push( n );\r\n            }\r\n        }\r\n\r\n        return r;\r\n    }\r\n});\r\n\r\n// Implement the identical functionality for filter and not\r\nfunction winnow( elements, qualifier, keep ) {\r\n\r\n    // Can\'t pass null or undefined to indexOf in Firefox 4\r\n    // Set to 0 to skip string check\r\n    qualifier = qualifier || 0;\r\n\r\n    if ( jQuery.isFunction( qualifier ) ) {\r\n        return jQuery.grep(elements, function( elem, i ) {\r\n            var retVal = !!qualifier.call( elem, i, elem );\r\n            return retVal === keep;\r\n        });\r\n\r\n    } else if ( qualifier.nodeType ) {\r\n        return jQuery.grep(elements, function( elem, i ) {\r\n            return ( elem === qualifier ) === keep;\r\n        });\r\n\r\n    } else if ( typeof qualifier === \"string\" ) {\r\n        var filtered = jQuery.grep(elements, function( elem ) {\r\n            return elem.nodeType === 1;\r\n        });\r\n\r\n        if ( isSimple.test( qualifier ) ) {\r\n            return jQuery.filter(qualifier, filtered, !keep);\r\n        } else {\r\n            qualifier = jQuery.filter( qualifier, filtered );\r\n        }\r\n    }\r\n\r\n    return jQuery.grep(elements, function( elem, i ) {\r\n        return ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;\r\n    });\r\n}\r\nfunction createSafeFragment( document ) {\r\n    var list = nodeNames.split( \"|\" ),\r\n    safeFrag = document.createDocumentFragment();\r\n\r\n    if ( safeFrag.createElement ) {\r\n        while ( list.length ) {\r\n            safeFrag.createElement(\r\n                list.pop()\r\n            );\r\n        }\r\n    }\r\n    return safeFrag;\r\n}\r\n\r\nvar nodeNames = \"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|\" +\r\n        \"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",\r\n    rinlinejQuery = / jQuery\\d+=\"(?:null|\\d+)\"/g,\r\n    rleadingWhitespace = /^\\s+/,\r\n    rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\r\n    rtagName = /<([\\w:]+)/,\r\n    rtbody = /<tbody/i,\r\n    rhtml = /<|&#?\\w+;/,\r\n    rnoInnerhtml = /<(?:script|style|link)/i,\r\n    rnocache = /<(?:script|object|embed|option|style)/i,\r\n    rnoshimcache = new RegExp(\"<(?:\" + nodeNames + \")[\\\\s/>]\", \"i\"),\r\n    rcheckableType = /^(?:checkbox|radio)$/,\r\n    // checked=\"checked\" or checked\r\n    rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\r\n    rscriptType = /\\/(java|ecma)script/i,\r\n    rcleanScript = /^\\s*<!(?:\\[CDATA\\[|\\-\\-)|[\\]\\-]{2}>\\s*$/g,\r\n    wrapMap = {\r\n        option: [ 1, \"<select multiple=\'multiple\'>\", \"</select>\" ],\r\n        legend: [ 1, \"<fieldset>\", \"</fieldset>\" ],\r\n        thead: [ 1, \"<table>\", \"</table>\" ],\r\n        tr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\r\n        td: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\r\n        col: [ 2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\" ],\r\n        area: [ 1, \"<map>\", \"</map>\" ],\r\n        _default: [ 0, \"\", \"\" ]\r\n    },\r\n    safeFragment = createSafeFragment( document ),\r\n    fragmentDiv = safeFragment.appendChild( document.createElement(\"div\") );\r\n\r\nwrapMap.optgroup = wrapMap.option;\r\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\r\nwrapMap.th = wrapMap.td;\r\n\r\n// IE6-8 can\'t serialize link, script, style, or any html5 (NoScope) tags,\r\n// unless wrapped in a div with non-breaking characters in front of it.\r\nif ( !jQuery.support.htmlSerialize ) {\r\n    wrapMap._default = [ 1, \"X<div>\", \"</div>\" ];\r\n}\r\n\r\njQuery.fn.extend({\r\n    text: function( value ) {\r\n        return jQuery.access( this, function( value ) {\r\n            return value === undefined ?\r\n                jQuery.text( this ) :\r\n                this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );\r\n        }, null, value, arguments.length );\r\n    },\r\n\r\n    wrapAll: function( html ) {\r\n        if ( jQuery.isFunction( html ) ) {\r\n            return this.each(function(i) {\r\n                jQuery(this).wrapAll( html.call(this, i) );\r\n            });\r\n        }\r\n\r\n        if ( this[0] ) {\r\n            // The elements to wrap the target around\r\n            var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);\r\n\r\n            if ( this[0].parentNode ) {\r\n                wrap.insertBefore( this[0] );\r\n            }\r\n\r\n            wrap.map(function() {\r\n                var elem = this;\r\n\r\n                while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {\r\n                    elem = elem.firstChild;\r\n                }\r\n\r\n                return elem;\r\n            }).append( this );\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    wrapInner: function( html ) {\r\n        if ( jQuery.isFunction( html ) ) {\r\n            return this.each(function(i) {\r\n                jQuery(this).wrapInner( html.call(this, i) );\r\n            });\r\n        }\r\n\r\n        return this.each(function() {\r\n            var self = jQuery( this ),\r\n                contents = self.contents();\r\n\r\n            if ( contents.length ) {\r\n                contents.wrapAll( html );\r\n\r\n            } else {\r\n                self.append( html );\r\n            }\r\n        });\r\n    },\r\n\r\n    wrap: function( html ) {\r\n        var isFunction = jQuery.isFunction( html );\r\n\r\n        return this.each(function(i) {\r\n            jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\r\n        });\r\n    },\r\n\r\n    unwrap: function() {\r\n        return this.parent().each(function() {\r\n            if ( !jQuery.nodeName( this, \"body\" ) ) {\r\n                jQuery( this ).replaceWith( this.childNodes );\r\n            }\r\n        }).end();\r\n    },\r\n\r\n    append: function() {\r\n        return this.domManip(arguments, true, function( elem ) {\r\n            if ( this.nodeType === 1 || this.nodeType === 11 ) {\r\n                this.appendChild( elem );\r\n            }\r\n        });\r\n    },\r\n\r\n    prepend: function() {\r\n        return this.domManip(arguments, true, function( elem ) {\r\n            if ( this.nodeType === 1 || this.nodeType === 11 ) {\r\n                this.insertBefore( elem, this.firstChild );\r\n            }\r\n        });\r\n    },\r\n\r\n    before: function() {\r\n        if ( !isDisconnected( this[0] ) ) {\r\n            return this.domManip(arguments, false, function( elem ) {\r\n                this.parentNode.insertBefore( elem, this );\r\n            });\r\n        }\r\n\r\n        if ( arguments.length ) {\r\n            var set = jQuery.clean( arguments );\r\n            return this.pushStack( jQuery.merge( set, this ), \"before\", this.selector );\r\n        }\r\n    },\r\n\r\n    after: function() {\r\n        if ( !isDisconnected( this[0] ) ) {\r\n            return this.domManip(arguments, false, function( elem ) {\r\n                this.parentNode.insertBefore( elem, this.nextSibling );\r\n            });\r\n        }\r\n\r\n        if ( arguments.length ) {\r\n            var set = jQuery.clean( arguments );\r\n            return this.pushStack( jQuery.merge( this, set ), \"after\", this.selector );\r\n        }\r\n    },\r\n\r\n    // keepData is for internal use only--do not document\r\n    remove: function( selector, keepData ) {\r\n        var elem,\r\n            i = 0;\r\n\r\n        for ( ; (elem = this[i]) != null; i++ ) {\r\n            if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {\r\n                if ( !keepData && elem.nodeType === 1 ) {\r\n                    jQuery.cleanData( elem.getElementsByTagName(\"*\") );\r\n                    jQuery.cleanData( [ elem ] );\r\n                }\r\n\r\n                if ( elem.parentNode ) {\r\n                    elem.parentNode.removeChild( elem );\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    empty: function() {\r\n        var elem,\r\n            i = 0;\r\n\r\n        for ( ; (elem = this[i]) != null; i++ ) {\r\n            // Remove element nodes and prevent memory leaks\r\n            if ( elem.nodeType === 1 ) {\r\n                jQuery.cleanData( elem.getElementsByTagName(\"*\") );\r\n            }\r\n\r\n            // Remove any remaining nodes\r\n            while ( elem.firstChild ) {\r\n                elem.removeChild( elem.firstChild );\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    clone: function( dataAndEvents, deepDataAndEvents ) {\r\n        dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\r\n        deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\r\n\r\n        return this.map( function () {\r\n            return jQuery.clone( this, dataAndEvents, deepDataAndEvents );\r\n        });\r\n    },\r\n\r\n    html: function( value ) {\r\n        return jQuery.access( this, function( value ) {\r\n            var elem = this[0] || {},\r\n                i = 0,\r\n                l = this.length;\r\n\r\n            if ( value === undefined ) {\r\n                return elem.nodeType === 1 ?\r\n                    elem.innerHTML.replace( rinlinejQuery, \"\" ) :\r\n                    undefined;\r\n            }\r\n\r\n            // See if we can take a shortcut and just use innerHTML\r\n            if ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\r\n                ( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&\r\n                ( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&\r\n                !wrapMap[ ( rtagName.exec( value ) || [\"\", \"\"] )[1].toLowerCase() ] ) {\r\n\r\n                value = value.replace( rxhtmlTag, \"<$1></$2>\" );\r\n\r\n                try {\r\n                    for (; i < l; i++ ) {\r\n                        // Remove element nodes and prevent memory leaks\r\n                        elem = this[i] || {};\r\n                        if ( elem.nodeType === 1 ) {\r\n                            jQuery.cleanData( elem.getElementsByTagName( \"*\" ) );\r\n                            elem.innerHTML = value;\r\n                        }\r\n                    }\r\n\r\n                    elem = 0;\r\n\r\n                // If using innerHTML throws an exception, use the fallback method\r\n                } catch(e) {}\r\n            }\r\n\r\n            if ( elem ) {\r\n                this.empty().append( value );\r\n            }\r\n        }, null, value, arguments.length );\r\n    },\r\n\r\n    replaceWith: function( value ) {\r\n        if ( !isDisconnected( this[0] ) ) {\r\n            // Make sure that the elements are removed from the DOM before they are inserted\r\n            // this can help fix replacing a parent with child elements\r\n            if ( jQuery.isFunction( value ) ) {\r\n                return this.each(function(i) {\r\n                    var self = jQuery(this), old = self.html();\r\n                    self.replaceWith( value.call( this, i, old ) );\r\n                });\r\n            }\r\n\r\n            if ( typeof value !== \"string\" ) {\r\n                value = jQuery( value ).detach();\r\n            }\r\n\r\n            return this.each(function() {\r\n                var next = this.nextSibling,\r\n                    parent = this.parentNode;\r\n\r\n                jQuery( this ).remove();\r\n\r\n                if ( next ) {\r\n                    jQuery(next).before( value );\r\n                } else {\r\n                    jQuery(parent).append( value );\r\n                }\r\n            });\r\n        }\r\n\r\n        return this.length ?\r\n            this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), \"replaceWith\", value ) :\r\n            this;\r\n    },\r\n\r\n    detach: function( selector ) {\r\n        return this.remove( selector, true );\r\n    },\r\n\r\n    domManip: function( args, table, callback ) {\r\n\r\n        // Flatten any nested arrays\r\n        args = [].concat.apply( [], args );\r\n\r\n        var results, first, fragment, iNoClone,\r\n            i = 0,\r\n            value = args[0],\r\n            scripts = [],\r\n            l = this.length;\r\n\r\n        // We can\'t cloneNode fragments that contain checked, in WebKit\r\n        if ( !jQuery.support.checkClone && l > 1 && typeof value === \"string\" && rchecked.test( value ) ) {\r\n            return this.each(function() {\r\n                jQuery(this).domManip( args, table, callback );\r\n            });\r\n        }\r\n\r\n        if ( jQuery.isFunction(value) ) {\r\n            return this.each(function(i) {\r\n                var self = jQuery(this);\r\n                args[0] = value.call( this, i, table ? self.html() : undefined );\r\n                self.domManip( args, table, callback );\r\n            });\r\n        }\r\n\r\n        if ( this[0] ) {\r\n            results = jQuery.buildFragment( args, this, scripts );\r\n            fragment = results.fragment;\r\n            first = fragment.firstChild;\r\n\r\n            if ( fragment.childNodes.length === 1 ) {\r\n                fragment = first;\r\n            }\r\n\r\n            if ( first ) {\r\n                table = table && jQuery.nodeName( first, \"tr\" );\r\n\r\n                // Use the original fragment for the last item instead of the first because it can end up\r\n                // being emptied incorrectly in certain situations (#8070).\r\n                // Fragments from the fragment cache must always be cloned and never used in place.\r\n                for ( iNoClone = results.cacheable || l - 1; i < l; i++ ) {\r\n                    callback.call(\r\n                        table && jQuery.nodeName( this[i], \"table\" ) ?\r\n                            findOrAppend( this[i], \"tbody\" ) :\r\n                            this[i],\r\n                        i === iNoClone ?\r\n                            fragment :\r\n                            jQuery.clone( fragment, true, true )\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Fix #11809: Avoid leaking memory\r\n            fragment = first = null;\r\n\r\n            if ( scripts.length ) {\r\n                jQuery.each( scripts, function( i, elem ) {\r\n                    if ( elem.src ) {\r\n                        if ( jQuery.ajax ) {\r\n                            jQuery.ajax({\r\n                                url: elem.src,\r\n                                type: \"GET\",\r\n                                dataType: \"script\",\r\n                                async: false,\r\n                                global: false,\r\n                                \"throws\": true\r\n                            });\r\n                        } else {\r\n                            jQuery.error(\"no ajax\");\r\n                        }\r\n                    } else {\r\n                        jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || \"\" ).replace( rcleanScript, \"\" ) );\r\n                    }\r\n\r\n                    if ( elem.parentNode ) {\r\n                        elem.parentNode.removeChild( elem );\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n});\r\n\r\nfunction findOrAppend( elem, tag ) {\r\n    return elem.getElementsByTagName( tag )[0] || elem.appendChild( elem.ownerDocument.createElement( tag ) );\r\n}\r\n\r\nfunction cloneCopyEvent( src, dest ) {\r\n\r\n    if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {\r\n        return;\r\n    }\r\n\r\n    var type, i, l,\r\n        oldData = jQuery._data( src ),\r\n        curData = jQuery._data( dest, oldData ),\r\n        events = oldData.events;\r\n\r\n    if ( events ) {\r\n        delete curData.handle;\r\n        curData.events = {};\r\n\r\n        for ( type in events ) {\r\n            for ( i = 0, l = events[ type ].length; i < l; i++ ) {\r\n                jQuery.event.add( dest, type, events[ type ][ i ] );\r\n            }\r\n        }\r\n    }\r\n\r\n    // make the cloned public data object a copy from the original\r\n    if ( curData.data ) {\r\n        curData.data = jQuery.extend( {}, curData.data );\r\n    }\r\n}\r\n\r\nfunction cloneFixAttributes( src, dest ) {\r\n    var nodeName;\r\n\r\n    // We do not need to do anything for non-Elements\r\n    if ( dest.nodeType !== 1 ) {\r\n        return;\r\n    }\r\n\r\n    // clearAttributes removes the attributes, which we don\'t want,\r\n    // but also removes the attachEvent events, which we *do* want\r\n    if ( dest.clearAttributes ) {\r\n        dest.clearAttributes();\r\n    }\r\n\r\n    // mergeAttributes, in contrast, only merges back on the\r\n    // original attributes, not the events\r\n    if ( dest.mergeAttributes ) {\r\n        dest.mergeAttributes( src );\r\n    }\r\n\r\n    nodeName = dest.nodeName.toLowerCase();\r\n\r\n    if ( nodeName === \"object\" ) {\r\n        // IE6-10 improperly clones children of object elements using classid.\r\n        // IE10 throws NoModificationAllowedError if parent is null, #12132.\r\n        if ( dest.parentNode ) {\r\n            dest.outerHTML = src.outerHTML;\r\n        }\r\n\r\n        // This path appears unavoidable for IE9. When cloning an object\r\n        // element in IE9, the outerHTML strategy above is not sufficient.\r\n        // If the src has innerHTML and the destination does not,\r\n        // copy the src.innerHTML into the dest.innerHTML. #10324\r\n        if ( jQuery.support.html5Clone && (src.innerHTML && !jQuery.trim(dest.innerHTML)) ) {\r\n            dest.innerHTML = src.innerHTML;\r\n        }\r\n\r\n    } else if ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\r\n        // IE6-8 fails to persist the checked state of a cloned checkbox\r\n        // or radio button. Worse, IE6-7 fail to give the cloned element\r\n        // a checked appearance if the defaultChecked value isn\'t also set\r\n\r\n        dest.defaultChecked = dest.checked = src.checked;\r\n\r\n        // IE6-7 get confused and end up setting the value of a cloned\r\n        // checkbox/radio button to an empty string instead of \"on\"\r\n        if ( dest.value !== src.value ) {\r\n            dest.value = src.value;\r\n        }\r\n\r\n    // IE6-8 fails to return the selected option to the default selected\r\n    // state when cloning options\r\n    } else if ( nodeName === \"option\" ) {\r\n        dest.selected = src.defaultSelected;\r\n\r\n    // IE6-8 fails to set the defaultValue to the correct value when\r\n    // cloning other types of input fields\r\n    } else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\r\n        dest.defaultValue = src.defaultValue;\r\n\r\n    // IE blanks contents when cloning scripts\r\n    } else if ( nodeName === \"script\" && dest.text !== src.text ) {\r\n        dest.text = src.text;\r\n    }\r\n\r\n    // Event data gets referenced instead of copied if the expando\r\n    // gets copied too\r\n    dest.removeAttribute( jQuery.expando );\r\n}\r\n\r\njQuery.buildFragment = function( args, context, scripts ) {\r\n    var fragment, cacheable, cachehit,\r\n        first = args[ 0 ];\r\n\r\n    // Set context from what may come in as undefined or a jQuery collection or a node\r\n    // Updated to fix #12266 where accessing context[0] could throw an exception in IE9/10 &\r\n    // also doubles as fix for #8950 where plain objects caused createDocumentFragment exception\r\n    context = context || document;\r\n    context = !context.nodeType && context[0] || context;\r\n    context = context.ownerDocument || context;\r\n\r\n    // Only cache \"small\" (1/2 KB) HTML strings that are associated with the main document\r\n    // Cloning options loses the selected state, so don\'t cache them\r\n    // IE 6 doesn\'t like it when you put <object> or <embed> elements in a fragment\r\n    // Also, WebKit does not clone \'checked\' attributes on cloneNode, so don\'t cache\r\n    // Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501\r\n    if ( args.length === 1 && typeof first === \"string\" && first.length < 512 && context === document &&\r\n        first.charAt(0) === \"<\" && !rnocache.test( first ) &&\r\n        (jQuery.support.checkClone || !rchecked.test( first )) &&\r\n        (jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {\r\n\r\n        // Mark cacheable and look for a hit\r\n        cacheable = true;\r\n        fragment = jQuery.fragments[ first ];\r\n        cachehit = fragment !== undefined;\r\n    }\r\n\r\n    if ( !fragment ) {\r\n        fragment = context.createDocumentFragment();\r\n        jQuery.clean( args, context, fragment, scripts );\r\n\r\n        // Update the cache, but only store false\r\n        // unless this is a second parsing of the same content\r\n        if ( cacheable ) {\r\n            jQuery.fragments[ first ] = cachehit && fragment;\r\n        }\r\n    }\r\n\r\n    return { fragment: fragment, cacheable: cacheable };\r\n};\r\n\r\njQuery.fragments = {};\r\n\r\njQuery.each({\r\n    appendTo: \"append\",\r\n    prependTo: \"prepend\",\r\n    insertBefore: \"before\",\r\n    insertAfter: \"after\",\r\n    replaceAll: \"replaceWith\"\r\n}, function( name, original ) {\r\n    jQuery.fn[ name ] = function( selector ) {\r\n        var elems,\r\n            i = 0,\r\n            ret = [],\r\n            insert = jQuery( selector ),\r\n            l = insert.length,\r\n            parent = this.length === 1 && this[0].parentNode;\r\n\r\n        if ( (parent == null || parent && parent.nodeType === 11 && parent.childNodes.length === 1) && l === 1 ) {\r\n            insert[ original ]( this[0] );\r\n            return this;\r\n        } else {\r\n            for ( ; i < l; i++ ) {\r\n                elems = ( i > 0 ? this.clone(true) : this ).get();\r\n                jQuery( insert[i] )[ original ]( elems );\r\n                ret = ret.concat( elems );\r\n            }\r\n\r\n            return this.pushStack( ret, name, insert.selector );\r\n        }\r\n    };\r\n});\r\n\r\nfunction getAll( elem ) {\r\n    if ( typeof elem.getElementsByTagName !== \"undefined\" ) {\r\n        return elem.getElementsByTagName( \"*\" );\r\n\r\n    } else if ( typeof elem.querySelectorAll !== \"undefined\" ) {\r\n        return elem.querySelectorAll( \"*\" );\r\n\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\n// Used in clean, fixes the defaultChecked property\r\nfunction fixDefaultChecked( elem ) {\r\n    if ( rcheckableType.test( elem.type ) ) {\r\n        elem.defaultChecked = elem.checked;\r\n    }\r\n}\r\n\r\njQuery.extend({\r\n    clone: function( elem, dataAndEvents, deepDataAndEvents ) {\r\n        var srcElements,\r\n            destElements,\r\n            i,\r\n            clone;\r\n\r\n        if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( \"<\" + elem.nodeName + \">\" ) ) {\r\n            clone = elem.cloneNode( true );\r\n\r\n        // IE<=8 does not properly clone detached, unknown element nodes\r\n        } else {\r\n            fragmentDiv.innerHTML = elem.outerHTML;\r\n            fragmentDiv.removeChild( clone = fragmentDiv.firstChild );\r\n        }\r\n\r\n        if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&\r\n                (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {\r\n            // IE copies events bound via attachEvent when using cloneNode.\r\n            // Calling detachEvent on the clone will also remove the events\r\n            // from the original. In order to get around this, we use some\r\n            // proprietary methods to clear the events. Thanks to MooTools\r\n            // guys for this hotness.\r\n\r\n            cloneFixAttributes( elem, clone );\r\n\r\n            // Using Sizzle here is crazy slow, so we use getElementsByTagName instead\r\n            srcElements = getAll( elem );\r\n            destElements = getAll( clone );\r\n\r\n            // Weird iteration because IE will replace the length property\r\n            // with an element if you are cloning the body and one of the\r\n            // elements on the page has a name or id of \"length\"\r\n            for ( i = 0; srcElements[i]; ++i ) {\r\n                // Ensure that the destination node is not null; Fixes #9587\r\n                if ( destElements[i] ) {\r\n                    cloneFixAttributes( srcElements[i], destElements[i] );\r\n                }\r\n            }\r\n        }\r\n\r\n        // Copy the events from the original to the clone\r\n        if ( dataAndEvents ) {\r\n            cloneCopyEvent( elem, clone );\r\n\r\n            if ( deepDataAndEvents ) {\r\n                srcElements = getAll( elem );\r\n                destElements = getAll( clone );\r\n\r\n                for ( i = 0; srcElements[i]; ++i ) {\r\n                    cloneCopyEvent( srcElements[i], destElements[i] );\r\n                }\r\n            }\r\n        }\r\n\r\n        srcElements = destElements = null;\r\n\r\n        // Return the cloned set\r\n        return clone;\r\n    },\r\n\r\n    clean: function( elems, context, fragment, scripts ) {\r\n        var i, j, elem, tag, wrap, depth, div, hasBody, tbody, len, handleScript, jsTags,\r\n            safe = context === document && safeFragment,\r\n            ret = [];\r\n\r\n        // Ensure that context is a document\r\n        if ( !context || typeof context.createDocumentFragment === \"undefined\" ) {\r\n            context = document;\r\n        }\r\n\r\n        // Use the already-created safe fragment if context permits\r\n        for ( i = 0; (elem = elems[i]) != null; i++ ) {\r\n            if ( typeof elem === \"number\" ) {\r\n                elem += \"\";\r\n            }\r\n\r\n            if ( !elem ) {\r\n                continue;\r\n            }\r\n\r\n            // Convert html string into DOM nodes\r\n            if ( typeof elem === \"string\" ) {\r\n                if ( !rhtml.test( elem ) ) {\r\n                    elem = context.createTextNode( elem );\r\n                } else {\r\n                    // Ensure a safe container in which to render the html\r\n                    safe = safe || createSafeFragment( context );\r\n                    div = context.createElement(\"div\");\r\n                    safe.appendChild( div );\r\n\r\n                    // Fix \"XHTML\"-style tags in all browsers\r\n                    elem = elem.replace(rxhtmlTag, \"<$1></$2>\");\r\n\r\n                    // Go to html and back, then peel off extra wrappers\r\n                    tag = ( rtagName.exec( elem ) || [\"\", \"\"] )[1].toLowerCase();\r\n                    wrap = wrapMap[ tag ] || wrapMap._default;\r\n                    depth = wrap[0];\r\n                    div.innerHTML = wrap[1] + elem + wrap[2];\r\n\r\n                    // Move to the right depth\r\n                    while ( depth-- ) {\r\n                        div = div.lastChild;\r\n                    }\r\n\r\n                    // Remove IE\'s autoinserted <tbody> from table fragments\r\n                    if ( !jQuery.support.tbody ) {\r\n\r\n                        // String was a <table>, *may* have spurious <tbody>\r\n                        hasBody = rtbody.test(elem);\r\n                            tbody = tag === \"table\" && !hasBody ?\r\n                                div.firstChild && div.firstChild.childNodes :\r\n\r\n                                // String was a bare <thead> or <tfoot>\r\n                                wrap[1] === \"<table>\" && !hasBody ?\r\n                                    div.childNodes :\r\n                                    [];\r\n\r\n                        for ( j = tbody.length - 1; j >= 0 ; --j ) {\r\n                            if ( jQuery.nodeName( tbody[ j ], \"tbody\" ) && !tbody[ j ].childNodes.length ) {\r\n                                tbody[ j ].parentNode.removeChild( tbody[ j ] );\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // IE completely kills leading whitespace when innerHTML is used\r\n                    if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {\r\n                        div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );\r\n                    }\r\n\r\n                    elem = div.childNodes;\r\n\r\n                    // Take out of fragment container (we need a fresh div each time)\r\n                    div.parentNode.removeChild( div );\r\n                }\r\n            }\r\n\r\n            if ( elem.nodeType ) {\r\n                ret.push( elem );\r\n            } else {\r\n                jQuery.merge( ret, elem );\r\n            }\r\n        }\r\n\r\n        // Fix #11356: Clear elements from safeFragment\r\n        if ( div ) {\r\n            elem = div = safe = null;\r\n        }\r\n\r\n        // Reset defaultChecked for any radios and checkboxes\r\n        // about to be appended to the DOM in IE 6/7 (#8060)\r\n        if ( !jQuery.support.appendChecked ) {\r\n            for ( i = 0; (elem = ret[i]) != null; i++ ) {\r\n                if ( jQuery.nodeName( elem, \"input\" ) ) {\r\n                    fixDefaultChecked( elem );\r\n                } else if ( typeof elem.getElementsByTagName !== \"undefined\" ) {\r\n                    jQuery.grep( elem.getElementsByTagName(\"input\"), fixDefaultChecked );\r\n                }\r\n            }\r\n        }\r\n\r\n        // Append elements to a provided document fragment\r\n        if ( fragment ) {\r\n            // Special handling of each script element\r\n            handleScript = function( elem ) {\r\n                // Check if we consider it executable\r\n                if ( !elem.type || rscriptType.test( elem.type ) ) {\r\n                    // Detach the script and store it in the scripts array (if provided) or the fragment\r\n                    // Return truthy to indicate that it has been handled\r\n                    return scripts ?\r\n                        scripts.push( elem.parentNode ? elem.parentNode.removeChild( elem ) : elem ) :\r\n                        fragment.appendChild( elem );\r\n                }\r\n            };\r\n\r\n            for ( i = 0; (elem = ret[i]) != null; i++ ) {\r\n                // Check if we\'re done after handling an executable script\r\n                if ( !( jQuery.nodeName( elem, \"script\" ) && handleScript( elem ) ) ) {\r\n                    // Append to fragment and handle embedded scripts\r\n                    fragment.appendChild( elem );\r\n                    if ( typeof elem.getElementsByTagName !== \"undefined\" ) {\r\n                        // handleScript alters the DOM, so use jQuery.merge to ensure snapshot iteration\r\n                        jsTags = jQuery.grep( jQuery.merge( [], elem.getElementsByTagName(\"script\") ), handleScript );\r\n\r\n                        // Splice the scripts into ret after their former ancestor and advance our index beyond them\r\n                        ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );\r\n                        i += jsTags.length;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    },\r\n\r\n    cleanData: function( elems, /* internal */ acceptData ) {\r\n        var data, id, elem, type,\r\n            i = 0,\r\n            internalKey = jQuery.expando,\r\n            cache = jQuery.cache,\r\n            deleteExpando = jQuery.support.deleteExpando,\r\n            special = jQuery.event.special;\r\n\r\n        for ( ; (elem = elems[i]) != null; i++ ) {\r\n\r\n            if ( acceptData || jQuery.acceptData( elem ) ) {\r\n\r\n                id = elem[ internalKey ];\r\n                data = id && cache[ id ];\r\n\r\n                if ( data ) {\r\n                    if ( data.events ) {\r\n                        for ( type in data.events ) {\r\n                            if ( special[ type ] ) {\r\n                                jQuery.event.remove( elem, type );\r\n\r\n                            // This is a shortcut to avoid jQuery.event.remove\'s overhead\r\n                            } else {\r\n                                jQuery.removeEvent( elem, type, data.handle );\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Remove cache only if it was not already removed by jQuery.event.remove\r\n                    if ( cache[ id ] ) {\r\n\r\n                        delete cache[ id ];\r\n\r\n                        // IE does not allow us to delete expando properties from nodes,\r\n                        // nor does it have a removeAttribute function on Document nodes;\r\n                        // we must handle all of these cases\r\n                        if ( deleteExpando ) {\r\n                            delete elem[ internalKey ];\r\n\r\n                        } else if ( elem.removeAttribute ) {\r\n                            elem.removeAttribute( internalKey );\r\n\r\n                        } else {\r\n                            elem[ internalKey ] = null;\r\n                        }\r\n\r\n                        jQuery.deletedIds.push( id );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n// Limit scope pollution from any deprecated API\r\n(function() {\r\n\r\nvar matched, browser;\r\n\r\n// Use of jQuery.browser is frowned upon.\r\n// More details: http://api.jquery.com/jQuery.browser\r\n// jQuery.uaMatch maintained for back-compat\r\njQuery.uaMatch = function( ua ) {\r\n    ua = ua.toLowerCase();\r\n\r\n    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n        /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n        /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n        /(msie) ([\\w.]+)/.exec( ua ) ||\r\n        ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n        [];\r\n\r\n    return {\r\n        browser: match[ 1 ] || \"\",\r\n        version: match[ 2 ] || \"0\"\r\n    };\r\n};\r\n\r\nmatched = jQuery.uaMatch( navigator.userAgent );\r\nbrowser = {};\r\n\r\nif ( matched.browser ) {\r\n    browser[ matched.browser ] = true;\r\n    browser.version = matched.version;\r\n}\r\n\r\n// Chrome is Webkit, but Webkit is also Safari.\r\nif ( browser.chrome ) {\r\n    browser.webkit = true;\r\n} else if ( browser.webkit ) {\r\n    browser.safari = true;\r\n}\r\n\r\njQuery.browser = browser;\r\n\r\njQuery.sub = function() {\r\n    function jQuerySub( selector, context ) {\r\n        return new jQuerySub.fn.init( selector, context );\r\n    }\r\n    jQuery.extend( true, jQuerySub, this );\r\n    jQuerySub.superclass = this;\r\n    jQuerySub.fn = jQuerySub.prototype = this();\r\n    jQuerySub.fn.constructor = jQuerySub;\r\n    jQuerySub.sub = this.sub;\r\n    jQuerySub.fn.init = function init( selector, context ) {\r\n        if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {\r\n            context = jQuerySub( context );\r\n        }\r\n\r\n        return jQuery.fn.init.call( this, selector, context, rootjQuerySub );\r\n    };\r\n    jQuerySub.fn.init.prototype = jQuerySub.fn;\r\n    var rootjQuerySub = jQuerySub(document);\r\n    return jQuerySub;\r\n};\r\n\r\n})();\r\nvar curCSS, iframe, iframeDoc,\r\n    ralpha = /alpha\\([^)]*\\)/i,\r\n    ropacity = /opacity=([^)]*)/,\r\n    rposition = /^(top|right|bottom|left)$/,\r\n    // swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\r\n    // see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\r\n    rdisplayswap = /^(none|table(?!-c[ea]).+)/,\r\n    rmargin = /^margin/,\r\n    rnumsplit = new RegExp( \"^(\" + core_pnum + \")(.*)$\", \"i\" ),\r\n    rnumnonpx = new RegExp( \"^(\" + core_pnum + \")(?!px)[a-z%]+$\", \"i\" ),\r\n    rrelNum = new RegExp( \"^([-+])=(\" + core_pnum + \")\", \"i\" ),\r\n    elemdisplay = { BODY: \"block\" },\r\n\r\n    cssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\r\n    cssNormalTransform = {\r\n        letterSpacing: 0,\r\n        fontWeight: 400\r\n    },\r\n\r\n    cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ],\r\n    cssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\r\n\r\n    eventsToggle = jQuery.fn.toggle;\r\n\r\n// return a css property mapped to a potentially vendor prefixed property\r\nfunction vendorPropName( style, name ) {\r\n\r\n    // shortcut for names that are not vendor prefixed\r\n    if ( name in style ) {\r\n        return name;\r\n    }\r\n\r\n    // check for vendor prefixed names\r\n    var capName = name.charAt(0).toUpperCase() + name.slice(1),\r\n        origName = name,\r\n        i = cssPrefixes.length;\r\n\r\n    while ( i-- ) {\r\n        name = cssPrefixes[ i ] + capName;\r\n        if ( name in style ) {\r\n            return name;\r\n        }\r\n    }\r\n\r\n    return origName;\r\n}\r\n\r\nfunction isHidden( elem, el ) {\r\n    elem = el || elem;\r\n    return jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\r\n}\r\n\r\nfunction showHide( elements, show ) {\r\n    var elem, display,\r\n        values = [],\r\n        index = 0,\r\n        length = elements.length;\r\n\r\n    for ( ; index < length; index++ ) {\r\n        elem = elements[ index ];\r\n        if ( !elem.style ) {\r\n            continue;\r\n        }\r\n        values[ index ] = jQuery._data( elem, \"olddisplay\" );\r\n        if ( show ) {\r\n            // Reset the inline display of this element to learn if it is\r\n            // being hidden by cascaded rules or not\r\n            if ( !values[ index ] && elem.style.display === \"none\" ) {\r\n                elem.style.display = \"\";\r\n            }\r\n\r\n            // Set elements which have been overridden with display: none\r\n            // in a stylesheet to whatever the default browser style is\r\n            // for such an element\r\n            if ( elem.style.display === \"\" && isHidden( elem ) ) {\r\n                values[ index ] = jQuery._data( elem, \"olddisplay\", css_defaultDisplay(elem.nodeName) );\r\n            }\r\n        } else {\r\n            display = curCSS( elem, \"display\" );\r\n\r\n            if ( !values[ index ] && display !== \"none\" ) {\r\n                jQuery._data( elem, \"olddisplay\", display );\r\n            }\r\n        }\r\n    }\r\n\r\n    // Set the display of most of the elements in a second loop\r\n    // to avoid the constant reflow\r\n    for ( index = 0; index < length; index++ ) {\r\n        elem = elements[ index ];\r\n        if ( !elem.style ) {\r\n            continue;\r\n        }\r\n        if ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\r\n            elem.style.display = show ? values[ index ] || \"\" : \"none\";\r\n        }\r\n    }\r\n\r\n    return elements;\r\n}\r\n\r\njQuery.fn.extend({\r\n    css: function( name, value ) {\r\n        return jQuery.access( this, function( elem, name, value ) {\r\n            return value !== undefined ?\r\n                jQuery.style( elem, name, value ) :\r\n                jQuery.css( elem, name );\r\n        }, name, value, arguments.length > 1 );\r\n    },\r\n    show: function() {\r\n        return showHide( this, true );\r\n    },\r\n    hide: function() {\r\n        return showHide( this );\r\n    },\r\n    toggle: function( state, fn2 ) {\r\n        var bool = typeof state === \"boolean\";\r\n\r\n        if ( jQuery.isFunction( state ) && jQuery.isFunction( fn2 ) ) {\r\n            return eventsToggle.apply( this, arguments );\r\n        }\r\n\r\n        return this.each(function() {\r\n            if ( bool ? state : isHidden( this ) ) {\r\n                jQuery( this ).show();\r\n            } else {\r\n                jQuery( this ).hide();\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\njQuery.extend({\r\n    // Add in style property hooks for overriding the default\r\n    // behavior of getting and setting a style property\r\n    cssHooks: {\r\n        opacity: {\r\n            get: function( elem, computed ) {\r\n                if ( computed ) {\r\n                    // We should always get a number back from opacity\r\n                    var ret = curCSS( elem, \"opacity\" );\r\n                    return ret === \"\" ? \"1\" : ret;\r\n\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    // Exclude the following css properties to add px\r\n    cssNumber: {\r\n        \"fillOpacity\": true,\r\n        \"fontWeight\": true,\r\n        \"lineHeight\": true,\r\n        \"opacity\": true,\r\n        \"orphans\": true,\r\n        \"widows\": true,\r\n        \"zIndex\": true,\r\n        \"zoom\": true\r\n    },\r\n\r\n    // Add in properties whose names you wish to fix before\r\n    // setting or getting the value\r\n    cssProps: {\r\n        // normalize float css property\r\n        \"float\": jQuery.support.cssFloat ? \"cssFloat\" : \"styleFloat\"\r\n    },\r\n\r\n    // Get and set the style property on a DOM Node\r\n    style: function( elem, name, value, extra ) {\r\n        // Don\'t set styles on text and comment nodes\r\n        if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\r\n            return;\r\n        }\r\n\r\n        // Make sure that we\'re working with the right name\r\n        var ret, type, hooks,\r\n            origName = jQuery.camelCase( name ),\r\n            style = elem.style;\r\n\r\n        name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\r\n\r\n        // gets hook for the prefixed version\r\n        // followed by the unprefixed version\r\n        hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n        // Check if we\'re setting a value\r\n        if ( value !== undefined ) {\r\n            type = typeof value;\r\n\r\n            // convert relative number strings (+= or -=) to relative numbers. #7345\r\n            if ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\r\n                value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\r\n                // Fixes bug #9237\r\n                type = \"number\";\r\n            }\r\n\r\n            // Make sure that NaN and null values aren\'t set. See: #7116\r\n            if ( value == null || type === \"number\" && isNaN( value ) ) {\r\n                return;\r\n            }\r\n\r\n            // If a number was passed in, add \'px\' to the (except for certain CSS properties)\r\n            if ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\r\n                value += \"px\";\r\n            }\r\n\r\n            // If a hook was provided, use that value, otherwise just set the specified value\r\n            if ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\r\n                // Wrapped to prevent IE from throwing errors when \'invalid\' values are provided\r\n                // Fixes bug #5509\r\n                try {\r\n                    style[ name ] = value;\r\n                } catch(e) {}\r\n            }\r\n\r\n        } else {\r\n            // If a hook was provided get the non-computed value from there\r\n            if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\r\n                return ret;\r\n            }\r\n\r\n            // Otherwise just get the value from the style object\r\n            return style[ name ];\r\n        }\r\n    },\r\n\r\n    css: function( elem, name, numeric, extra ) {\r\n        var val, num, hooks,\r\n            origName = jQuery.camelCase( name );\r\n\r\n        // Make sure that we\'re working with the right name\r\n        name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\r\n\r\n        // gets hook for the prefixed version\r\n        // followed by the unprefixed version\r\n        hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n        // If a hook was provided get the computed value from there\r\n        if ( hooks && \"get\" in hooks ) {\r\n            val = hooks.get( elem, true, extra );\r\n        }\r\n\r\n        // Otherwise, if a way to get the computed value exists, use that\r\n        if ( val === undefined ) {\r\n            val = curCSS( elem, name );\r\n        }\r\n\r\n        //convert \"normal\" to computed value\r\n        if ( val === \"normal\" && name in cssNormalTransform ) {\r\n            val = cssNormalTransform[ name ];\r\n        }\r\n\r\n        // Return, converting to number if forced or a qualifier was provided and val looks numeric\r\n        if ( numeric || extra !== undefined ) {\r\n            num = parseFloat( val );\r\n            return numeric || jQuery.isNumeric( num ) ? num || 0 : val;\r\n        }\r\n        return val;\r\n    },\r\n\r\n    // A method for quickly swapping in/out CSS properties to get correct calculations\r\n    swap: function( elem, options, callback ) {\r\n        var ret, name,\r\n            old = {};\r\n\r\n        // Remember the old values, and insert the new ones\r\n        for ( name in options ) {\r\n            old[ name ] = elem.style[ name ];\r\n            elem.style[ name ] = options[ name ];\r\n        }\r\n\r\n        ret = callback.call( elem );\r\n\r\n        // Revert the old values\r\n        for ( name in options ) {\r\n            elem.style[ name ] = old[ name ];\r\n        }\r\n\r\n        return ret;\r\n    }\r\n});\r\n\r\n// NOTE: To any future maintainer, we\'ve window.getComputedStyle\r\n// because jsdom on node.js will break without it.\r\nif ( window.getComputedStyle ) {\r\n    curCSS = function( elem, name ) {\r\n        var ret, width, minWidth, maxWidth,\r\n            computed = window.getComputedStyle( elem, null ),\r\n            style = elem.style;\r\n\r\n        if ( computed ) {\r\n\r\n            // getPropertyValue is only needed for .css(\'filter\') in IE9, see #12537\r\n            ret = computed.getPropertyValue( name ) || computed[ name ];\r\n\r\n            if ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\r\n                ret = jQuery.style( elem, name );\r\n            }\r\n\r\n            // A tribute to the \"awesome hack by Dean Edwards\"\r\n            // Chrome < 17 and Safari 5.0 uses \"computed value\" instead of \"used value\" for margin-right\r\n            // Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\r\n            // this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\r\n            if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\r\n                width = style.width;\r\n                minWidth = style.minWidth;\r\n                maxWidth = style.maxWidth;\r\n\r\n                style.minWidth = style.maxWidth = style.width = ret;\r\n                ret = computed.width;\r\n\r\n                style.width = width;\r\n                style.minWidth = minWidth;\r\n                style.maxWidth = maxWidth;\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    };\r\n} else if ( document.documentElement.currentStyle ) {\r\n    curCSS = function( elem, name ) {\r\n        var left, rsLeft,\r\n            ret = elem.currentStyle && elem.currentStyle[ name ],\r\n            style = elem.style;\r\n\r\n        // Avoid setting ret to empty string here\r\n        // so we don\'t default to auto\r\n        if ( ret == null && style && style[ name ] ) {\r\n            ret = style[ name ];\r\n        }\r\n\r\n        // From the awesome hack by Dean Edwards\r\n        // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\r\n\r\n        // If we\'re not dealing with a regular pixel number\r\n        // but a number that has a weird ending, we need to convert it to pixels\r\n        // but not position css attributes, as those are proportional to the parent element instead\r\n        // and we can\'t measure the parent instead because it might trigger a \"stacking dolls\" problem\r\n        if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {\r\n\r\n            // Remember the original values\r\n            left = style.left;\r\n            rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;\r\n\r\n            // Put in the new values to get a computed value out\r\n            if ( rsLeft ) {\r\n                elem.runtimeStyle.left = elem.currentStyle.left;\r\n            }\r\n            style.left = name === \"fontSize\" ? \"1em\" : ret;\r\n            ret = style.pixelLeft + \"px\";\r\n\r\n            // Revert the changed values\r\n            style.left = left;\r\n            if ( rsLeft ) {\r\n                elem.runtimeStyle.left = rsLeft;\r\n            }\r\n        }\r\n\r\n        return ret === \"\" ? \"auto\" : ret;\r\n    };\r\n}\r\n\r\nfunction setPositiveNumber( elem, value, subtract ) {\r\n    var matches = rnumsplit.exec( value );\r\n    return matches ?\r\n            Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\r\n            value;\r\n}\r\n\r\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox ) {\r\n    var i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\r\n        // If we already have the right measurement, avoid augmentation\r\n        4 :\r\n        // Otherwise initialize for horizontal or vertical properties\r\n        name === \"width\" ? 1 : 0,\r\n\r\n        val = 0;\r\n\r\n    for ( ; i < 4; i += 2 ) {\r\n        // both box models exclude margin, so add it if we want it\r\n        if ( extra === \"margin\" ) {\r\n            // we use jQuery.css instead of curCSS here\r\n            // because of the reliableMarginRight CSS hook!\r\n            val += jQuery.css( elem, extra + cssExpand[ i ], true );\r\n        }\r\n\r\n        // From this point on we use curCSS for maximum performance (relevant in animations)\r\n        if ( isBorderBox ) {\r\n            // border-box includes padding, so remove it if we want content\r\n            if ( extra === \"content\" ) {\r\n                val -= parseFloat( curCSS( elem, \"padding\" + cssExpand[ i ] ) ) || 0;\r\n            }\r\n\r\n            // at this point, extra isn\'t border nor margin, so remove border\r\n            if ( extra !== \"margin\" ) {\r\n                val -= parseFloat( curCSS( elem, \"border\" + cssExpand[ i ] + \"Width\" ) ) || 0;\r\n            }\r\n        } else {\r\n            // at this point, extra isn\'t content, so add padding\r\n            val += parseFloat( curCSS( elem, \"padding\" + cssExpand[ i ] ) ) || 0;\r\n\r\n            // at this point, extra isn\'t content nor padding, so add border\r\n            if ( extra !== \"padding\" ) {\r\n                val += parseFloat( curCSS( elem, \"border\" + cssExpand[ i ] + \"Width\" ) ) || 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return val;\r\n}\r\n\r\nfunction getWidthOrHeight( elem, name, extra ) {\r\n\r\n    // Start with offset property, which is equivalent to the border-box value\r\n    var val = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\r\n        valueIsBorderBox = true,\r\n        isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\" ) === \"border-box\";\r\n\r\n    // some non-html elements return undefined for offsetWidth, so check for null/undefined\r\n    // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\r\n    // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\r\n    if ( val <= 0 || val == null ) {\r\n        // Fall back to computed then uncomputed css if necessary\r\n        val = curCSS( elem, name );\r\n        if ( val < 0 || val == null ) {\r\n            val = elem.style[ name ];\r\n        }\r\n\r\n        // Computed unit is not pixels. Stop here and return.\r\n        if ( rnumnonpx.test(val) ) {\r\n            return val;\r\n        }\r\n\r\n        // we need the check for style in case a browser which returns unreliable values\r\n        // for getComputedStyle silently falls back to the reliable elem.style\r\n        valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );\r\n\r\n        // Normalize \"\", auto, and prepare for extra\r\n        val = parseFloat( val ) || 0;\r\n    }\r\n\r\n    // use the active box-sizing model to add/subtract irrelevant styles\r\n    return ( val +\r\n        augmentWidthOrHeight(\r\n            elem,\r\n            name,\r\n            extra || ( isBorderBox ? \"border\" : \"content\" ),\r\n            valueIsBorderBox\r\n        )\r\n    ) + \"px\";\r\n}\r\n\r\n\r\n// Try to determine the default display value of an element\r\nfunction css_defaultDisplay( nodeName ) {\r\n    if ( elemdisplay[ nodeName ] ) {\r\n        return elemdisplay[ nodeName ];\r\n    }\r\n\r\n    var elem = jQuery( \"<\" + nodeName + \">\" ).appendTo( document.body ),\r\n        display = elem.css(\"display\");\r\n    elem.remove();\r\n\r\n    // If the simple way fails,\r\n    // get element\'s real default display by attaching it to a temp iframe\r\n    if ( display === \"none\" || display === \"\" ) {\r\n        // Use the already-created iframe if possible\r\n        iframe = document.body.appendChild(\r\n            iframe || jQuery.extend( document.createElement(\"iframe\"), {\r\n                frameBorder: 0,\r\n                width: 0,\r\n                height: 0\r\n            })\r\n        );\r\n\r\n        // Create a cacheable copy of the iframe document on first call.\r\n        // IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML\r\n        // document to it; WebKit & Firefox won\'t allow reusing the iframe document.\r\n        if ( !iframeDoc || !iframe.createElement ) {\r\n            iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;\r\n            iframeDoc.write(\"<!doctype html><html><body>\");\r\n            iframeDoc.close();\r\n        }\r\n\r\n        elem = iframeDoc.body.appendChild( iframeDoc.createElement(nodeName) );\r\n\r\n        display = curCSS( elem, \"display\" );\r\n        document.body.removeChild( iframe );\r\n    }\r\n\r\n    // Store the correct default display\r\n    elemdisplay[ nodeName ] = display;\r\n\r\n    return display;\r\n}\r\n\r\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\r\n    jQuery.cssHooks[ name ] = {\r\n        get: function( elem, computed, extra ) {\r\n            if ( computed ) {\r\n                // certain elements can have dimension info if we invisibly show them\r\n                // however, it must have a current display style that would benefit from this\r\n                if ( elem.offsetWidth === 0 && rdisplayswap.test( curCSS( elem, \"display\" ) ) ) {\r\n                    return jQuery.swap( elem, cssShow, function() {\r\n                        return getWidthOrHeight( elem, name, extra );\r\n                    });\r\n                } else {\r\n                    return getWidthOrHeight( elem, name, extra );\r\n                }\r\n            }\r\n        },\r\n\r\n        set: function( elem, value, extra ) {\r\n            return setPositiveNumber( elem, value, extra ?\r\n                augmentWidthOrHeight(\r\n                    elem,\r\n                    name,\r\n                    extra,\r\n                    jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\" ) === \"border-box\"\r\n                ) : 0\r\n            );\r\n        }\r\n    };\r\n});\r\n\r\nif ( !jQuery.support.opacity ) {\r\n    jQuery.cssHooks.opacity = {\r\n        get: function( elem, computed ) {\r\n            // IE uses filters for opacity\r\n            return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || \"\" ) ?\r\n                ( 0.01 * parseFloat( RegExp.$1 ) ) + \"\" :\r\n                computed ? \"1\" : \"\";\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n            var style = elem.style,\r\n                currentStyle = elem.currentStyle,\r\n                opacity = jQuery.isNumeric( value ) ? \"alpha(opacity=\" + value * 100 + \")\" : \"\",\r\n                filter = currentStyle && currentStyle.filter || style.filter || \"\";\r\n\r\n            // IE has trouble with opacity if it does not have layout\r\n            // Force it by setting the zoom level\r\n            style.zoom = 1;\r\n\r\n            // if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652\r\n            if ( value >= 1 && jQuery.trim( filter.replace( ralpha, \"\" ) ) === \"\" &&\r\n                style.removeAttribute ) {\r\n\r\n                // Setting style.filter to null, \"\" & \" \" still leave \"filter:\" in the cssText\r\n                // if \"filter:\" is present at all, clearType is disabled, we want to avoid this\r\n                // style.removeAttribute is IE Only, but so apparently is this code path...\r\n                style.removeAttribute( \"filter\" );\r\n\r\n                // if there there is no filter style applied in a css rule, we are done\r\n                if ( currentStyle && !currentStyle.filter ) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // otherwise, set new filter values\r\n            style.filter = ralpha.test( filter ) ?\r\n                filter.replace( ralpha, opacity ) :\r\n                filter + \" \" + opacity;\r\n        }\r\n    };\r\n}\r\n\r\n// These hooks cannot be added until DOM ready because the support test\r\n// for it is not run until after DOM ready\r\njQuery(function() {\r\n    if ( !jQuery.support.reliableMarginRight ) {\r\n        jQuery.cssHooks.marginRight = {\r\n            get: function( elem, computed ) {\r\n                // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\r\n                // Work around by temporarily setting element display to inline-block\r\n                return jQuery.swap( elem, { \"display\": \"inline-block\" }, function() {\r\n                    if ( computed ) {\r\n                        return curCSS( elem, \"marginRight\" );\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\r\n    // getComputedStyle returns percent when specified for top/left/bottom/right\r\n    // rather than make the css module depend on the offset module, we just check for it here\r\n    if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {\r\n        jQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\r\n            jQuery.cssHooks[ prop ] = {\r\n                get: function( elem, computed ) {\r\n                    if ( computed ) {\r\n                        var ret = curCSS( elem, prop );\r\n                        // if curCSS returns percentage, fallback to offset\r\n                        return rnumnonpx.test( ret ) ? jQuery( elem ).position()[ prop ] + \"px\" : ret;\r\n                    }\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n});\r\n\r\nif ( jQuery.expr && jQuery.expr.filters ) {\r\n    jQuery.expr.filters.hidden = function( elem ) {\r\n        return ( elem.offsetWidth === 0 && elem.offsetHeight === 0 ) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || curCSS( elem, \"display\" )) === \"none\");\r\n    };\r\n\r\n    jQuery.expr.filters.visible = function( elem ) {\r\n        return !jQuery.expr.filters.hidden( elem );\r\n    };\r\n}\r\n\r\n// These hooks are used by animate to expand properties\r\njQuery.each({\r\n    margin: \"\",\r\n    padding: \"\",\r\n    border: \"Width\"\r\n}, function( prefix, suffix ) {\r\n    jQuery.cssHooks[ prefix + suffix ] = {\r\n        expand: function( value ) {\r\n            var i,\r\n\r\n                // assumes a single number if not a string\r\n                parts = typeof value === \"string\" ? value.split(\" \") : [ value ],\r\n                expanded = {};\r\n\r\n            for ( i = 0; i < 4; i++ ) {\r\n                expanded[ prefix + cssExpand[ i ] + suffix ] =\r\n                    parts[ i ] || parts[ i - 2 ] || parts[ 0 ];\r\n            }\r\n\r\n            return expanded;\r\n        }\r\n    };\r\n\r\n    if ( !rmargin.test( prefix ) ) {\r\n        jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\r\n    }\r\n});\r\nvar r20 = /%20/g,\r\n    rbracket = /\\[\\]$/,\r\n    rCRLF = /\\r?\\n/g,\r\n    rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,\r\n    rselectTextarea = /^(?:select|textarea)/i;\r\n\r\njQuery.fn.extend({\r\n    serialize: function() {\r\n        return jQuery.param( this.serializeArray() );\r\n    },\r\n    serializeArray: function() {\r\n        return this.map(function(){\r\n            return this.elements ? jQuery.makeArray( this.elements ) : this;\r\n        })\r\n        .filter(function(){\r\n            return this.name && !this.disabled &&\r\n                ( this.checked || rselectTextarea.test( this.nodeName ) ||\r\n                    rinput.test( this.type ) );\r\n        })\r\n        .map(function( i, elem ){\r\n            var val = jQuery( this ).val();\r\n\r\n            return val == null ?\r\n                null :\r\n                jQuery.isArray( val ) ?\r\n                    jQuery.map( val, function( val, i ){\r\n                        return { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n                    }) :\r\n                    { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n        }).get();\r\n    }\r\n});\r\n\r\n//Serialize an array of form elements or a set of\r\n//key/values into a query string\r\njQuery.param = function( a, traditional ) {\r\n    var prefix,\r\n        s = [],\r\n        add = function( key, value ) {\r\n            // If value is a function, invoke it and return its value\r\n            value = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\r\n            s[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\r\n        };\r\n\r\n    // Set traditional to true for jQuery <= 1.3.2 behavior.\r\n    if ( traditional === undefined ) {\r\n        traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\r\n    }\r\n\r\n    // If an array was passed in, assume that it is an array of form elements.\r\n    if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\r\n        // Serialize the form elements\r\n        jQuery.each( a, function() {\r\n            add( this.name, this.value );\r\n        });\r\n\r\n    } else {\r\n        // If traditional, encode the \"old\" way (the way 1.3.2 or older\r\n        // did it), otherwise encode params recursively.\r\n        for ( prefix in a ) {\r\n            buildParams( prefix, a[ prefix ], traditional, add );\r\n        }\r\n    }\r\n\r\n    // Return the resulting serialization\r\n    return s.join( \"&\" ).replace( r20, \"+\" );\r\n};\r\n\r\nfunction buildParams( prefix, obj, traditional, add ) {\r\n    var name;\r\n\r\n    if ( jQuery.isArray( obj ) ) {\r\n        // Serialize array item.\r\n        jQuery.each( obj, function( i, v ) {\r\n            if ( traditional || rbracket.test( prefix ) ) {\r\n                // Treat each array item as a scalar.\r\n                add( prefix, v );\r\n\r\n            } else {\r\n                // If array item is non-scalar (array or object), encode its\r\n                // numeric index to resolve deserialization ambiguity issues.\r\n                // Note that rack (as of 1.0.0) can\'t currently deserialize\r\n                // nested arrays properly, and attempting to do so may cause\r\n                // a server error. Possible fixes are to modify rack\'s\r\n                // deserialization algorithm or to provide an option or flag\r\n                // to force array serialization to be shallow.\r\n                buildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\r\n            }\r\n        });\r\n\r\n    } else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\r\n        // Serialize object item.\r\n        for ( name in obj ) {\r\n            buildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\r\n        }\r\n\r\n    } else {\r\n        // Serialize scalar item.\r\n        add( prefix, obj );\r\n    }\r\n}\r\nvar\r\n    // Document location\r\n    ajaxLocParts,\r\n    ajaxLocation,\r\n\r\n    rhash = /#.*$/,\r\n    rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg, // IE leaves an \\r character at EOL\r\n    // #7653, #8125, #8152: local protocol detection\r\n    rlocalProtocol = /^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/,\r\n    rnoContent = /^(?:GET|HEAD)$/,\r\n    rprotocol = /^\\/\\//,\r\n    rquery = /\\?/,\r\n    rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n    rts = /([?&])_=[^&]*/,\r\n    rurl = /^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,\r\n\r\n    // Keep a copy of the old load method\r\n    _load = jQuery.fn.load,\r\n\r\n    /* Prefilters\r\n     * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n     * 2) These are called:\r\n     *    - BEFORE asking for a transport\r\n     *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n     * 3) key is the dataType\r\n     * 4) the catchall symbol \"*\" can be used\r\n     * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n     */\r\n    prefilters = {},\r\n\r\n    /* Transports bindings\r\n     * 1) key is the dataType\r\n     * 2) the catchall symbol \"*\" can be used\r\n     * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n     */\r\n    transports = {},\r\n\r\n    // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\r\n    allTypes = [\"*/\"] + [\"*\"];\r\n\r\n// #8138, IE may throw an exception when accessing\r\n// a field from window.location if document.domain has been set\r\ntry {\r\n    ajaxLocation = location.href;\r\n} catch( e ) {\r\n    // Use the href attribute of an A element\r\n    // since IE will modify it given document.location\r\n    ajaxLocation = document.createElement( \"a\" );\r\n    ajaxLocation.href = \"\";\r\n    ajaxLocation = ajaxLocation.href;\r\n}\r\n\r\n// Segment location into parts\r\najaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\r\n\r\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\nfunction addToPrefiltersOrTransports( structure ) {\r\n\r\n    // dataTypeExpression is optional and defaults to \"*\"\r\n    return function( dataTypeExpression, func ) {\r\n\r\n        if ( typeof dataTypeExpression !== \"string\" ) {\r\n            func = dataTypeExpression;\r\n            dataTypeExpression = \"*\";\r\n        }\r\n\r\n        var dataType, list, placeBefore,\r\n            dataTypes = dataTypeExpression.toLowerCase().split( core_rspace ),\r\n            i = 0,\r\n            length = dataTypes.length;\r\n\r\n        if ( jQuery.isFunction( func ) ) {\r\n            // For each dataType in the dataTypeExpression\r\n            for ( ; i < length; i++ ) {\r\n                dataType = dataTypes[ i ];\r\n                // We control if we\'re asked to add before\r\n                // any existing element\r\n                placeBefore = /^\\+/.test( dataType );\r\n                if ( placeBefore ) {\r\n                    dataType = dataType.substr( 1 ) || \"*\";\r\n                }\r\n                list = structure[ dataType ] = structure[ dataType ] || [];\r\n                // then we add to the structure accordingly\r\n                list[ placeBefore ? \"unshift\" : \"push\" ]( func );\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\n// Base inspection function for prefilters and transports\r\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,\r\n        dataType /* internal */, inspected /* internal */ ) {\r\n\r\n    dataType = dataType || options.dataTypes[ 0 ];\r\n    inspected = inspected || {};\r\n\r\n    inspected[ dataType ] = true;\r\n\r\n    var selection,\r\n        list = structure[ dataType ],\r\n        i = 0,\r\n        length = list ? list.length : 0,\r\n        executeOnly = ( structure === prefilters );\r\n\r\n    for ( ; i < length && ( executeOnly || !selection ); i++ ) {\r\n        selection = list[ i ]( options, originalOptions, jqXHR );\r\n        // If we got redirected to another dataType\r\n        // we try there if executing only and not done already\r\n        if ( typeof selection === \"string\" ) {\r\n            if ( !executeOnly || inspected[ selection ] ) {\r\n                selection = undefined;\r\n            } else {\r\n                options.dataTypes.unshift( selection );\r\n                selection = inspectPrefiltersOrTransports(\r\n                        structure, options, originalOptions, jqXHR, selection, inspected );\r\n            }\r\n        }\r\n    }\r\n    // If we\'re only executing or nothing was selected\r\n    // we try the catchall dataType if not done already\r\n    if ( ( executeOnly || !selection ) && !inspected[ \"*\" ] ) {\r\n        selection = inspectPrefiltersOrTransports(\r\n                structure, options, originalOptions, jqXHR, \"*\", inspected );\r\n    }\r\n    // unnecessary when only executing (prefilters)\r\n    // but it\'ll be ignored by the caller in that case\r\n    return selection;\r\n}\r\n\r\n// A special extend for ajax options\r\n// that takes \"flat\" options (not to be deep extended)\r\n// Fixes #9887\r\nfunction ajaxExtend( target, src ) {\r\n    var key, deep,\r\n        flatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n    for ( key in src ) {\r\n        if ( src[ key ] !== undefined ) {\r\n            ( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\r\n        }\r\n    }\r\n    if ( deep ) {\r\n        jQuery.extend( true, target, deep );\r\n    }\r\n}\r\n\r\njQuery.fn.load = function( url, params, callback ) {\r\n    if ( typeof url !== \"string\" && _load ) {\r\n        return _load.apply( this, arguments );\r\n    }\r\n\r\n    // Don\'t do a request if no elements are being requested\r\n    if ( !this.length ) {\r\n        return this;\r\n    }\r\n\r\n    var selector, type, response,\r\n        self = this,\r\n        off = url.indexOf(\" \");\r\n\r\n    if ( off >= 0 ) {\r\n        selector = url.slice( off, url.length );\r\n        url = url.slice( 0, off );\r\n    }\r\n\r\n    // If it\'s a function\r\n    if ( jQuery.isFunction( params ) ) {\r\n\r\n        // We assume that it\'s the callback\r\n        callback = params;\r\n        params = undefined;\r\n\r\n    // Otherwise, build a param string\r\n    } else if ( params && typeof params === \"object\" ) {\r\n        type = \"POST\";\r\n    }\r\n\r\n    // Request the remote document\r\n    jQuery.ajax({\r\n        url: url,\r\n\r\n        // if \"type\" variable is undefined, then \"GET\" method will be used\r\n        type: type,\r\n        dataType: \"html\",\r\n        data: params,\r\n        complete: function( jqXHR, status ) {\r\n            if ( callback ) {\r\n                self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\r\n            }\r\n        }\r\n    }).done(function( responseText ) {\r\n\r\n        // Save response for use in complete callback\r\n        response = arguments;\r\n\r\n        // See if a selector was specified\r\n        self.html( selector ?\r\n\r\n            // Create a dummy div to hold the results\r\n            jQuery(\"<div>\")\r\n\r\n                // inject the contents of the document in, removing the scripts\r\n                // to avoid any \'Permission Denied\' errors in IE\r\n                .append( responseText.replace( rscript, \"\" ) )\r\n\r\n                // Locate the specified elements\r\n                .find( selector ) :\r\n\r\n            // If not, just inject the full result\r\n            responseText );\r\n\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Attach a bunch of functions for handling common AJAX events\r\njQuery.each( \"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split( \" \" ), function( i, o ){\r\n    jQuery.fn[ o ] = function( f ){\r\n        return this.on( o, f );\r\n    };\r\n});\r\n\r\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\r\n    jQuery[ method ] = function( url, data, callback, type ) {\r\n        // shift arguments if data argument was omitted\r\n        if ( jQuery.isFunction( data ) ) {\r\n            type = type || callback;\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        return jQuery.ajax({\r\n            type: method,\r\n            url: url,\r\n            data: data,\r\n            success: callback,\r\n            dataType: type\r\n        });\r\n    };\r\n});\r\n\r\njQuery.extend({\r\n\r\n    getScript: function( url, callback ) {\r\n        return jQuery.get( url, undefined, callback, \"script\" );\r\n    },\r\n\r\n    getJSON: function( url, data, callback ) {\r\n        return jQuery.get( url, data, callback, \"json\" );\r\n    },\r\n\r\n    // Creates a full fledged settings object into target\r\n    // with both ajaxSettings and settings fields.\r\n    // If target is omitted, writes into ajaxSettings.\r\n    ajaxSetup: function( target, settings ) {\r\n        if ( settings ) {\r\n            // Building a settings object\r\n            ajaxExtend( target, jQuery.ajaxSettings );\r\n        } else {\r\n            // Extending ajaxSettings\r\n            settings = target;\r\n            target = jQuery.ajaxSettings;\r\n        }\r\n        ajaxExtend( target, settings );\r\n        return target;\r\n    },\r\n\r\n    ajaxSettings: {\r\n        url: ajaxLocation,\r\n        isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\r\n        global: true,\r\n        type: \"GET\",\r\n        contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n        processData: true,\r\n        async: true,\r\n        /*\r\n        timeout: 0,\r\n        data: null,\r\n        dataType: null,\r\n        username: null,\r\n        password: null,\r\n        cache: null,\r\n        throws: false,\r\n        traditional: false,\r\n        headers: {},\r\n        */\r\n\r\n        accepts: {\r\n            xml: \"application/xml, text/xml\",\r\n            html: \"text/html\",\r\n            text: \"text/plain\",\r\n            json: \"application/json, text/javascript\",\r\n            \"*\": allTypes\r\n        },\r\n\r\n        contents: {\r\n            xml: /xml/,\r\n            html: /html/,\r\n            json: /json/\r\n        },\r\n\r\n        responseFields: {\r\n            xml: \"responseXML\",\r\n            text: \"responseText\"\r\n        },\r\n\r\n        // List of data converters\r\n        // 1) key format is \"source_type destination_type\" (a single space in-between)\r\n        // 2) the catchall symbol \"*\" can be used for source_type\r\n        converters: {\r\n\r\n            // Convert anything to text\r\n            \"* text\": window.String,\r\n\r\n            // Text to html (true = no transformation)\r\n            \"text html\": true,\r\n\r\n            // Evaluate text as a json expression\r\n            \"text json\": jQuery.parseJSON,\r\n\r\n            // Parse text as xml\r\n            \"text xml\": jQuery.parseXML\r\n        },\r\n\r\n        // For options that shouldn\'t be deep extended:\r\n        // you can add your own custom options here if\r\n        // and when you create one that shouldn\'t be\r\n        // deep extended (see ajaxExtend)\r\n        flatOptions: {\r\n            context: true,\r\n            url: true\r\n        }\r\n    },\r\n\r\n    ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\r\n    ajaxTransport: addToPrefiltersOrTransports( transports ),\r\n\r\n    // Main method\r\n    ajax: function( url, options ) {\r\n\r\n        // If url is an object, simulate pre-1.5 signature\r\n        if ( typeof url === \"object\" ) {\r\n            options = url;\r\n            url = undefined;\r\n        }\r\n\r\n        // Force options to be an object\r\n        options = options || {};\r\n\r\n        var // ifModified key\r\n            ifModifiedKey,\r\n            // Response headers\r\n            responseHeadersString,\r\n            responseHeaders,\r\n            // transport\r\n            transport,\r\n            // timeout handle\r\n            timeoutTimer,\r\n            // Cross-domain detection vars\r\n            parts,\r\n            // To know if global events are to be dispatched\r\n            fireGlobals,\r\n            // Loop variable\r\n            i,\r\n            // Create the final options object\r\n            s = jQuery.ajaxSetup( {}, options ),\r\n            // Callbacks context\r\n            callbackContext = s.context || s,\r\n            // Context for global events\r\n            // It\'s the callbackContext if one was provided in the options\r\n            // and if it\'s a DOM node or a jQuery collection\r\n            globalEventContext = callbackContext !== s &&\r\n                ( callbackContext.nodeType || callbackContext instanceof jQuery ) ?\r\n                        jQuery( callbackContext ) : jQuery.event,\r\n            // Deferreds\r\n            deferred = jQuery.Deferred(),\r\n            completeDeferred = jQuery.Callbacks( \"once memory\" ),\r\n            // Status-dependent callbacks\r\n            statusCode = s.statusCode || {},\r\n            // Headers (they are sent all at once)\r\n            requestHeaders = {},\r\n            requestHeadersNames = {},\r\n            // The jqXHR state\r\n            state = 0,\r\n            // Default abort message\r\n            strAbort = \"canceled\",\r\n            // Fake xhr\r\n            jqXHR = {\r\n\r\n                readyState: 0,\r\n\r\n                // Caches the header\r\n                setRequestHeader: function( name, value ) {\r\n                    if ( !state ) {\r\n                        var lname = name.toLowerCase();\r\n                        name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\r\n                        requestHeaders[ name ] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                // Raw string\r\n                getAllResponseHeaders: function() {\r\n                    return state === 2 ? responseHeadersString : null;\r\n                },\r\n\r\n                // Builds headers hashtable if needed\r\n                getResponseHeader: function( key ) {\r\n                    var match;\r\n                    if ( state === 2 ) {\r\n                        if ( !responseHeaders ) {\r\n                            responseHeaders = {};\r\n                            while( ( match = rheaders.exec( responseHeadersString ) ) ) {\r\n                                responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\r\n                            }\r\n                        }\r\n                        match = responseHeaders[ key.toLowerCase() ];\r\n                    }\r\n                    return match === undefined ? null : match;\r\n                },\r\n\r\n                // Overrides response content-type header\r\n                overrideMimeType: function( type ) {\r\n                    if ( !state ) {\r\n                        s.mimeType = type;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                // Cancel the request\r\n                abort: function( statusText ) {\r\n                    statusText = statusText || strAbort;\r\n                    if ( transport ) {\r\n                        transport.abort( statusText );\r\n                    }\r\n                    done( 0, statusText );\r\n                    return this;\r\n                }\r\n            };\r\n\r\n        // Callback for when everything is done\r\n        // It is defined here because jslint complains if it is declared\r\n        // at the end of the function (which would be more logical and readable)\r\n        function done( status, nativeStatusText, responses, headers ) {\r\n            var isSuccess, success, error, response, modified,\r\n                statusText = nativeStatusText;\r\n\r\n            // Called once\r\n            if ( state === 2 ) {\r\n                return;\r\n            }\r\n\r\n            // State is \"done\" now\r\n            state = 2;\r\n\r\n            // Clear timeout if it exists\r\n            if ( timeoutTimer ) {\r\n                clearTimeout( timeoutTimer );\r\n            }\r\n\r\n            // Dereference transport for early garbage collection\r\n            // (no matter how long the jqXHR object will be used)\r\n            transport = undefined;\r\n\r\n            // Cache response headers\r\n            responseHeadersString = headers || \"\";\r\n\r\n            // Set readyState\r\n            jqXHR.readyState = status > 0 ? 4 : 0;\r\n\r\n            // Get response data\r\n            if ( responses ) {\r\n                response = ajaxHandleResponses( s, jqXHR, responses );\r\n            }\r\n\r\n            // If successful, handle type chaining\r\n            if ( status >= 200 && status < 300 || status === 304 ) {\r\n\r\n                // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n                if ( s.ifModified ) {\r\n\r\n                    modified = jqXHR.getResponseHeader(\"Last-Modified\");\r\n                    if ( modified ) {\r\n                        jQuery.lastModified[ ifModifiedKey ] = modified;\r\n                    }\r\n                    modified = jqXHR.getResponseHeader(\"Etag\");\r\n                    if ( modified ) {\r\n                        jQuery.etag[ ifModifiedKey ] = modified;\r\n                    }\r\n                }\r\n\r\n                // If not modified\r\n                if ( status === 304 ) {\r\n\r\n                    statusText = \"notmodified\";\r\n                    isSuccess = true;\r\n\r\n                // If we have data\r\n                } else {\r\n\r\n                    isSuccess = ajaxConvert( s, response );\r\n                    statusText = isSuccess.state;\r\n                    success = isSuccess.data;\r\n                    error = isSuccess.error;\r\n                    isSuccess = !error;\r\n                }\r\n            } else {\r\n                // We extract error from statusText\r\n                // then normalize statusText and status for non-aborts\r\n                error = statusText;\r\n                if ( !statusText || status ) {\r\n                    statusText = \"error\";\r\n                    if ( status < 0 ) {\r\n                        status = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Set data for the fake xhr object\r\n            jqXHR.status = status;\r\n            jqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\r\n\r\n            // Success/Error\r\n            if ( isSuccess ) {\r\n                deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\r\n            } else {\r\n                deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\r\n            }\r\n\r\n            // Status-dependent callbacks\r\n            jqXHR.statusCode( statusCode );\r\n            statusCode = undefined;\r\n\r\n            if ( fireGlobals ) {\r\n                globalEventContext.trigger( \"ajax\" + ( isSuccess ? \"Success\" : \"Error\" ),\r\n                        [ jqXHR, s, isSuccess ? success : error ] );\r\n            }\r\n\r\n            // Complete\r\n            completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\r\n\r\n            if ( fireGlobals ) {\r\n                globalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\r\n                // Handle the global AJAX counter\r\n                if ( !( --jQuery.active ) ) {\r\n                    jQuery.event.trigger( \"ajaxStop\" );\r\n                }\r\n            }\r\n        }\r\n\r\n        // Attach deferreds\r\n        deferred.promise( jqXHR );\r\n        jqXHR.success = jqXHR.done;\r\n        jqXHR.error = jqXHR.fail;\r\n        jqXHR.complete = completeDeferred.add;\r\n\r\n        // Status-dependent callbacks\r\n        jqXHR.statusCode = function( map ) {\r\n            if ( map ) {\r\n                var tmp;\r\n                if ( state < 2 ) {\r\n                    for ( tmp in map ) {\r\n                        statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];\r\n                    }\r\n                } else {\r\n                    tmp = map[ jqXHR.status ];\r\n                    jqXHR.always( tmp );\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n\r\n        // Remove hash character (#7531: and string promotion)\r\n        // Add protocol if not provided (#5866: IE7 issue with protocol-less urls)\r\n        // We also use the url parameter if available\r\n        s.url = ( ( url || s.url ) + \"\" ).replace( rhash, \"\" ).replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\r\n\r\n        // Extract dataTypes list\r\n        s.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().split( core_rspace );\r\n\r\n        // A cross-domain request is in order when we have a protocol:host:port mismatch\r\n        if ( s.crossDomain == null ) {\r\n            parts = rurl.exec( s.url.toLowerCase() );\r\n            s.crossDomain = !!( parts &&\r\n                ( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\r\n                    ( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? 80 : 443 ) ) !=\r\n                        ( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? 80 : 443 ) ) )\r\n            );\r\n        }\r\n\r\n        // Convert data if not already a string\r\n        if ( s.data && s.processData && typeof s.data !== \"string\" ) {\r\n            s.data = jQuery.param( s.data, s.traditional );\r\n        }\r\n\r\n        // Apply prefilters\r\n        inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\r\n\r\n        // If request was aborted inside a prefilter, stop there\r\n        if ( state === 2 ) {\r\n            return jqXHR;\r\n        }\r\n\r\n        // We can fire global events as of now if asked to\r\n        fireGlobals = s.global;\r\n\r\n        // Uppercase the type\r\n        s.type = s.type.toUpperCase();\r\n\r\n        // Determine if request has content\r\n        s.hasContent = !rnoContent.test( s.type );\r\n\r\n        // Watch for a new set of requests\r\n        if ( fireGlobals && jQuery.active++ === 0 ) {\r\n            jQuery.event.trigger( \"ajaxStart\" );\r\n        }\r\n\r\n        // More options handling for requests with no content\r\n        if ( !s.hasContent ) {\r\n\r\n            // If data is available, append data to url\r\n            if ( s.data ) {\r\n                s.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.data;\r\n                // #9682: remove data so that it\'s not used in an eventual retry\r\n                delete s.data;\r\n            }\r\n\r\n            // Get ifModifiedKey before adding the anti-cache parameter\r\n            ifModifiedKey = s.url;\r\n\r\n            // Add anti-cache in url if needed\r\n            if ( s.cache === false ) {\r\n\r\n                var ts = jQuery.now(),\r\n                    // try replacing _= if it is there\r\n                    ret = s.url.replace( rts, \"$1_=\" + ts );\r\n\r\n                // if nothing was replaced, add timestamp to the end\r\n                s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? \"&\" : \"?\" ) + \"_=\" + ts : \"\" );\r\n            }\r\n        }\r\n\r\n        // Set the correct header, if data is being sent\r\n        if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\r\n            jqXHR.setRequestHeader( \"Content-Type\", s.contentType );\r\n        }\r\n\r\n        // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n        if ( s.ifModified ) {\r\n            ifModifiedKey = ifModifiedKey || s.url;\r\n            if ( jQuery.lastModified[ ifModifiedKey ] ) {\r\n                jqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ ifModifiedKey ] );\r\n            }\r\n            if ( jQuery.etag[ ifModifiedKey ] ) {\r\n                jqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ ifModifiedKey ] );\r\n            }\r\n        }\r\n\r\n        // Set the Accepts header for the server, depending on the dataType\r\n        jqXHR.setRequestHeader(\r\n            \"Accept\",\r\n            s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\r\n                s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\r\n                s.accepts[ \"*\" ]\r\n        );\r\n\r\n        // Check for headers option\r\n        for ( i in s.headers ) {\r\n            jqXHR.setRequestHeader( i, s.headers[ i ] );\r\n        }\r\n\r\n        // Allow custom headers/mimetypes and early abort\r\n        if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\r\n                // Abort if not done already and return\r\n                return jqXHR.abort();\r\n\r\n        }\r\n\r\n        // aborting is no longer a cancellation\r\n        strAbort = \"abort\";\r\n\r\n        // Install callbacks on deferreds\r\n        for ( i in { success: 1, error: 1, complete: 1 } ) {\r\n            jqXHR[ i ]( s[ i ] );\r\n        }\r\n\r\n        // Get transport\r\n        transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\r\n\r\n        // If no transport, we auto-abort\r\n        if ( !transport ) {\r\n            done( -1, \"No Transport\" );\r\n        } else {\r\n            jqXHR.readyState = 1;\r\n            // Send global event\r\n            if ( fireGlobals ) {\r\n                globalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\r\n            }\r\n            // Timeout\r\n            if ( s.async && s.timeout > 0 ) {\r\n                timeoutTimer = setTimeout( function(){\r\n                    jqXHR.abort( \"timeout\" );\r\n                }, s.timeout );\r\n            }\r\n\r\n            try {\r\n                state = 1;\r\n                transport.send( requestHeaders, done );\r\n            } catch (e) {\r\n                // Propagate exception as error if not done\r\n                if ( state < 2 ) {\r\n                    done( -1, e );\r\n                // Simply rethrow otherwise\r\n                } else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n\r\n        return jqXHR;\r\n    },\r\n\r\n    // Counter for holding the number of active queries\r\n    active: 0,\r\n\r\n    // Last-Modified header cache for next request\r\n    lastModified: {},\r\n    etag: {}\r\n\r\n});\r\n\r\n/* Handles responses to an ajax request:\r\n * - sets all responseXXX fields accordingly\r\n * - finds the right dataType (mediates between content-type and expected dataType)\r\n * - returns the corresponding response\r\n */\r\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\r\n\r\n    var ct, type, finalDataType, firstDataType,\r\n        contents = s.contents,\r\n        dataTypes = s.dataTypes,\r\n        responseFields = s.responseFields;\r\n\r\n    // Fill responseXXX fields\r\n    for ( type in responseFields ) {\r\n        if ( type in responses ) {\r\n            jqXHR[ responseFields[type] ] = responses[ type ];\r\n        }\r\n    }\r\n\r\n    // Remove auto dataType and get content-type in the process\r\n    while( dataTypes[ 0 ] === \"*\" ) {\r\n        dataTypes.shift();\r\n        if ( ct === undefined ) {\r\n            ct = s.mimeType || jqXHR.getResponseHeader( \"content-type\" );\r\n        }\r\n    }\r\n\r\n    // Check if we\'re dealing with a known content-type\r\n    if ( ct ) {\r\n        for ( type in contents ) {\r\n            if ( contents[ type ] && contents[ type ].test( ct ) ) {\r\n                dataTypes.unshift( type );\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Check to see if we have a response for the expected dataType\r\n    if ( dataTypes[ 0 ] in responses ) {\r\n        finalDataType = dataTypes[ 0 ];\r\n    } else {\r\n        // Try convertible dataTypes\r\n        for ( type in responses ) {\r\n            if ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\r\n                finalDataType = type;\r\n                break;\r\n            }\r\n            if ( !firstDataType ) {\r\n                firstDataType = type;\r\n            }\r\n        }\r\n        // Or just use first one\r\n        finalDataType = finalDataType || firstDataType;\r\n    }\r\n\r\n    // If we found a dataType\r\n    // We add the dataType to the list if needed\r\n    // and return the corresponding response\r\n    if ( finalDataType ) {\r\n        if ( finalDataType !== dataTypes[ 0 ] ) {\r\n            dataTypes.unshift( finalDataType );\r\n        }\r\n        return responses[ finalDataType ];\r\n    }\r\n}\r\n\r\n// Chain conversions given the request and the original response\r\nfunction ajaxConvert( s, response ) {\r\n\r\n    var conv, conv2, current, tmp,\r\n        // Work with a copy of dataTypes in case we need to modify it for conversion\r\n        dataTypes = s.dataTypes.slice(),\r\n        prev = dataTypes[ 0 ],\r\n        converters = {},\r\n        i = 0;\r\n\r\n    // Apply the dataFilter if provided\r\n    if ( s.dataFilter ) {\r\n        response = s.dataFilter( response, s.dataType );\r\n    }\r\n\r\n    // Create converters map with lowercased keys\r\n    if ( dataTypes[ 1 ] ) {\r\n        for ( conv in s.converters ) {\r\n            converters[ conv.toLowerCase() ] = s.converters[ conv ];\r\n        }\r\n    }\r\n\r\n    // Convert to each sequential dataType, tolerating list modification\r\n    for ( ; (current = dataTypes[++i]); ) {\r\n\r\n        // There\'s only work to do if current dataType is non-auto\r\n        if ( current !== \"*\" ) {\r\n\r\n            // Convert response if prev dataType is non-auto and differs from current\r\n            if ( prev !== \"*\" && prev !== current ) {\r\n\r\n                // Seek a direct converter\r\n                conv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\r\n\r\n                // If none found, seek a pair\r\n                if ( !conv ) {\r\n                    for ( conv2 in converters ) {\r\n\r\n                        // If conv2 outputs current\r\n                        tmp = conv2.split(\" \");\r\n                        if ( tmp[ 1 ] === current ) {\r\n\r\n                            // If prev can be converted to accepted input\r\n                            conv = converters[ prev + \" \" + tmp[ 0 ] ] ||\r\n                                converters[ \"* \" + tmp[ 0 ] ];\r\n                            if ( conv ) {\r\n                                // Condense equivalence converters\r\n                                if ( conv === true ) {\r\n                                    conv = converters[ conv2 ];\r\n\r\n                                // Otherwise, insert the intermediate dataType\r\n                                } else if ( converters[ conv2 ] !== true ) {\r\n                                    current = tmp[ 0 ];\r\n                                    dataTypes.splice( i--, 0, current );\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Apply converter (if not an equivalence)\r\n                if ( conv !== true ) {\r\n\r\n                    // Unless errors are allowed to bubble, catch and return them\r\n                    if ( conv && s[\"throws\"] ) {\r\n                        response = conv( response );\r\n                    } else {\r\n                        try {\r\n                            response = conv( response );\r\n                        } catch ( e ) {\r\n                            return { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Update prev for next iteration\r\n            prev = current;\r\n        }\r\n    }\r\n\r\n    return { state: \"success\", data: response };\r\n}\r\nvar oldCallbacks = [],\r\n    rquestion = /\\?/,\r\n    rjsonp = /(=)\\?(?=&|$)|\\?\\?/,\r\n    nonce = jQuery.now();\r\n\r\n// Default jsonp settings\r\njQuery.ajaxSetup({\r\n    jsonp: \"callback\",\r\n    jsonpCallback: function() {\r\n        var callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\r\n        this[ callback ] = true;\r\n        return callback;\r\n    }\r\n});\r\n\r\n// Detect, normalize options and install callbacks for jsonp requests\r\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\r\n\r\n    var callbackName, overwritten, responseContainer,\r\n        data = s.data,\r\n        url = s.url,\r\n        hasCallback = s.jsonp !== false,\r\n        replaceInUrl = hasCallback && rjsonp.test( url ),\r\n        replaceInData = hasCallback && !replaceInUrl && typeof data === \"string\" &&\r\n            !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") &&\r\n            rjsonp.test( data );\r\n\r\n    // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\r\n    if ( s.dataTypes[ 0 ] === \"jsonp\" || replaceInUrl || replaceInData ) {\r\n\r\n        // Get callback name, remembering preexisting value associated with it\r\n        callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\r\n            s.jsonpCallback() :\r\n            s.jsonpCallback;\r\n        overwritten = window[ callbackName ];\r\n\r\n        // Insert callback into url or form data\r\n        if ( replaceInUrl ) {\r\n            s.url = url.replace( rjsonp, \"$1\" + callbackName );\r\n        } else if ( replaceInData ) {\r\n            s.data = data.replace( rjsonp, \"$1\" + callbackName );\r\n        } else if ( hasCallback ) {\r\n            s.url += ( rquestion.test( url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\r\n        }\r\n\r\n        // Use data converter to retrieve json after script execution\r\n        s.converters[\"script json\"] = function() {\r\n            if ( !responseContainer ) {\r\n                jQuery.error( callbackName + \" was not called\" );\r\n            }\r\n            return responseContainer[ 0 ];\r\n        };\r\n\r\n        // force json dataType\r\n        s.dataTypes[ 0 ] = \"json\";\r\n\r\n        // Install callback\r\n        window[ callbackName ] = function() {\r\n            responseContainer = arguments;\r\n        };\r\n\r\n        // Clean-up function (fires after converters)\r\n        jqXHR.always(function() {\r\n            // Restore preexisting value\r\n            window[ callbackName ] = overwritten;\r\n\r\n            // Save back as free\r\n            if ( s[ callbackName ] ) {\r\n                // make sure that re-using the options doesn\'t screw things around\r\n                s.jsonpCallback = originalSettings.jsonpCallback;\r\n\r\n                // save the callback name for future use\r\n                oldCallbacks.push( callbackName );\r\n            }\r\n\r\n            // Call if it was a function and we have a response\r\n            if ( responseContainer && jQuery.isFunction( overwritten ) ) {\r\n                overwritten( responseContainer[ 0 ] );\r\n            }\r\n\r\n            responseContainer = overwritten = undefined;\r\n        });\r\n\r\n        // Delegate to script\r\n        return \"script\";\r\n    }\r\n});\r\n// Install script dataType\r\njQuery.ajaxSetup({\r\n    accepts: {\r\n        script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\r\n    },\r\n    contents: {\r\n        script: /javascript|ecmascript/\r\n    },\r\n    converters: {\r\n        \"text script\": function( text ) {\r\n            jQuery.globalEval( text );\r\n            return text;\r\n        }\r\n    }\r\n});\r\n\r\n// Handle cache\'s special case and global\r\njQuery.ajaxPrefilter( \"script\", function( s ) {\r\n    if ( s.cache === undefined ) {\r\n        s.cache = false;\r\n    }\r\n    if ( s.crossDomain ) {\r\n        s.type = \"GET\";\r\n        s.global = false;\r\n    }\r\n});\r\n\r\n// Bind script tag hack transport\r\njQuery.ajaxTransport( \"script\", function(s) {\r\n\r\n    // This transport only deals with cross domain requests\r\n    if ( s.crossDomain ) {\r\n\r\n        var script,\r\n            head = document.head || document.getElementsByTagName( \"head\" )[0] || document.documentElement;\r\n\r\n        return {\r\n\r\n            send: function( _, callback ) {\r\n\r\n                script = document.createElement( \"script\" );\r\n\r\n                script.async = \"async\";\r\n\r\n                if ( s.scriptCharset ) {\r\n                    script.charset = s.scriptCharset;\r\n                }\r\n\r\n                script.src = s.url;\r\n\r\n                // Attach handlers for all browsers\r\n                script.onload = script.onreadystatechange = function( _, isAbort ) {\r\n\r\n                    if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\r\n\r\n                        // Handle memory leak in IE\r\n                        script.onload = script.onreadystatechange = null;\r\n\r\n                        // Remove the script\r\n                        if ( head && script.parentNode ) {\r\n                            head.removeChild( script );\r\n                        }\r\n\r\n                        // Dereference the script\r\n                        script = undefined;\r\n\r\n                        // Callback if not abort\r\n                        if ( !isAbort ) {\r\n                            callback( 200, \"success\" );\r\n                        }\r\n                    }\r\n                };\r\n                // Use insertBefore instead of appendChild  to circumvent an IE6 bug.\r\n                // This arises when a base node is used (#2709 and #4378).\r\n                head.insertBefore( script, head.firstChild );\r\n            },\r\n\r\n            abort: function() {\r\n                if ( script ) {\r\n                    script.onload( 0, 1 );\r\n                }\r\n            }\r\n        };\r\n    }\r\n});\r\nvar xhrCallbacks,\r\n    // #5280: Internet Explorer will keep connections alive if we don\'t abort on unload\r\n    xhrOnUnloadAbort = window.ActiveXObject ? function() {\r\n        // Abort all pending requests\r\n        for ( var key in xhrCallbacks ) {\r\n            xhrCallbacks[ key ]( 0, 1 );\r\n        }\r\n    } : false,\r\n    xhrId = 0;\r\n\r\n// Functions to create xhrs\r\nfunction createStandardXHR() {\r\n    try {\r\n        return new window.XMLHttpRequest();\r\n    } catch( e ) {}\r\n}\r\n\r\nfunction createActiveXHR() {\r\n    try {\r\n        return new window.ActiveXObject( \"Microsoft.XMLHTTP\" );\r\n    } catch( e ) {}\r\n}\r\n\r\n// Create the request object\r\n// (This is still attached to ajaxSettings for backward compatibility)\r\njQuery.ajaxSettings.xhr = window.ActiveXObject ?\r\n    /* Microsoft failed to properly\r\n     * implement the XMLHttpRequest in IE7 (can\'t request local files),\r\n     * so we use the ActiveXObject when it is available\r\n     * Additionally XMLHttpRequest can be disabled in IE7/IE8 so\r\n     * we need a fallback.\r\n     */\r\n    function() {\r\n        return !this.isLocal && createStandardXHR() || createActiveXHR();\r\n    } :\r\n    // For all other browsers, use the standard XMLHttpRequest object\r\n    createStandardXHR;\r\n\r\n// Determine support properties\r\n(function( xhr ) {\r\n    jQuery.extend( jQuery.support, {\r\n        ajax: !!xhr,\r\n        cors: !!xhr && ( \"withCredentials\" in xhr )\r\n    });\r\n})( jQuery.ajaxSettings.xhr() );\r\n\r\n// Create transport if the browser can provide an xhr\r\nif ( jQuery.support.ajax ) {\r\n\r\n    jQuery.ajaxTransport(function( s ) {\r\n        // Cross domain only allowed if supported through XMLHttpRequest\r\n        if ( !s.crossDomain || jQuery.support.cors ) {\r\n\r\n            var callback;\r\n\r\n            return {\r\n                send: function( headers, complete ) {\r\n\r\n                    // Get a new xhr\r\n                    var handle, i,\r\n                        xhr = s.xhr();\r\n\r\n                    // Open the socket\r\n                    // Passing null username, generates a login popup on Opera (#2865)\r\n                    if ( s.username ) {\r\n                        xhr.open( s.type, s.url, s.async, s.username, s.password );\r\n                    } else {\r\n                        xhr.open( s.type, s.url, s.async );\r\n                    }\r\n\r\n                    // Apply custom fields if provided\r\n                    if ( s.xhrFields ) {\r\n                        for ( i in s.xhrFields ) {\r\n                            xhr[ i ] = s.xhrFields[ i ];\r\n                        }\r\n                    }\r\n\r\n                    // Override mime type if needed\r\n                    if ( s.mimeType && xhr.overrideMimeType ) {\r\n                        xhr.overrideMimeType( s.mimeType );\r\n                    }\r\n\r\n                    // X-Requested-With header\r\n                    // For cross-domain requests, seeing as conditions for a preflight are\r\n                    // akin to a jigsaw puzzle, we simply never set it to be sure.\r\n                    // (it can always be set on a per-request basis or even using ajaxSetup)\r\n                    // For same-domain requests, won\'t change header if already provided.\r\n                    if ( !s.crossDomain && !headers[\"X-Requested-With\"] ) {\r\n                        headers[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\r\n                    }\r\n\r\n                    // Need an extra try/catch for cross domain requests in Firefox 3\r\n                    try {\r\n                        for ( i in headers ) {\r\n                            xhr.setRequestHeader( i, headers[ i ] );\r\n                        }\r\n                    } catch( _ ) {}\r\n\r\n                    // Do send the request\r\n                    // This may raise an exception which is actually\r\n                    // handled in jQuery.ajax (so no try/catch here)\r\n                    xhr.send( ( s.hasContent && s.data ) || null );\r\n\r\n                    // Listener\r\n                    callback = function( _, isAbort ) {\r\n\r\n                        var status,\r\n                            statusText,\r\n                            responseHeaders,\r\n                            responses,\r\n                            xml;\r\n\r\n                        // Firefox throws exceptions when accessing properties\r\n                        // of an xhr when a network error occurred\r\n                        // http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)\r\n                        try {\r\n\r\n                            // Was never called and is aborted or complete\r\n                            if ( callback && ( isAbort || xhr.readyState === 4 ) ) {\r\n\r\n                                // Only called once\r\n                                callback = undefined;\r\n\r\n                                // Do not keep as active anymore\r\n                                if ( handle ) {\r\n                                    xhr.onreadystatechange = jQuery.noop;\r\n                                    if ( xhrOnUnloadAbort ) {\r\n                                        delete xhrCallbacks[ handle ];\r\n                                    }\r\n                                }\r\n\r\n                                // If it\'s an abort\r\n                                if ( isAbort ) {\r\n                                    // Abort it manually if needed\r\n                                    if ( xhr.readyState !== 4 ) {\r\n                                        xhr.abort();\r\n                                    }\r\n                                } else {\r\n                                    status = xhr.status;\r\n                                    responseHeaders = xhr.getAllResponseHeaders();\r\n                                    responses = {};\r\n                                    xml = xhr.responseXML;\r\n\r\n                                    // Construct response list\r\n                                    if ( xml && xml.documentElement /* #4958 */ ) {\r\n                                        responses.xml = xml;\r\n                                    }\r\n\r\n                                    // When requesting binary data, IE6-9 will throw an exception\r\n                                    // on any attempt to access responseText (#11426)\r\n                                    try {\r\n                                        responses.text = xhr.responseText;\r\n                                    } catch( e ) {\r\n                                    }\r\n\r\n                                    // Firefox throws an exception when accessing\r\n                                    // statusText for faulty cross-domain requests\r\n                                    try {\r\n                                        statusText = xhr.statusText;\r\n                                    } catch( e ) {\r\n                                        // We normalize with Webkit giving an empty statusText\r\n                                        statusText = \"\";\r\n                                    }\r\n\r\n                                    // Filter status for non standard behaviors\r\n\r\n                                    // If the request is local and we have data: assume a success\r\n                                    // (success with no data won\'t get notified, that\'s the best we\r\n                                    // can do given current implementations)\r\n                                    if ( !status && s.isLocal && !s.crossDomain ) {\r\n                                        status = responses.text ? 200 : 404;\r\n                                    // IE - #1450: sometimes returns 1223 when it should be 204\r\n                                    } else if ( status === 1223 ) {\r\n                                        status = 204;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } catch( firefoxAccessException ) {\r\n                            if ( !isAbort ) {\r\n                                complete( -1, firefoxAccessException );\r\n                            }\r\n                        }\r\n\r\n                        // Call complete if needed\r\n                        if ( responses ) {\r\n                            complete( status, statusText, responses, responseHeaders );\r\n                        }\r\n                    };\r\n\r\n                    if ( !s.async ) {\r\n                        // if we\'re in sync mode we fire the callback\r\n                        callback();\r\n                    } else if ( xhr.readyState === 4 ) {\r\n                        // (IE6 & IE7) if it\'s in cache and has been\r\n                        // retrieved directly we need to fire the callback\r\n                        setTimeout( callback, 0 );\r\n                    } else {\r\n                        handle = ++xhrId;\r\n                        if ( xhrOnUnloadAbort ) {\r\n                            // Create the active xhrs callbacks list if needed\r\n                            // and attach the unload handler\r\n                            if ( !xhrCallbacks ) {\r\n                                xhrCallbacks = {};\r\n                                jQuery( window ).unload( xhrOnUnloadAbort );\r\n                            }\r\n                            // Add to list of active xhrs callbacks\r\n                            xhrCallbacks[ handle ] = callback;\r\n                        }\r\n                        xhr.onreadystatechange = callback;\r\n                    }\r\n                },\r\n\r\n                abort: function() {\r\n                    if ( callback ) {\r\n                        callback(0,1);\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nvar fxNow, timerId,\r\n    rfxtypes = /^(?:toggle|show|hide)$/,\r\n    rfxnum = new RegExp( \"^(?:([-+])=|)(\" + core_pnum + \")([a-z%]*)$\", \"i\" ),\r\n    rrun = /queueHooks$/,\r\n    animationPrefilters = [ defaultPrefilter ],\r\n    tweeners = {\r\n        \"*\": [function( prop, value ) {\r\n            var end, unit,\r\n                tween = this.createTween( prop, value ),\r\n                parts = rfxnum.exec( value ),\r\n                target = tween.cur(),\r\n                start = +target || 0,\r\n                scale = 1,\r\n                maxIterations = 20;\r\n\r\n            if ( parts ) {\r\n                end = +parts[2];\r\n                unit = parts[3] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\r\n\r\n                // We need to compute starting value\r\n                if ( unit !== \"px\" && start ) {\r\n                    // Iteratively approximate from a nonzero starting point\r\n                    // Prefer the current property, because this process will be trivial if it uses the same units\r\n                    // Fallback to end or a simple constant\r\n                    start = jQuery.css( tween.elem, prop, true ) || end || 1;\r\n\r\n                    do {\r\n                        // If previous iteration zeroed out, double until we get *something*\r\n                        // Use a string for doubling factor so we don\'t accidentally see scale as unchanged below\r\n                        scale = scale || \".5\";\r\n\r\n                        // Adjust and apply\r\n                        start = start / scale;\r\n                        jQuery.style( tween.elem, prop, start + unit );\r\n\r\n                    // Update scale, tolerating zero or NaN from tween.cur()\r\n                    // And breaking the loop if scale is unchanged or perfect, or if we\'ve just had enough\r\n                    } while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\r\n                }\r\n\r\n                tween.unit = unit;\r\n                tween.start = start;\r\n                // If a +=/-= token was provided, we\'re doing a relative animation\r\n                tween.end = parts[1] ? start + ( parts[1] + 1 ) * end : end;\r\n            }\r\n            return tween;\r\n        }]\r\n    };\r\n\r\n// Animations created synchronously will run synchronously\r\nfunction createFxNow() {\r\n    setTimeout(function() {\r\n        fxNow = undefined;\r\n    }, 0 );\r\n    return ( fxNow = jQuery.now() );\r\n}\r\n\r\nfunction createTweens( animation, props ) {\r\n    jQuery.each( props, function( prop, value ) {\r\n        var collection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\r\n            index = 0,\r\n            length = collection.length;\r\n        for ( ; index < length; index++ ) {\r\n            if ( collection[ index ].call( animation, prop, value ) ) {\r\n\r\n                // we\'re done with this property\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction Animation( elem, properties, options ) {\r\n    var result,\r\n        index = 0,\r\n        tweenerIndex = 0,\r\n        length = animationPrefilters.length,\r\n        deferred = jQuery.Deferred().always( function() {\r\n            // don\'t match elem in the :animated selector\r\n            delete tick.elem;\r\n        }),\r\n        tick = function() {\r\n            var currentTime = fxNow || createFxNow(),\r\n                remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\r\n                // archaic crash bug won\'t allow us to use 1 - ( 0.5 || 0 ) (#12497)\r\n                temp = remaining / animation.duration || 0,\r\n                percent = 1 - temp,\r\n                index = 0,\r\n                length = animation.tweens.length;\r\n\r\n            for ( ; index < length ; index++ ) {\r\n                animation.tweens[ index ].run( percent );\r\n            }\r\n\r\n            deferred.notifyWith( elem, [ animation, percent, remaining ]);\r\n\r\n            if ( percent < 1 && length ) {\r\n                return remaining;\r\n            } else {\r\n                deferred.resolveWith( elem, [ animation ] );\r\n                return false;\r\n            }\r\n        },\r\n        animation = deferred.promise({\r\n            elem: elem,\r\n            props: jQuery.extend( {}, properties ),\r\n            opts: jQuery.extend( true, { specialEasing: {} }, options ),\r\n            originalProperties: properties,\r\n            originalOptions: options,\r\n            startTime: fxNow || createFxNow(),\r\n            duration: options.duration,\r\n            tweens: [],\r\n            createTween: function( prop, end, easing ) {\r\n                var tween = jQuery.Tween( elem, animation.opts, prop, end,\r\n                        animation.opts.specialEasing[ prop ] || animation.opts.easing );\r\n                animation.tweens.push( tween );\r\n                return tween;\r\n            },\r\n            stop: function( gotoEnd ) {\r\n                var index = 0,\r\n                    // if we are going to the end, we want to run all the tweens\r\n                    // otherwise we skip this part\r\n                    length = gotoEnd ? animation.tweens.length : 0;\r\n\r\n                for ( ; index < length ; index++ ) {\r\n                    animation.tweens[ index ].run( 1 );\r\n                }\r\n\r\n                // resolve when we played the last frame\r\n                // otherwise, reject\r\n                if ( gotoEnd ) {\r\n                    deferred.resolveWith( elem, [ animation, gotoEnd ] );\r\n                } else {\r\n                    deferred.rejectWith( elem, [ animation, gotoEnd ] );\r\n                }\r\n                return this;\r\n            }\r\n        }),\r\n        props = animation.props;\r\n\r\n    propFilter( props, animation.opts.specialEasing );\r\n\r\n    for ( ; index < length ; index++ ) {\r\n        result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\r\n        if ( result ) {\r\n            return result;\r\n        }\r\n    }\r\n\r\n    createTweens( animation, props );\r\n\r\n    if ( jQuery.isFunction( animation.opts.start ) ) {\r\n        animation.opts.start.call( elem, animation );\r\n    }\r\n\r\n    jQuery.fx.timer(\r\n        jQuery.extend( tick, {\r\n            anim: animation,\r\n            queue: animation.opts.queue,\r\n            elem: elem\r\n        })\r\n    );\r\n\r\n    // attach callbacks from options\r\n    return animation.progress( animation.opts.progress )\r\n        .done( animation.opts.done, animation.opts.complete )\r\n        .fail( animation.opts.fail )\r\n        .always( animation.opts.always );\r\n}\r\n\r\nfunction propFilter( props, specialEasing ) {\r\n    var index, name, easing, value, hooks;\r\n\r\n    // camelCase, specialEasing and expand cssHook pass\r\n    for ( index in props ) {\r\n        name = jQuery.camelCase( index );\r\n        easing = specialEasing[ name ];\r\n        value = props[ index ];\r\n        if ( jQuery.isArray( value ) ) {\r\n            easing = value[ 1 ];\r\n            value = props[ index ] = value[ 0 ];\r\n        }\r\n\r\n        if ( index !== name ) {\r\n            props[ name ] = value;\r\n            delete props[ index ];\r\n        }\r\n\r\n        hooks = jQuery.cssHooks[ name ];\r\n        if ( hooks && \"expand\" in hooks ) {\r\n            value = hooks.expand( value );\r\n            delete props[ name ];\r\n\r\n            // not quite $.extend, this wont overwrite keys already present.\r\n            // also - reusing \'index\' from above because we have the correct \"name\"\r\n            for ( index in value ) {\r\n                if ( !( index in props ) ) {\r\n                    props[ index ] = value[ index ];\r\n                    specialEasing[ index ] = easing;\r\n                }\r\n            }\r\n        } else {\r\n            specialEasing[ name ] = easing;\r\n        }\r\n    }\r\n}\r\n\r\njQuery.Animation = jQuery.extend( Animation, {\r\n\r\n    tweener: function( props, callback ) {\r\n        if ( jQuery.isFunction( props ) ) {\r\n            callback = props;\r\n            props = [ \"*\" ];\r\n        } else {\r\n            props = props.split(\" \");\r\n        }\r\n\r\n        var prop,\r\n            index = 0,\r\n            length = props.length;\r\n\r\n        for ( ; index < length ; index++ ) {\r\n            prop = props[ index ];\r\n            tweeners[ prop ] = tweeners[ prop ] || [];\r\n            tweeners[ prop ].unshift( callback );\r\n        }\r\n    },\r\n\r\n    prefilter: function( callback, prepend ) {\r\n        if ( prepend ) {\r\n            animationPrefilters.unshift( callback );\r\n        } else {\r\n            animationPrefilters.push( callback );\r\n        }\r\n    }\r\n});\r\n\r\nfunction defaultPrefilter( elem, props, opts ) {\r\n    var index, prop, value, length, dataShow, toggle, tween, hooks, oldfire,\r\n        anim = this,\r\n        style = elem.style,\r\n        orig = {},\r\n        handled = [],\r\n        hidden = elem.nodeType && isHidden( elem );\r\n\r\n    // handle queue: false promises\r\n    if ( !opts.queue ) {\r\n        hooks = jQuery._queueHooks( elem, \"fx\" );\r\n        if ( hooks.unqueued == null ) {\r\n            hooks.unqueued = 0;\r\n            oldfire = hooks.empty.fire;\r\n            hooks.empty.fire = function() {\r\n                if ( !hooks.unqueued ) {\r\n                    oldfire();\r\n                }\r\n            };\r\n        }\r\n        hooks.unqueued++;\r\n\r\n        anim.always(function() {\r\n            // doing this makes sure that the complete handler will be called\r\n            // before this completes\r\n            anim.always(function() {\r\n                hooks.unqueued--;\r\n                if ( !jQuery.queue( elem, \"fx\" ).length ) {\r\n                    hooks.empty.fire();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // height/width overflow pass\r\n    if ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\r\n        // Make sure that nothing sneaks out\r\n        // Record all 3 overflow attributes because IE does not\r\n        // change the overflow attribute when overflowX and\r\n        // overflowY are set to the same value\r\n        opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\r\n\r\n        // Set display property to inline-block for height/width\r\n        // animations on inline elements that are having width/height animated\r\n        if ( jQuery.css( elem, \"display\" ) === \"inline\" &&\r\n                jQuery.css( elem, \"float\" ) === \"none\" ) {\r\n\r\n            // inline-level elements accept inline-block;\r\n            // block-level elements need to be inline with layout\r\n            if ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( elem.nodeName ) === \"inline\" ) {\r\n                style.display = \"inline-block\";\r\n\r\n            } else {\r\n                style.zoom = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    if ( opts.overflow ) {\r\n        style.overflow = \"hidden\";\r\n        if ( !jQuery.support.shrinkWrapBlocks ) {\r\n            anim.done(function() {\r\n                style.overflow = opts.overflow[ 0 ];\r\n                style.overflowX = opts.overflow[ 1 ];\r\n                style.overflowY = opts.overflow[ 2 ];\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // show/hide pass\r\n    for ( index in props ) {\r\n        value = props[ index ];\r\n        if ( rfxtypes.exec( value ) ) {\r\n            delete props[ index ];\r\n            toggle = toggle || value === \"toggle\";\r\n            if ( value === ( hidden ? \"hide\" : \"show\" ) ) {\r\n                continue;\r\n            }\r\n            handled.push( index );\r\n        }\r\n    }\r\n\r\n    length = handled.length;\r\n    if ( length ) {\r\n        dataShow = jQuery._data( elem, \"fxshow\" ) || jQuery._data( elem, \"fxshow\", {} );\r\n        if ( \"hidden\" in dataShow ) {\r\n            hidden = dataShow.hidden;\r\n        }\r\n\r\n        // store state if its toggle - enables .stop().toggle() to \"reverse\"\r\n        if ( toggle ) {\r\n            dataShow.hidden = !hidden;\r\n        }\r\n        if ( hidden ) {\r\n            jQuery( elem ).show();\r\n        } else {\r\n            anim.done(function() {\r\n                jQuery( elem ).hide();\r\n            });\r\n        }\r\n        anim.done(function() {\r\n            var prop;\r\n            jQuery.removeData( elem, \"fxshow\", true );\r\n            for ( prop in orig ) {\r\n                jQuery.style( elem, prop, orig[ prop ] );\r\n            }\r\n        });\r\n        for ( index = 0 ; index < length ; index++ ) {\r\n            prop = handled[ index ];\r\n            tween = anim.createTween( prop, hidden ? dataShow[ prop ] : 0 );\r\n            orig[ prop ] = dataShow[ prop ] || jQuery.style( elem, prop );\r\n\r\n            if ( !( prop in dataShow ) ) {\r\n                dataShow[ prop ] = tween.start;\r\n                if ( hidden ) {\r\n                    tween.end = tween.start;\r\n                    tween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction Tween( elem, options, prop, end, easing ) {\r\n    return new Tween.prototype.init( elem, options, prop, end, easing );\r\n}\r\njQuery.Tween = Tween;\r\n\r\nTween.prototype = {\r\n    constructor: Tween,\r\n    init: function( elem, options, prop, end, easing, unit ) {\r\n        this.elem = elem;\r\n        this.prop = prop;\r\n        this.easing = easing || \"swing\";\r\n        this.options = options;\r\n        this.start = this.now = this.cur();\r\n        this.end = end;\r\n        this.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\r\n    },\r\n    cur: function() {\r\n        var hooks = Tween.propHooks[ this.prop ];\r\n\r\n        return hooks && hooks.get ?\r\n            hooks.get( this ) :\r\n            Tween.propHooks._default.get( this );\r\n    },\r\n    run: function( percent ) {\r\n        var eased,\r\n            hooks = Tween.propHooks[ this.prop ];\r\n\r\n        if ( this.options.duration ) {\r\n            this.pos = eased = jQuery.easing[ this.easing ](\r\n                percent, this.options.duration * percent, 0, 1, this.options.duration\r\n            );\r\n        } else {\r\n            this.pos = eased = percent;\r\n        }\r\n        this.now = ( this.end - this.start ) * eased + this.start;\r\n\r\n        if ( this.options.step ) {\r\n            this.options.step.call( this.elem, this.now, this );\r\n        }\r\n\r\n        if ( hooks && hooks.set ) {\r\n            hooks.set( this );\r\n        } else {\r\n            Tween.propHooks._default.set( this );\r\n        }\r\n        return this;\r\n    }\r\n};\r\n\r\nTween.prototype.init.prototype = Tween.prototype;\r\n\r\nTween.propHooks = {\r\n    _default: {\r\n        get: function( tween ) {\r\n            var result;\r\n\r\n            if ( tween.elem[ tween.prop ] != null &&\r\n                (!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\r\n                return tween.elem[ tween.prop ];\r\n            }\r\n\r\n            // passing any value as a 4th parameter to .css will automatically\r\n            // attempt a parseFloat and fallback to a string if the parse fails\r\n            // so, simple values such as \"10px\" are parsed to Float.\r\n            // complex values such as \"rotate(1rad)\" are returned as is.\r\n            result = jQuery.css( tween.elem, tween.prop, false, \"\" );\r\n            // Empty strings, null, undefined and \"auto\" are converted to 0.\r\n            return !result || result === \"auto\" ? 0 : result;\r\n        },\r\n        set: function( tween ) {\r\n            // use step hook for back compat - use cssHook if its there - use .style if its\r\n            // available and use plain properties where available\r\n            if ( jQuery.fx.step[ tween.prop ] ) {\r\n                jQuery.fx.step[ tween.prop ]( tween );\r\n            } else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\r\n                jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\r\n            } else {\r\n                tween.elem[ tween.prop ] = tween.now;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n// Remove in 2.0 - this supports IE8\'s panic based approach\r\n// to setting things on disconnected nodes\r\n\r\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\r\n    set: function( tween ) {\r\n        if ( tween.elem.nodeType && tween.elem.parentNode ) {\r\n            tween.elem[ tween.prop ] = tween.now;\r\n        }\r\n    }\r\n};\r\n\r\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\r\n    var cssFn = jQuery.fn[ name ];\r\n    jQuery.fn[ name ] = function( speed, easing, callback ) {\r\n        return speed == null || typeof speed === \"boolean\" ||\r\n            // special check for .toggle( handler, handler, ... )\r\n            ( !i && jQuery.isFunction( speed ) && jQuery.isFunction( easing ) ) ?\r\n            cssFn.apply( this, arguments ) :\r\n            this.animate( genFx( name, true ), speed, easing, callback );\r\n    };\r\n});\r\n\r\njQuery.fn.extend({\r\n    fadeTo: function( speed, to, easing, callback ) {\r\n\r\n        // show any hidden elements after setting opacity to 0\r\n        return this.filter( isHidden ).css( \"opacity\", 0 ).show()\r\n\r\n            // animate to the value specified\r\n            .end().animate({ opacity: to }, speed, easing, callback );\r\n    },\r\n    animate: function( prop, speed, easing, callback ) {\r\n        var empty = jQuery.isEmptyObject( prop ),\r\n            optall = jQuery.speed( speed, easing, callback ),\r\n            doAnimation = function() {\r\n                // Operate on a copy of prop so per-property easing won\'t be lost\r\n                var anim = Animation( this, jQuery.extend( {}, prop ), optall );\r\n\r\n                // Empty animations resolve immediately\r\n                if ( empty ) {\r\n                    anim.stop( true );\r\n                }\r\n            };\r\n\r\n        return empty || optall.queue === false ?\r\n            this.each( doAnimation ) :\r\n            this.queue( optall.queue, doAnimation );\r\n    },\r\n    stop: function( type, clearQueue, gotoEnd ) {\r\n        var stopQueue = function( hooks ) {\r\n            var stop = hooks.stop;\r\n            delete hooks.stop;\r\n            stop( gotoEnd );\r\n        };\r\n\r\n        if ( typeof type !== \"string\" ) {\r\n            gotoEnd = clearQueue;\r\n            clearQueue = type;\r\n            type = undefined;\r\n        }\r\n        if ( clearQueue && type !== false ) {\r\n            this.queue( type || \"fx\", [] );\r\n        }\r\n\r\n        return this.each(function() {\r\n            var dequeue = true,\r\n                index = type != null && type + \"queueHooks\",\r\n                timers = jQuery.timers,\r\n                data = jQuery._data( this );\r\n\r\n            if ( index ) {\r\n                if ( data[ index ] && data[ index ].stop ) {\r\n                    stopQueue( data[ index ] );\r\n                }\r\n            } else {\r\n                for ( index in data ) {\r\n                    if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\r\n                        stopQueue( data[ index ] );\r\n                    }\r\n                }\r\n            }\r\n\r\n            for ( index = timers.length; index--; ) {\r\n                if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\r\n                    timers[ index ].anim.stop( gotoEnd );\r\n                    dequeue = false;\r\n                    timers.splice( index, 1 );\r\n                }\r\n            }\r\n\r\n            // start the next in the queue if the last step wasn\'t forced\r\n            // timers currently will call their complete callbacks, which will dequeue\r\n            // but only if they were gotoEnd\r\n            if ( dequeue || !gotoEnd ) {\r\n                jQuery.dequeue( this, type );\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\n// Generate parameters to create a standard animation\r\nfunction genFx( type, includeWidth ) {\r\n    var which,\r\n        attrs = { height: type },\r\n        i = 0;\r\n\r\n    // if we include width, step value is 1 to do all cssExpand values,\r\n    // if we don\'t include width, step value is 2 to skip over Left and Right\r\n    includeWidth = includeWidth? 1 : 0;\r\n    for( ; i < 4 ; i += 2 - includeWidth ) {\r\n        which = cssExpand[ i ];\r\n        attrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\r\n    }\r\n\r\n    if ( includeWidth ) {\r\n        attrs.opacity = attrs.width = type;\r\n    }\r\n\r\n    return attrs;\r\n}\r\n\r\n// Generate shortcuts for custom animations\r\njQuery.each({\r\n    slideDown: genFx(\"show\"),\r\n    slideUp: genFx(\"hide\"),\r\n    slideToggle: genFx(\"toggle\"),\r\n    fadeIn: { opacity: \"show\" },\r\n    fadeOut: { opacity: \"hide\" },\r\n    fadeToggle: { opacity: \"toggle\" }\r\n}, function( name, props ) {\r\n    jQuery.fn[ name ] = function( speed, easing, callback ) {\r\n        return this.animate( props, speed, easing, callback );\r\n    };\r\n});\r\n\r\njQuery.speed = function( speed, easing, fn ) {\r\n    var opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\r\n        complete: fn || !fn && easing ||\r\n            jQuery.isFunction( speed ) && speed,\r\n        duration: speed,\r\n        easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\r\n    };\r\n\r\n    opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\r\n        opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\r\n\r\n    // normalize opt.queue - true/undefined/null -> \"fx\"\r\n    if ( opt.queue == null || opt.queue === true ) {\r\n        opt.queue = \"fx\";\r\n    }\r\n\r\n    // Queueing\r\n    opt.old = opt.complete;\r\n\r\n    opt.complete = function() {\r\n        if ( jQuery.isFunction( opt.old ) ) {\r\n            opt.old.call( this );\r\n        }\r\n\r\n        if ( opt.queue ) {\r\n            jQuery.dequeue( this, opt.queue );\r\n        }\r\n    };\r\n\r\n    return opt;\r\n};\r\n\r\njQuery.easing = {\r\n    linear: function( p ) {\r\n        return p;\r\n    },\r\n    swing: function( p ) {\r\n        return 0.5 - Math.cos( p*Math.PI ) / 2;\r\n    }\r\n};\r\n\r\njQuery.timers = [];\r\njQuery.fx = Tween.prototype.init;\r\njQuery.fx.tick = function() {\r\n    var timer,\r\n        timers = jQuery.timers,\r\n        i = 0;\r\n\r\n    fxNow = jQuery.now();\r\n\r\n    for ( ; i < timers.length; i++ ) {\r\n        timer = timers[ i ];\r\n        // Checks the timer has not already been removed\r\n        if ( !timer() && timers[ i ] === timer ) {\r\n            timers.splice( i--, 1 );\r\n        }\r\n    }\r\n\r\n    if ( !timers.length ) {\r\n        jQuery.fx.stop();\r\n    }\r\n    fxNow = undefined;\r\n};\r\n\r\njQuery.fx.timer = function( timer ) {\r\n    if ( timer() && jQuery.timers.push( timer ) && !timerId ) {\r\n        timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\r\n    }\r\n};\r\n\r\njQuery.fx.interval = 13;\r\n\r\njQuery.fx.stop = function() {\r\n    clearInterval( timerId );\r\n    timerId = null;\r\n};\r\n\r\njQuery.fx.speeds = {\r\n    slow: 600,\r\n    fast: 200,\r\n    // Default speed\r\n    _default: 400\r\n};\r\n\r\n// Back Compat <1.8 extension point\r\njQuery.fx.step = {};\r\n\r\nif ( jQuery.expr && jQuery.expr.filters ) {\r\n    jQuery.expr.filters.animated = function( elem ) {\r\n        return jQuery.grep(jQuery.timers, function( fn ) {\r\n            return elem === fn.elem;\r\n        }).length;\r\n    };\r\n}\r\nvar rroot = /^(?:body|html)$/i;\r\n\r\njQuery.fn.offset = function( options ) {\r\n    if ( arguments.length ) {\r\n        return options === undefined ?\r\n            this :\r\n            this.each(function( i ) {\r\n                jQuery.offset.setOffset( this, options, i );\r\n            });\r\n    }\r\n\r\n    var docElem, body, win, clientTop, clientLeft, scrollTop, scrollLeft,\r\n        box = { top: 0, left: 0 },\r\n        elem = this[ 0 ],\r\n        doc = elem && elem.ownerDocument;\r\n\r\n    if ( !doc ) {\r\n        return;\r\n    }\r\n\r\n    if ( (body = doc.body) === elem ) {\r\n        return jQuery.offset.bodyOffset( elem );\r\n    }\r\n\r\n    docElem = doc.documentElement;\r\n\r\n    // Make sure it\'s not a disconnected DOM node\r\n    if ( !jQuery.contains( docElem, elem ) ) {\r\n        return box;\r\n    }\r\n\r\n    // If we don\'t have gBCR, just use 0,0 rather than error\r\n    // BlackBerry 5, iOS 3 (original iPhone)\r\n    if ( typeof elem.getBoundingClientRect !== \"undefined\" ) {\r\n        box = elem.getBoundingClientRect();\r\n    }\r\n    win = getWindow( doc );\r\n    clientTop  = docElem.clientTop  || body.clientTop  || 0;\r\n    clientLeft = docElem.clientLeft || body.clientLeft || 0;\r\n    scrollTop  = win.pageYOffset || docElem.scrollTop;\r\n    scrollLeft = win.pageXOffset || docElem.scrollLeft;\r\n    return {\r\n        top: box.top  + scrollTop  - clientTop,\r\n        left: box.left + scrollLeft - clientLeft\r\n    };\r\n};\r\n\r\njQuery.offset = {\r\n\r\n    bodyOffset: function( body ) {\r\n        var top = body.offsetTop,\r\n            left = body.offsetLeft;\r\n\r\n        if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {\r\n            top  += parseFloat( jQuery.css(body, \"marginTop\") ) || 0;\r\n            left += parseFloat( jQuery.css(body, \"marginLeft\") ) || 0;\r\n        }\r\n\r\n        return { top: top, left: left };\r\n    },\r\n\r\n    setOffset: function( elem, options, i ) {\r\n        var position = jQuery.css( elem, \"position\" );\r\n\r\n        // set position first, in-case top/left are set even on static elem\r\n        if ( position === \"static\" ) {\r\n            elem.style.position = \"relative\";\r\n        }\r\n\r\n        var curElem = jQuery( elem ),\r\n            curOffset = curElem.offset(),\r\n            curCSSTop = jQuery.css( elem, \"top\" ),\r\n            curCSSLeft = jQuery.css( elem, \"left\" ),\r\n            calculatePosition = ( position === \"absolute\" || position === \"fixed\" ) && jQuery.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n            props = {}, curPosition = {}, curTop, curLeft;\r\n\r\n        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n        if ( calculatePosition ) {\r\n            curPosition = curElem.position();\r\n            curTop = curPosition.top;\r\n            curLeft = curPosition.left;\r\n        } else {\r\n            curTop = parseFloat( curCSSTop ) || 0;\r\n            curLeft = parseFloat( curCSSLeft ) || 0;\r\n        }\r\n\r\n        if ( jQuery.isFunction( options ) ) {\r\n            options = options.call( elem, i, curOffset );\r\n        }\r\n\r\n        if ( options.top != null ) {\r\n            props.top = ( options.top - curOffset.top ) + curTop;\r\n        }\r\n        if ( options.left != null ) {\r\n            props.left = ( options.left - curOffset.left ) + curLeft;\r\n        }\r\n\r\n        if ( \"using\" in options ) {\r\n            options.using.call( elem, props );\r\n        } else {\r\n            curElem.css( props );\r\n        }\r\n    }\r\n};\r\n\r\n\r\njQuery.fn.extend({\r\n\r\n    position: function() {\r\n        if ( !this[0] ) {\r\n            return;\r\n        }\r\n\r\n        var elem = this[0],\r\n\r\n        // Get *real* offsetParent\r\n        offsetParent = this.offsetParent(),\r\n\r\n        // Get correct offsets\r\n        offset       = this.offset(),\r\n        parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();\r\n\r\n        // Subtract element margins\r\n        // note: when an element has margin: auto the offsetLeft and marginLeft\r\n        // are the same in Safari causing offset.left to incorrectly be 0\r\n        offset.top  -= parseFloat( jQuery.css(elem, \"marginTop\") ) || 0;\r\n        offset.left -= parseFloat( jQuery.css(elem, \"marginLeft\") ) || 0;\r\n\r\n        // Add offsetParent borders\r\n        parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], \"borderTopWidth\") ) || 0;\r\n        parentOffset.left += parseFloat( jQuery.css(offsetParent[0], \"borderLeftWidth\") ) || 0;\r\n\r\n        // Subtract the two offsets\r\n        return {\r\n            top:  offset.top  - parentOffset.top,\r\n            left: offset.left - parentOffset.left\r\n        };\r\n    },\r\n\r\n    offsetParent: function() {\r\n        return this.map(function() {\r\n            var offsetParent = this.offsetParent || document.body;\r\n            while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, \"position\") === \"static\") ) {\r\n                offsetParent = offsetParent.offsetParent;\r\n            }\r\n            return offsetParent || document.body;\r\n        });\r\n    }\r\n});\r\n\r\n\r\n// Create scrollLeft and scrollTop methods\r\njQuery.each( {scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\"}, function( method, prop ) {\r\n    var top = /Y/.test( prop );\r\n\r\n    jQuery.fn[ method ] = function( val ) {\r\n        return jQuery.access( this, function( elem, method, val ) {\r\n            var win = getWindow( elem );\r\n\r\n            if ( val === undefined ) {\r\n                return win ? (prop in win) ? win[ prop ] :\r\n                    win.document.documentElement[ method ] :\r\n                    elem[ method ];\r\n            }\r\n\r\n            if ( win ) {\r\n                win.scrollTo(\r\n                    !top ? val : jQuery( win ).scrollLeft(),\r\n                     top ? val : jQuery( win ).scrollTop()\r\n                );\r\n\r\n            } else {\r\n                elem[ method ] = val;\r\n            }\r\n        }, method, val, arguments.length, null );\r\n    };\r\n});\r\n\r\nfunction getWindow( elem ) {\r\n    return jQuery.isWindow( elem ) ?\r\n        elem :\r\n        elem.nodeType === 9 ?\r\n            elem.defaultView || elem.parentWindow :\r\n            false;\r\n}\r\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\r\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\r\n    jQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\r\n        // margin is only for outerHeight, outerWidth\r\n        jQuery.fn[ funcName ] = function( margin, value ) {\r\n            var chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\r\n                extra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\r\n\r\n            return jQuery.access( this, function( elem, type, value ) {\r\n                var doc;\r\n\r\n                if ( jQuery.isWindow( elem ) ) {\r\n                    // As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\r\n                    // isn\'t a whole lot we can do. See pull request at this URL for discussion:\r\n                    // https://github.com/jquery/jquery/pull/764\r\n                    return elem.document.documentElement[ \"client\" + name ];\r\n                }\r\n\r\n                // Get document width or height\r\n                if ( elem.nodeType === 9 ) {\r\n                    doc = elem.documentElement;\r\n\r\n                    // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest\r\n                    // unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.\r\n                    return Math.max(\r\n                        elem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\r\n                        elem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\r\n                        doc[ \"client\" + name ]\r\n                    );\r\n                }\r\n\r\n                return value === undefined ?\r\n                    // Get width or height on the element, requesting but not forcing parseFloat\r\n                    jQuery.css( elem, type, value, extra ) :\r\n\r\n                    // Set width or height on the element\r\n                    jQuery.style( elem, type, value, extra );\r\n            }, type, chainable ? margin : undefined, chainable, null );\r\n        };\r\n    });\r\n});\r\n// Expose jQuery to the global object\r\nwindow.jQuery = window.$ = jQuery;\r\n\r\n// Expose jQuery as an AMD module, but only for AMD loaders that\r\n// understand the issues with loading multiple versions of jQuery\r\n// in a page that all might call define(). The loader will indicate\r\n// they have special allowances for multiple jQuery versions by\r\n// specifying define.amd.jQuery = true. Register as a named module,\r\n// since jQuery can be concatenated with other files that may use define,\r\n// but not use a proper concatenation script that understands anonymous\r\n// AMD modules. A named AMD is safest and most robust way to register.\r\n// Lowercase jquery is used because AMD module names are derived from\r\n// file names, and jQuery is normally delivered in a lowercase file name.\r\n// Do this after creating the global so that if an AMD module wants to call\r\n// noConflict to hide this version of jQuery, it will work.\r\nif ( typeof define === \"function\" && define.amd && define.amd.jQuery ) {\r\n    define( \"jquery\", [], function () { return jQuery; } );\r\n}\r\n\r\n})( window );\n//# sourceURL=/E:/Javascript projects/Heartbeat/App/Heartbeat/www/src/js/libs/jquery.js");

eval("//     Underscore.js 1.6.0\r\n//     http://underscorejs.org\r\n//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n//     Underscore may be freely distributed under the MIT license.\r\n\r\n(function() {\r\n\r\n  // Baseline setup\r\n  // --------------\r\n\r\n  // Establish the root object, `window` in the browser, or `exports` on the server.\r\n  var root = this;\r\n\r\n  // Save the previous value of the `_` variable.\r\n  var previousUnderscore = root._;\r\n\r\n  // Establish the object that gets returned to break out of a loop iteration.\r\n  var breaker = {};\r\n\r\n  // Save bytes in the minified (but not gzipped) version:\r\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\r\n\r\n  // Create quick reference variables for speed access to core prototypes.\r\n  var\r\n    push             = ArrayProto.push,\r\n    slice            = ArrayProto.slice,\r\n    concat           = ArrayProto.concat,\r\n    toString         = ObjProto.toString,\r\n    hasOwnProperty   = ObjProto.hasOwnProperty;\r\n\r\n  // All **ECMAScript 5** native function implementations that we hope to use\r\n  // are declared here.\r\n  var\r\n    nativeForEach      = ArrayProto.forEach,\r\n    nativeMap          = ArrayProto.map,\r\n    nativeReduce       = ArrayProto.reduce,\r\n    nativeReduceRight  = ArrayProto.reduceRight,\r\n    nativeFilter       = ArrayProto.filter,\r\n    nativeEvery        = ArrayProto.every,\r\n    nativeSome         = ArrayProto.some,\r\n    nativeIndexOf      = ArrayProto.indexOf,\r\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\r\n    nativeIsArray      = Array.isArray,\r\n    nativeKeys         = Object.keys,\r\n    nativeBind         = FuncProto.bind;\r\n\r\n  // Create a safe reference to the Underscore object for use below.\r\n  var _ = function(obj) {\r\n    if (obj instanceof _) return obj;\r\n    if (!(this instanceof _)) return new _(obj);\r\n    this._wrapped = obj;\r\n  };\r\n\r\n  // Export the Underscore object for **Node.js**, with\r\n  // backwards-compatibility for the old `require()` API. If we\'re in\r\n  // the browser, add `_` as a global object via a string identifier,\r\n  // for Closure Compiler \"advanced\" mode.\r\n  if (typeof exports !== \'undefined\') {\r\n    if (typeof module !== \'undefined\' && module.exports) {\r\n      exports = module.exports = _;\r\n    }\r\n    exports._ = _;\r\n  } else {\r\n    root._ = _;\r\n  }\r\n\r\n  // Current version.\r\n  _.VERSION = \'1.6.0\';\r\n\r\n  // Collection Functions\r\n  // --------------------\r\n\r\n  // The cornerstone, an `each` implementation, aka `forEach`.\r\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\r\n  // Delegates to **ECMAScript 5**\'s native `forEach` if available.\r\n  var each = _.each = _.forEach = function(obj, iterator, context) {\r\n    if (obj == null) return obj;\r\n    if (nativeForEach && obj.forEach === nativeForEach) {\r\n      obj.forEach(iterator, context);\r\n    } else if (obj.length === +obj.length) {\r\n      for (var i = 0, length = obj.length; i < length; i++) {\r\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\r\n      }\r\n    } else {\r\n      var keys = _.keys(obj);\r\n      for (var i = 0, length = keys.length; i < length; i++) {\r\n        if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker) return;\r\n      }\r\n    }\r\n    return obj;\r\n  };\r\n\r\n  // Return the results of applying the iterator to each element.\r\n  // Delegates to **ECMAScript 5**\'s native `map` if available.\r\n  _.map = _.collect = function(obj, iterator, context) {\r\n    var results = [];\r\n    if (obj == null) return results;\r\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\r\n    each(obj, function(value, index, list) {\r\n      results.push(iterator.call(context, value, index, list));\r\n    });\r\n    return results;\r\n  };\r\n\r\n  var reduceError = \'Reduce of empty array with no initial value\';\r\n\r\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\r\n  // or `foldl`. Delegates to **ECMAScript 5**\'s native `reduce` if available.\r\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\r\n    var initial = arguments.length > 2;\r\n    if (obj == null) obj = [];\r\n    if (nativeReduce && obj.reduce === nativeReduce) {\r\n      if (context) iterator = _.bind(iterator, context);\r\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\r\n    }\r\n    each(obj, function(value, index, list) {\r\n      if (!initial) {\r\n        memo = value;\r\n        initial = true;\r\n      } else {\r\n        memo = iterator.call(context, memo, value, index, list);\r\n      }\r\n    });\r\n    if (!initial) throw new TypeError(reduceError);\r\n    return memo;\r\n  };\r\n\r\n  // The right-associative version of reduce, also known as `foldr`.\r\n  // Delegates to **ECMAScript 5**\'s native `reduceRight` if available.\r\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\r\n    var initial = arguments.length > 2;\r\n    if (obj == null) obj = [];\r\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\r\n      if (context) iterator = _.bind(iterator, context);\r\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\r\n    }\r\n    var length = obj.length;\r\n    if (length !== +length) {\r\n      var keys = _.keys(obj);\r\n      length = keys.length;\r\n    }\r\n    each(obj, function(value, index, list) {\r\n      index = keys ? keys[--length] : --length;\r\n      if (!initial) {\r\n        memo = obj[index];\r\n        initial = true;\r\n      } else {\r\n        memo = iterator.call(context, memo, obj[index], index, list);\r\n      }\r\n    });\r\n    if (!initial) throw new TypeError(reduceError);\r\n    return memo;\r\n  };\r\n\r\n  // Return the first value which passes a truth test. Aliased as `detect`.\r\n  _.find = _.detect = function(obj, predicate, context) {\r\n    var result;\r\n    any(obj, function(value, index, list) {\r\n      if (predicate.call(context, value, index, list)) {\r\n        result = value;\r\n        return true;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  // Return all the elements that pass a truth test.\r\n  // Delegates to **ECMAScript 5**\'s native `filter` if available.\r\n  // Aliased as `select`.\r\n  _.filter = _.select = function(obj, predicate, context) {\r\n    var results = [];\r\n    if (obj == null) return results;\r\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(predicate, context);\r\n    each(obj, function(value, index, list) {\r\n      if (predicate.call(context, value, index, list)) results.push(value);\r\n    });\r\n    return results;\r\n  };\r\n\r\n  // Return all the elements for which a truth test fails.\r\n  _.reject = function(obj, predicate, context) {\r\n    return _.filter(obj, function(value, index, list) {\r\n      return !predicate.call(context, value, index, list);\r\n    }, context);\r\n  };\r\n\r\n  // Determine whether all of the elements match a truth test.\r\n  // Delegates to **ECMAScript 5**\'s native `every` if available.\r\n  // Aliased as `all`.\r\n  _.every = _.all = function(obj, predicate, context) {\r\n    predicate || (predicate = _.identity);\r\n    var result = true;\r\n    if (obj == null) return result;\r\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(predicate, context);\r\n    each(obj, function(value, index, list) {\r\n      if (!(result = result && predicate.call(context, value, index, list))) return breaker;\r\n    });\r\n    return !!result;\r\n  };\r\n\r\n  // Determine if at least one element in the object matches a truth test.\r\n  // Delegates to **ECMAScript 5**\'s native `some` if available.\r\n  // Aliased as `any`.\r\n  var any = _.some = _.any = function(obj, predicate, context) {\r\n    predicate || (predicate = _.identity);\r\n    var result = false;\r\n    if (obj == null) return result;\r\n    if (nativeSome && obj.some === nativeSome) return obj.some(predicate, context);\r\n    each(obj, function(value, index, list) {\r\n      if (result || (result = predicate.call(context, value, index, list))) return breaker;\r\n    });\r\n    return !!result;\r\n  };\r\n\r\n  // Determine if the array or object contains a given value (using `===`).\r\n  // Aliased as `include`.\r\n  _.contains = _.include = function(obj, target) {\r\n    if (obj == null) return false;\r\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\r\n    return any(obj, function(value) {\r\n      return value === target;\r\n    });\r\n  };\r\n\r\n  // Invoke a method (with arguments) on every item in a collection.\r\n  _.invoke = function(obj, method) {\r\n    var args = slice.call(arguments, 2);\r\n    var isFunc = _.isFunction(method);\r\n    return _.map(obj, function(value) {\r\n      return (isFunc ? method : value[method]).apply(value, args);\r\n    });\r\n  };\r\n\r\n  // Convenience version of a common use case of `map`: fetching a property.\r\n  _.pluck = function(obj, key) {\r\n    return _.map(obj, _.property(key));\r\n  };\r\n\r\n  // Convenience version of a common use case of `filter`: selecting only objects\r\n  // containing specific `key:value` pairs.\r\n  _.where = function(obj, attrs) {\r\n    return _.filter(obj, _.matches(attrs));\r\n  };\r\n\r\n  // Convenience version of a common use case of `find`: getting the first object\r\n  // containing specific `key:value` pairs.\r\n  _.findWhere = function(obj, attrs) {\r\n    return _.find(obj, _.matches(attrs));\r\n  };\r\n\r\n  // Return the maximum element or (element-based computation).\r\n  // Can\'t optimize arrays of integers longer than 65,535 elements.\r\n  // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)\r\n  _.max = function(obj, iterator, context) {\r\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\r\n      return Math.max.apply(Math, obj);\r\n    }\r\n    var result = -Infinity, lastComputed = -Infinity;\r\n    each(obj, function(value, index, list) {\r\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\r\n      if (computed > lastComputed) {\r\n        result = value;\r\n        lastComputed = computed;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  // Return the minimum element (or element-based computation).\r\n  _.min = function(obj, iterator, context) {\r\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\r\n      return Math.min.apply(Math, obj);\r\n    }\r\n    var result = Infinity, lastComputed = Infinity;\r\n    each(obj, function(value, index, list) {\r\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\r\n      if (computed < lastComputed) {\r\n        result = value;\r\n        lastComputed = computed;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  // Shuffle an array, using the modern version of the\r\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\r\n  _.shuffle = function(obj) {\r\n    var rand;\r\n    var index = 0;\r\n    var shuffled = [];\r\n    each(obj, function(value) {\r\n      rand = _.random(index++);\r\n      shuffled[index - 1] = shuffled[rand];\r\n      shuffled[rand] = value;\r\n    });\r\n    return shuffled;\r\n  };\r\n\r\n  // Sample **n** random values from a collection.\r\n  // If **n** is not specified, returns a single random element.\r\n  // The internal `guard` argument allows it to work with `map`.\r\n  _.sample = function(obj, n, guard) {\r\n    if (n == null || guard) {\r\n      if (obj.length !== +obj.length) obj = _.values(obj);\r\n      return obj[_.random(obj.length - 1)];\r\n    }\r\n    return _.shuffle(obj).slice(0, Math.max(0, n));\r\n  };\r\n\r\n  // An internal function to generate lookup iterators.\r\n  var lookupIterator = function(value) {\r\n    if (value == null) return _.identity;\r\n    if (_.isFunction(value)) return value;\r\n    return _.property(value);\r\n  };\r\n\r\n  // Sort the object\'s values by a criterion produced by an iterator.\r\n  _.sortBy = function(obj, iterator, context) {\r\n    iterator = lookupIterator(iterator);\r\n    return _.pluck(_.map(obj, function(value, index, list) {\r\n      return {\r\n        value: value,\r\n        index: index,\r\n        criteria: iterator.call(context, value, index, list)\r\n      };\r\n    }).sort(function(left, right) {\r\n      var a = left.criteria;\r\n      var b = right.criteria;\r\n      if (a !== b) {\r\n        if (a > b || a === void 0) return 1;\r\n        if (a < b || b === void 0) return -1;\r\n      }\r\n      return left.index - right.index;\r\n    }), \'value\');\r\n  };\r\n\r\n  // An internal function used for aggregate \"group by\" operations.\r\n  var group = function(behavior) {\r\n    return function(obj, iterator, context) {\r\n      var result = {};\r\n      iterator = lookupIterator(iterator);\r\n      each(obj, function(value, index) {\r\n        var key = iterator.call(context, value, index, obj);\r\n        behavior(result, key, value);\r\n      });\r\n      return result;\r\n    };\r\n  };\r\n\r\n  // Groups the object\'s values by a criterion. Pass either a string attribute\r\n  // to group by, or a function that returns the criterion.\r\n  _.groupBy = group(function(result, key, value) {\r\n    _.has(result, key) ? result[key].push(value) : result[key] = [value];\r\n  });\r\n\r\n  // Indexes the object\'s values by a criterion, similar to `groupBy`, but for\r\n  // when you know that your index values will be unique.\r\n  _.indexBy = group(function(result, key, value) {\r\n    result[key] = value;\r\n  });\r\n\r\n  // Counts instances of an object that group by a certain criterion. Pass\r\n  // either a string attribute to count by, or a function that returns the\r\n  // criterion.\r\n  _.countBy = group(function(result, key) {\r\n    _.has(result, key) ? result[key]++ : result[key] = 1;\r\n  });\r\n\r\n  // Use a comparator function to figure out the smallest index at which\r\n  // an object should be inserted so as to maintain order. Uses binary search.\r\n  _.sortedIndex = function(array, obj, iterator, context) {\r\n    iterator = lookupIterator(iterator);\r\n    var value = iterator.call(context, obj);\r\n    var low = 0, high = array.length;\r\n    while (low < high) {\r\n      var mid = (low + high) >>> 1;\r\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\r\n    }\r\n    return low;\r\n  };\r\n\r\n  // Safely create a real, live array from anything iterable.\r\n  _.toArray = function(obj) {\r\n    if (!obj) return [];\r\n    if (_.isArray(obj)) return slice.call(obj);\r\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\r\n    return _.values(obj);\r\n  };\r\n\r\n  // Return the number of elements in an object.\r\n  _.size = function(obj) {\r\n    if (obj == null) return 0;\r\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\r\n  };\r\n\r\n  // Array Functions\r\n  // ---------------\r\n\r\n  // Get the first element of an array. Passing **n** will return the first N\r\n  // values in the array. Aliased as `head` and `take`. The **guard** check\r\n  // allows it to work with `_.map`.\r\n  _.first = _.head = _.take = function(array, n, guard) {\r\n    if (array == null) return void 0;\r\n    if ((n == null) || guard) return array[0];\r\n    if (n < 0) return [];\r\n    return slice.call(array, 0, n);\r\n  };\r\n\r\n  // Returns everything but the last entry of the array. Especially useful on\r\n  // the arguments object. Passing **n** will return all the values in\r\n  // the array, excluding the last N. The **guard** check allows it to work with\r\n  // `_.map`.\r\n  _.initial = function(array, n, guard) {\r\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\r\n  };\r\n\r\n  // Get the last element of an array. Passing **n** will return the last N\r\n  // values in the array. The **guard** check allows it to work with `_.map`.\r\n  _.last = function(array, n, guard) {\r\n    if (array == null) return void 0;\r\n    if ((n == null) || guard) return array[array.length - 1];\r\n    return slice.call(array, Math.max(array.length - n, 0));\r\n  };\r\n\r\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\r\n  // Especially useful on the arguments object. Passing an **n** will return\r\n  // the rest N values in the array. The **guard**\r\n  // check allows it to work with `_.map`.\r\n  _.rest = _.tail = _.drop = function(array, n, guard) {\r\n    return slice.call(array, (n == null) || guard ? 1 : n);\r\n  };\r\n\r\n  // Trim out all falsy values from an array.\r\n  _.compact = function(array) {\r\n    return _.filter(array, _.identity);\r\n  };\r\n\r\n  // Internal implementation of a recursive `flatten` function.\r\n  var flatten = function(input, shallow, output) {\r\n    if (shallow && _.every(input, _.isArray)) {\r\n      return concat.apply(output, input);\r\n    }\r\n    each(input, function(value) {\r\n      if (_.isArray(value) || _.isArguments(value)) {\r\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\r\n      } else {\r\n        output.push(value);\r\n      }\r\n    });\r\n    return output;\r\n  };\r\n\r\n  // Flatten out an array, either recursively (by default), or just one level.\r\n  _.flatten = function(array, shallow) {\r\n    return flatten(array, shallow, []);\r\n  };\r\n\r\n  // Return a version of the array that does not contain the specified value(s).\r\n  _.without = function(array) {\r\n    return _.difference(array, slice.call(arguments, 1));\r\n  };\r\n\r\n  // Split an array into two arrays: one whose elements all satisfy the given\r\n  // predicate, and one whose elements all do not satisfy the predicate.\r\n  _.partition = function(array, predicate) {\r\n    var pass = [], fail = [];\r\n    each(array, function(elem) {\r\n      (predicate(elem) ? pass : fail).push(elem);\r\n    });\r\n    return [pass, fail];\r\n  };\r\n\r\n  // Produce a duplicate-free version of the array. If the array has already\r\n  // been sorted, you have the option of using a faster algorithm.\r\n  // Aliased as `unique`.\r\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\r\n    if (_.isFunction(isSorted)) {\r\n      context = iterator;\r\n      iterator = isSorted;\r\n      isSorted = false;\r\n    }\r\n    var initial = iterator ? _.map(array, iterator, context) : array;\r\n    var results = [];\r\n    var seen = [];\r\n    each(initial, function(value, index) {\r\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\r\n        seen.push(value);\r\n        results.push(array[index]);\r\n      }\r\n    });\r\n    return results;\r\n  };\r\n\r\n  // Produce an array that contains the union: each distinct element from all of\r\n  // the passed-in arrays.\r\n  _.union = function() {\r\n    return _.uniq(_.flatten(arguments, true));\r\n  };\r\n\r\n  // Produce an array that contains every item shared between all the\r\n  // passed-in arrays.\r\n  _.intersection = function(array) {\r\n    var rest = slice.call(arguments, 1);\r\n    return _.filter(_.uniq(array), function(item) {\r\n      return _.every(rest, function(other) {\r\n        return _.contains(other, item);\r\n      });\r\n    });\r\n  };\r\n\r\n  // Take the difference between one array and a number of other arrays.\r\n  // Only the elements present in just the first array will remain.\r\n  _.difference = function(array) {\r\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\r\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\r\n  };\r\n\r\n  // Zip together multiple lists into a single array -- elements that share\r\n  // an index go together.\r\n  _.zip = function() {\r\n    var length = _.max(_.pluck(arguments, \'length\').concat(0));\r\n    var results = new Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      results[i] = _.pluck(arguments, \'\' + i);\r\n    }\r\n    return results;\r\n  };\r\n\r\n  // Converts lists into objects. Pass either a single array of `[key, value]`\r\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\r\n  // the corresponding values.\r\n  _.object = function(list, values) {\r\n    if (list == null) return {};\r\n    var result = {};\r\n    for (var i = 0, length = list.length; i < length; i++) {\r\n      if (values) {\r\n        result[list[i]] = values[i];\r\n      } else {\r\n        result[list[i][0]] = list[i][1];\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // If the browser doesn\'t supply us with indexOf (I\'m looking at you, **MSIE**),\r\n  // we need this function. Return the position of the first occurrence of an\r\n  // item in an array, or -1 if the item is not included in the array.\r\n  // Delegates to **ECMAScript 5**\'s native `indexOf` if available.\r\n  // If the array is large and already in sort order, pass `true`\r\n  // for **isSorted** to use binary search.\r\n  _.indexOf = function(array, item, isSorted) {\r\n    if (array == null) return -1;\r\n    var i = 0, length = array.length;\r\n    if (isSorted) {\r\n      if (typeof isSorted == \'number\') {\r\n        i = (isSorted < 0 ? Math.max(0, length + isSorted) : isSorted);\r\n      } else {\r\n        i = _.sortedIndex(array, item);\r\n        return array[i] === item ? i : -1;\r\n      }\r\n    }\r\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\r\n    for (; i < length; i++) if (array[i] === item) return i;\r\n    return -1;\r\n  };\r\n\r\n  // Delegates to **ECMAScript 5**\'s native `lastIndexOf` if available.\r\n  _.lastIndexOf = function(array, item, from) {\r\n    if (array == null) return -1;\r\n    var hasIndex = from != null;\r\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\r\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\r\n    }\r\n    var i = (hasIndex ? from : array.length);\r\n    while (i--) if (array[i] === item) return i;\r\n    return -1;\r\n  };\r\n\r\n  // Generate an integer Array containing an arithmetic progression. A port of\r\n  // the native Python `range()` function. See\r\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\r\n  _.range = function(start, stop, step) {\r\n    if (arguments.length <= 1) {\r\n      stop = start || 0;\r\n      start = 0;\r\n    }\r\n    step = arguments[2] || 1;\r\n\r\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\r\n    var idx = 0;\r\n    var range = new Array(length);\r\n\r\n    while(idx < length) {\r\n      range[idx++] = start;\r\n      start += step;\r\n    }\r\n\r\n    return range;\r\n  };\r\n\r\n  // Function (ahem) Functions\r\n  // ------------------\r\n\r\n  // Reusable constructor function for prototype setting.\r\n  var ctor = function(){};\r\n\r\n  // Create a function bound to a given object (assigning `this`, and arguments,\r\n  // optionally). Delegates to **ECMAScript 5**\'s native `Function.bind` if\r\n  // available.\r\n  _.bind = function(func, context) {\r\n    var args, bound;\r\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\r\n    if (!_.isFunction(func)) throw new TypeError;\r\n    args = slice.call(arguments, 2);\r\n    return bound = function() {\r\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\r\n      ctor.prototype = func.prototype;\r\n      var self = new ctor;\r\n      ctor.prototype = null;\r\n      var result = func.apply(self, args.concat(slice.call(arguments)));\r\n      if (Object(result) === result) return result;\r\n      return self;\r\n    };\r\n  };\r\n\r\n  // Partially apply a function by creating a version that has had some of its\r\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\r\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\r\n  _.partial = function(func) {\r\n    var boundArgs = slice.call(arguments, 1);\r\n    return function() {\r\n      var position = 0;\r\n      var args = boundArgs.slice();\r\n      for (var i = 0, length = args.length; i < length; i++) {\r\n        if (args[i] === _) args[i] = arguments[position++];\r\n      }\r\n      while (position < arguments.length) args.push(arguments[position++]);\r\n      return func.apply(this, args);\r\n    };\r\n  };\r\n\r\n  // Bind a number of an object\'s methods to that object. Remaining arguments\r\n  // are the method names to be bound. Useful for ensuring that all callbacks\r\n  // defined on an object belong to it.\r\n  _.bindAll = function(obj) {\r\n    var funcs = slice.call(arguments, 1);\r\n    if (funcs.length === 0) throw new Error(\'bindAll must be passed function names\');\r\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\r\n    return obj;\r\n  };\r\n\r\n  // Memoize an expensive function by storing its results.\r\n  _.memoize = function(func, hasher) {\r\n    var memo = {};\r\n    hasher || (hasher = _.identity);\r\n    return function() {\r\n      var key = hasher.apply(this, arguments);\r\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\r\n    };\r\n  };\r\n\r\n  // Delays a function for the given number of milliseconds, and then calls\r\n  // it with the arguments supplied.\r\n  _.delay = function(func, wait) {\r\n    var args = slice.call(arguments, 2);\r\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\r\n  };\r\n\r\n  // Defers a function, scheduling it to run after the current call stack has\r\n  // cleared.\r\n  _.defer = function(func) {\r\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\r\n  };\r\n\r\n  // Returns a function, that, when invoked, will only be triggered at most once\r\n  // during a given window of time. Normally, the throttled function will run\r\n  // as much as it can, without ever going more than once per `wait` duration;\r\n  // but if you\'d like to disable the execution on the leading edge, pass\r\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\r\n  _.throttle = function(func, wait, options) {\r\n    var context, args, result;\r\n    var timeout = null;\r\n    var previous = 0;\r\n    options || (options = {});\r\n    var later = function() {\r\n      previous = options.leading === false ? 0 : _.now();\r\n      timeout = null;\r\n      result = func.apply(context, args);\r\n      context = args = null;\r\n    };\r\n    return function() {\r\n      var now = _.now();\r\n      if (!previous && options.leading === false) previous = now;\r\n      var remaining = wait - (now - previous);\r\n      context = this;\r\n      args = arguments;\r\n      if (remaining <= 0) {\r\n        clearTimeout(timeout);\r\n        timeout = null;\r\n        previous = now;\r\n        result = func.apply(context, args);\r\n        context = args = null;\r\n      } else if (!timeout && options.trailing !== false) {\r\n        timeout = setTimeout(later, remaining);\r\n      }\r\n      return result;\r\n    };\r\n  };\r\n\r\n  // Returns a function, that, as long as it continues to be invoked, will not\r\n  // be triggered. The function will be called after it stops being called for\r\n  // N milliseconds. If `immediate` is passed, trigger the function on the\r\n  // leading edge, instead of the trailing.\r\n  _.debounce = function(func, wait, immediate) {\r\n    var timeout, args, context, timestamp, result;\r\n\r\n    var later = function() {\r\n      var last = _.now() - timestamp;\r\n      if (last < wait) {\r\n        timeout = setTimeout(later, wait - last);\r\n      } else {\r\n        timeout = null;\r\n        if (!immediate) {\r\n          result = func.apply(context, args);\r\n          context = args = null;\r\n        }\r\n      }\r\n    };\r\n\r\n    return function() {\r\n      context = this;\r\n      args = arguments;\r\n      timestamp = _.now();\r\n      var callNow = immediate && !timeout;\r\n      if (!timeout) {\r\n        timeout = setTimeout(later, wait);\r\n      }\r\n      if (callNow) {\r\n        result = func.apply(context, args);\r\n        context = args = null;\r\n      }\r\n\r\n      return result;\r\n    };\r\n  };\r\n\r\n  // Returns a function that will be executed at most one time, no matter how\r\n  // often you call it. Useful for lazy initialization.\r\n  _.once = function(func) {\r\n    var ran = false, memo;\r\n    return function() {\r\n      if (ran) return memo;\r\n      ran = true;\r\n      memo = func.apply(this, arguments);\r\n      func = null;\r\n      return memo;\r\n    };\r\n  };\r\n\r\n  // Returns the first function passed as an argument to the second,\r\n  // allowing you to adjust arguments, run code before and after, and\r\n  // conditionally execute the original function.\r\n  _.wrap = function(func, wrapper) {\r\n    return _.partial(wrapper, func);\r\n  };\r\n\r\n  // Returns a function that is the composition of a list of functions, each\r\n  // consuming the return value of the function that follows.\r\n  _.compose = function() {\r\n    var funcs = arguments;\r\n    return function() {\r\n      var args = arguments;\r\n      for (var i = funcs.length - 1; i >= 0; i--) {\r\n        args = [funcs[i].apply(this, args)];\r\n      }\r\n      return args[0];\r\n    };\r\n  };\r\n\r\n  // Returns a function that will only be executed after being called N times.\r\n  _.after = function(times, func) {\r\n    return function() {\r\n      if (--times < 1) {\r\n        return func.apply(this, arguments);\r\n      }\r\n    };\r\n  };\r\n\r\n  // Object Functions\r\n  // ----------------\r\n\r\n  // Retrieve the names of an object\'s properties.\r\n  // Delegates to **ECMAScript 5**\'s native `Object.keys`\r\n  _.keys = function(obj) {\r\n    if (!_.isObject(obj)) return [];\r\n    if (nativeKeys) return nativeKeys(obj);\r\n    var keys = [];\r\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\r\n    return keys;\r\n  };\r\n\r\n  // Retrieve the values of an object\'s properties.\r\n  _.values = function(obj) {\r\n    var keys = _.keys(obj);\r\n    var length = keys.length;\r\n    var values = new Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      values[i] = obj[keys[i]];\r\n    }\r\n    return values;\r\n  };\r\n\r\n  // Convert an object into a list of `[key, value]` pairs.\r\n  _.pairs = function(obj) {\r\n    var keys = _.keys(obj);\r\n    var length = keys.length;\r\n    var pairs = new Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      pairs[i] = [keys[i], obj[keys[i]]];\r\n    }\r\n    return pairs;\r\n  };\r\n\r\n  // Invert the keys and values of an object. The values must be serializable.\r\n  _.invert = function(obj) {\r\n    var result = {};\r\n    var keys = _.keys(obj);\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      result[obj[keys[i]]] = keys[i];\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Return a sorted list of the function names available on the object.\r\n  // Aliased as `methods`\r\n  _.functions = _.methods = function(obj) {\r\n    var names = [];\r\n    for (var key in obj) {\r\n      if (_.isFunction(obj[key])) names.push(key);\r\n    }\r\n    return names.sort();\r\n  };\r\n\r\n  // Extend a given object with all the properties in passed-in object(s).\r\n  _.extend = function(obj) {\r\n    each(slice.call(arguments, 1), function(source) {\r\n      if (source) {\r\n        for (var prop in source) {\r\n          obj[prop] = source[prop];\r\n        }\r\n      }\r\n    });\r\n    return obj;\r\n  };\r\n\r\n  // Return a copy of the object only containing the whitelisted properties.\r\n  _.pick = function(obj) {\r\n    var copy = {};\r\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\r\n    each(keys, function(key) {\r\n      if (key in obj) copy[key] = obj[key];\r\n    });\r\n    return copy;\r\n  };\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n  _.omit = function(obj) {\r\n    var copy = {};\r\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\r\n    for (var key in obj) {\r\n      if (!_.contains(keys, key)) copy[key] = obj[key];\r\n    }\r\n    return copy;\r\n  };\r\n\r\n  // Fill in a given object with default properties.\r\n  _.defaults = function(obj) {\r\n    each(slice.call(arguments, 1), function(source) {\r\n      if (source) {\r\n        for (var prop in source) {\r\n          if (obj[prop] === void 0) obj[prop] = source[prop];\r\n        }\r\n      }\r\n    });\r\n    return obj;\r\n  };\r\n\r\n  // Create a (shallow-cloned) duplicate of an object.\r\n  _.clone = function(obj) {\r\n    if (!_.isObject(obj)) return obj;\r\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\r\n  };\r\n\r\n  // Invokes interceptor with the obj, and then returns obj.\r\n  // The primary purpose of this method is to \"tap into\" a method chain, in\r\n  // order to perform operations on intermediate results within the chain.\r\n  _.tap = function(obj, interceptor) {\r\n    interceptor(obj);\r\n    return obj;\r\n  };\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  var eq = function(a, b, aStack, bStack) {\r\n    // Identical objects are equal. `0 === -0`, but they aren\'t identical.\r\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\r\n    // A strict comparison is necessary because `null == undefined`.\r\n    if (a == null || b == null) return a === b;\r\n    // Unwrap any wrapped objects.\r\n    if (a instanceof _) a = a._wrapped;\r\n    if (b instanceof _) b = b._wrapped;\r\n    // Compare `[[Class]]` names.\r\n    var className = toString.call(a);\r\n    if (className != toString.call(b)) return false;\r\n    switch (className) {\r\n      // Strings, numbers, dates, and booleans are compared by value.\r\n      case \'[object String]\':\r\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n        // equivalent to `new String(\"5\")`.\r\n        return a == String(b);\r\n      case \'[object Number]\':\r\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\r\n        // other numeric values.\r\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\r\n      case \'[object Date]\':\r\n      case \'[object Boolean]\':\r\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n        // millisecond representations. Note that invalid dates with millisecond representations\r\n        // of `NaN` are not equivalent.\r\n        return +a == +b;\r\n      // RegExps are compared by their source patterns and flags.\r\n      case \'[object RegExp]\':\r\n        return a.source == b.source &&\r\n               a.global == b.global &&\r\n               a.multiline == b.multiline &&\r\n               a.ignoreCase == b.ignoreCase;\r\n    }\r\n    if (typeof a != \'object\' || typeof b != \'object\') return false;\r\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n    var length = aStack.length;\r\n    while (length--) {\r\n      // Linear search. Performance is inversely proportional to the number of\r\n      // unique nested structures.\r\n      if (aStack[length] == a) return bStack[length] == b;\r\n    }\r\n    // Objects with different constructors are not equivalent, but `Object`s\r\n    // from different frames are.\r\n    var aCtor = a.constructor, bCtor = b.constructor;\r\n    if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\r\n                             _.isFunction(bCtor) && (bCtor instanceof bCtor))\r\n                        && (\'constructor\' in a && \'constructor\' in b)) {\r\n      return false;\r\n    }\r\n    // Add the first object to the stack of traversed objects.\r\n    aStack.push(a);\r\n    bStack.push(b);\r\n    var size = 0, result = true;\r\n    // Recursively compare objects and arrays.\r\n    if (className == \'[object Array]\') {\r\n      // Compare array lengths to determine if a deep comparison is necessary.\r\n      size = a.length;\r\n      result = size == b.length;\r\n      if (result) {\r\n        // Deep compare the contents, ignoring non-numeric properties.\r\n        while (size--) {\r\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\r\n        }\r\n      }\r\n    } else {\r\n      // Deep compare objects.\r\n      for (var key in a) {\r\n        if (_.has(a, key)) {\r\n          // Count the expected number of properties.\r\n          size++;\r\n          // Deep compare each member.\r\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\r\n        }\r\n      }\r\n      // Ensure that both objects contain the same number of properties.\r\n      if (result) {\r\n        for (key in b) {\r\n          if (_.has(b, key) && !(size--)) break;\r\n        }\r\n        result = !size;\r\n      }\r\n    }\r\n    // Remove the first object from the stack of traversed objects.\r\n    aStack.pop();\r\n    bStack.pop();\r\n    return result;\r\n  };\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n  _.isEqual = function(a, b) {\r\n    return eq(a, b, [], []);\r\n  };\r\n\r\n  // Is a given array, string, or object empty?\r\n  // An \"empty\" object has no enumerable own-properties.\r\n  _.isEmpty = function(obj) {\r\n    if (obj == null) return true;\r\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\r\n    for (var key in obj) if (_.has(obj, key)) return false;\r\n    return true;\r\n  };\r\n\r\n  // Is a given value a DOM element?\r\n  _.isElement = function(obj) {\r\n    return !!(obj && obj.nodeType === 1);\r\n  };\r\n\r\n  // Is a given value an array?\r\n  // Delegates to ECMA5\'s native Array.isArray\r\n  _.isArray = nativeIsArray || function(obj) {\r\n    return toString.call(obj) == \'[object Array]\';\r\n  };\r\n\r\n  // Is a given variable an object?\r\n  _.isObject = function(obj) {\r\n    return obj === Object(obj);\r\n  };\r\n\r\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\r\n  each([\'Arguments\', \'Function\', \'String\', \'Number\', \'Date\', \'RegExp\'], function(name) {\r\n    _[\'is\' + name] = function(obj) {\r\n      return toString.call(obj) == \'[object \' + name + \']\';\r\n    };\r\n  });\r\n\r\n  // Define a fallback version of the method in browsers (ahem, IE), where\r\n  // there isn\'t any inspectable \"Arguments\" type.\r\n  if (!_.isArguments(arguments)) {\r\n    _.isArguments = function(obj) {\r\n      return !!(obj && _.has(obj, \'callee\'));\r\n    };\r\n  }\r\n\r\n  // Optimize `isFunction` if appropriate.\r\n  if (typeof (/./) !== \'function\') {\r\n    _.isFunction = function(obj) {\r\n      return typeof obj === \'function\';\r\n    };\r\n  }\r\n\r\n  // Is a given object a finite number?\r\n  _.isFinite = function(obj) {\r\n    return isFinite(obj) && !isNaN(parseFloat(obj));\r\n  };\r\n\r\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\r\n  _.isNaN = function(obj) {\r\n    return _.isNumber(obj) && obj != +obj;\r\n  };\r\n\r\n  // Is a given value a boolean?\r\n  _.isBoolean = function(obj) {\r\n    return obj === true || obj === false || toString.call(obj) == \'[object Boolean]\';\r\n  };\r\n\r\n  // Is a given value equal to null?\r\n  _.isNull = function(obj) {\r\n    return obj === null;\r\n  };\r\n\r\n  // Is a given variable undefined?\r\n  _.isUndefined = function(obj) {\r\n    return obj === void 0;\r\n  };\r\n\r\n  // Shortcut function for checking if an object has a given property directly\r\n  // on itself (in other words, not on a prototype).\r\n  _.has = function(obj, key) {\r\n    return hasOwnProperty.call(obj, key);\r\n  };\r\n\r\n  // Utility Functions\r\n  // -----------------\r\n\r\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\r\n  // previous owner. Returns a reference to the Underscore object.\r\n  _.noConflict = function() {\r\n    root._ = previousUnderscore;\r\n    return this;\r\n  };\r\n\r\n  // Keep the identity function around for default iterators.\r\n  _.identity = function(value) {\r\n    return value;\r\n  };\r\n\r\n  _.constant = function(value) {\r\n    return function () {\r\n      return value;\r\n    };\r\n  };\r\n\r\n  _.property = function(key) {\r\n    return function(obj) {\r\n      return obj[key];\r\n    };\r\n  };\r\n\r\n  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.\r\n  _.matches = function(attrs) {\r\n    return function(obj) {\r\n      if (obj === attrs) return true; //avoid comparing an object to itself.\r\n      for (var key in attrs) {\r\n        if (attrs[key] !== obj[key])\r\n          return false;\r\n      }\r\n      return true;\r\n    }\r\n  };\r\n\r\n  // Run a function **n** times.\r\n  _.times = function(n, iterator, context) {\r\n    var accum = Array(Math.max(0, n));\r\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\r\n    return accum;\r\n  };\r\n\r\n  // Return a random integer between min and max (inclusive).\r\n  _.random = function(min, max) {\r\n    if (max == null) {\r\n      max = min;\r\n      min = 0;\r\n    }\r\n    return min + Math.floor(Math.random() * (max - min + 1));\r\n  };\r\n\r\n  // A (possibly faster) way to get the current timestamp as an integer.\r\n  _.now = Date.now || function() { return new Date().getTime(); };\r\n\r\n  // List of HTML entities for escaping.\r\n  var entityMap = {\r\n    escape: {\r\n      \'&\': \'&amp;\',\r\n      \'<\': \'&lt;\',\r\n      \'>\': \'&gt;\',\r\n      \'\"\': \'&quot;\',\r\n      \"\'\": \'&#x27;\'\r\n    }\r\n  };\r\n  entityMap.unescape = _.invert(entityMap.escape);\r\n\r\n  // Regexes containing the keys and values listed immediately above.\r\n  var entityRegexes = {\r\n    escape:   new RegExp(\'[\' + _.keys(entityMap.escape).join(\'\') + \']\', \'g\'),\r\n    unescape: new RegExp(\'(\' + _.keys(entityMap.unescape).join(\'|\') + \')\', \'g\')\r\n  };\r\n\r\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\r\n  _.each([\'escape\', \'unescape\'], function(method) {\r\n    _[method] = function(string) {\r\n      if (string == null) return \'\';\r\n      return (\'\' + string).replace(entityRegexes[method], function(match) {\r\n        return entityMap[method][match];\r\n      });\r\n    };\r\n  });\r\n\r\n  // If the value of the named `property` is a function then invoke it with the\r\n  // `object` as context; otherwise, return it.\r\n  _.result = function(object, property) {\r\n    if (object == null) return void 0;\r\n    var value = object[property];\r\n    return _.isFunction(value) ? value.call(object) : value;\r\n  };\r\n\r\n  // Add your own custom functions to the Underscore object.\r\n  _.mixin = function(obj) {\r\n    each(_.functions(obj), function(name) {\r\n      var func = _[name] = obj[name];\r\n      _.prototype[name] = function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return result.call(this, func.apply(_, args));\r\n      };\r\n    });\r\n  };\r\n\r\n  // Generate a unique integer id (unique within the entire client session).\r\n  // Useful for temporary DOM ids.\r\n  var idCounter = 0;\r\n  _.uniqueId = function(prefix) {\r\n    var id = ++idCounter + \'\';\r\n    return prefix ? prefix + id : id;\r\n  };\r\n\r\n  // By default, Underscore uses ERB-style template delimiters, change the\r\n  // following template settings to use alternative delimiters.\r\n  _.templateSettings = {\r\n    evaluate    : /<%([\\s\\S]+?)%>/g,\r\n    interpolate : /<%=([\\s\\S]+?)%>/g,\r\n    escape      : /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n  // When customizing `templateSettings`, if you don\'t want to define an\r\n  // interpolation, evaluation or escaping regex, we need one that is\r\n  // guaranteed not to match.\r\n  var noMatch = /(.)^/;\r\n\r\n  // Certain characters need to be escaped so that they can be put into a\r\n  // string literal.\r\n  var escapes = {\r\n    \"\'\":      \"\'\",\r\n    \'\\\\\':     \'\\\\\',\r\n    \'\\r\':     \'r\',\r\n    \'\\n\':     \'n\',\r\n    \'\\t\':     \'t\',\r\n    \'\\u2028\': \'u2028\',\r\n    \'\\u2029\': \'u2029\'\r\n  };\r\n\r\n  var escaper = /\\\\|\'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n  // JavaScript micro-templating, similar to John Resig\'s implementation.\r\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\r\n  // and correctly escapes quotes within interpolated code.\r\n  _.template = function(text, data, settings) {\r\n    var render;\r\n    settings = _.defaults({}, settings, _.templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = new RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join(\'|\') + \'|$\', \'g\');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+=\'\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset)\r\n        .replace(escaper, function(match) { return \'\\\\\' + escapes[match]; });\r\n\r\n      if (escape) {\r\n        source += \"\'+\\n((__t=(\" + escape + \"))==null?\'\':_.escape(__t))+\\n\'\";\r\n      }\r\n      if (interpolate) {\r\n        source += \"\'+\\n((__t=(\" + interpolate + \"))==null?\'\':__t)+\\n\'\";\r\n      }\r\n      if (evaluate) {\r\n        source += \"\';\\n\" + evaluate + \"\\n__p+=\'\";\r\n      }\r\n      index = offset + match.length;\r\n      return match;\r\n    });\r\n    source += \"\';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = \'with(obj||{}){\\n\' + source + \'}\\n\';\r\n\r\n    source = \"var __t,__p=\'\',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,\'\');};\\n\" +\r\n      source + \"return __p;\\n\";\r\n\r\n    try {\r\n      render = new Function(settings.variable || \'obj\', \'_\', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    if (data) return render(data, _);\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled function source as a convenience for precompilation.\r\n    template.source = \'function(\' + (settings.variable || \'obj\') + \'){\\n\' + source + \'}\';\r\n\r\n    return template;\r\n  };\r\n\r\n  // Add a \"chain\" function, which will delegate to the wrapper.\r\n  _.chain = function(obj) {\r\n    return _(obj).chain();\r\n  };\r\n\r\n  // OOP\r\n  // ---------------\r\n  // If Underscore is called as a function, it returns a wrapped object that\r\n  // can be used OO-style. This wrapper holds altered versions of all the\r\n  // underscore functions. Wrapped objects may be chained.\r\n\r\n  // Helper function to continue chaining intermediate results.\r\n  var result = function(obj) {\r\n    return this._chain ? _(obj).chain() : obj;\r\n  };\r\n\r\n  // Add all of the Underscore functions to the wrapper object.\r\n  _.mixin(_);\r\n\r\n  // Add all mutator Array functions to the wrapper.\r\n  each([\'pop\', \'push\', \'reverse\', \'shift\', \'sort\', \'splice\', \'unshift\'], function(name) {\r\n    var method = ArrayProto[name];\r\n    _.prototype[name] = function() {\r\n      var obj = this._wrapped;\r\n      method.apply(obj, arguments);\r\n      if ((name == \'shift\' || name == \'splice\') && obj.length === 0) delete obj[0];\r\n      return result.call(this, obj);\r\n    };\r\n  });\r\n\r\n  // Add all accessor Array functions to the wrapper.\r\n  each([\'concat\', \'join\', \'slice\'], function(name) {\r\n    var method = ArrayProto[name];\r\n    _.prototype[name] = function() {\r\n      return result.call(this, method.apply(this._wrapped, arguments));\r\n    };\r\n  });\r\n\r\n  _.extend(_.prototype, {\r\n\r\n    // Start chaining a wrapped Underscore object.\r\n    chain: function() {\r\n      this._chain = true;\r\n      return this;\r\n    },\r\n\r\n    // Extracts the result from a wrapped and chained object.\r\n    value: function() {\r\n      return this._wrapped;\r\n    }\r\n\r\n  });\r\n\r\n  // AMD registration happens at the end for compatibility with AMD loaders\r\n  // that may not enforce next-turn semantics on modules. Even though general\r\n  // practice for AMD registration is to be anonymous, underscore registers\r\n  // as a named module because, like jQuery, it is a base library that is\r\n  // popular enough to be bundled in a third party lib, but not be part of\r\n  // an AMD load request. Those cases could generate an error when an\r\n  // anonymous define() is called outside of a loader request.\r\n  if (typeof define === \'function\' && define.amd) {\r\n    define(\'underscore\', [], function() {\r\n      return _;\r\n    });\r\n  }\r\n}).call(this);\r\n\n//# sourceURL=/E:/Javascript projects/Heartbeat/App/Heartbeat/www/src/js/libs/underscore.js");

eval("//     Backbone.js 0.9.10\r\n\r\n//     (c) 2010-2013 Jeremy Ashkenas, DocumentCloud Inc.\r\n//     Backbone may be freely distributed under the MIT license.\r\n//     For all details and documentation:\r\n//     http://backbonejs.org\r\n\r\n(function(){\r\n\r\n    // Initial Setup\r\n    // -------------\r\n\r\n    // Save a reference to the global object (`window` in the browser, `exports`\r\n    // on the server).\r\n    var root = this;\r\n\r\n    // Save the previous value of the `Backbone` variable, so that it can be\r\n    // restored later on, if `noConflict` is used.\r\n    var previousBackbone = root.Backbone;\r\n\r\n    // Create a local reference to array methods.\r\n    var array = [];\r\n    var push = array.push;\r\n    var slice = array.slice;\r\n    var splice = array.splice;\r\n\r\n    // The top-level namespace. All public Backbone classes and modules will\r\n    // be attached to this. Exported for both CommonJS and the browser.\r\n    var Backbone;\r\n    if (typeof exports !== \'undefined\') {\r\n        Backbone = exports;\r\n    } else {\r\n        Backbone = root.Backbone = {};\r\n    }\r\n\r\n    // Current version of the library. Keep in sync with `package.json`.\r\n    Backbone.VERSION = \'0.9.10\';\r\n\r\n    // Require Underscore, if we\'re on the server, and it\'s not already present.\r\n    var _ = root._;\r\n    if (!_ && (typeof require !== \'undefined\')) _ = require(\'underscore\');\r\n\r\n    // For Backbone\'s purposes, jQuery, Zepto, or Ender owns the `$` variable.\r\n    Backbone.$ = root.jQuery || root.Zepto || root.ender;\r\n\r\n    // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\r\n    // to its previous owner. Returns a reference to this Backbone object.\r\n    Backbone.noConflict = function() {\r\n        root.Backbone = previousBackbone;\r\n        return this;\r\n    };\r\n\r\n    // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\r\n    // will fake `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\r\n    // set a `X-Http-Method-Override` header.\r\n    Backbone.emulateHTTP = false;\r\n\r\n    // Turn on `emulateJSON` to support legacy servers that can\'t deal with direct\r\n    // `application/json` requests ... will encode the body as\r\n    // `application/x-www-form-urlencoded` instead and will send the model in a\r\n    // form param named `model`.\r\n    Backbone.emulateJSON = false;\r\n\r\n    // Backbone.Events\r\n    // ---------------\r\n\r\n    // Regular expression used to split event strings.\r\n    var eventSplitter = /\\s+/;\r\n\r\n    // Implement fancy features of the Events API such as multiple event\r\n    // names `\"change blur\"` and jQuery-style event maps `{change: action}`\r\n    // in terms of the existing API.\r\n    var eventsApi = function(obj, action, name, rest) {\r\n        if (!name) return true;\r\n        if (typeof name === \'object\') {\r\n            for (var key in name) {\r\n                obj[action].apply(obj, [key, name[key]].concat(rest));\r\n            }\r\n        } else if (eventSplitter.test(name)) {\r\n            var names = name.split(eventSplitter);\r\n            for (var i = 0, l = names.length; i < l; i++) {\r\n                obj[action].apply(obj, [names[i]].concat(rest));\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    // Optimized internal dispatch function for triggering events. Tries to\r\n    // keep the usual cases speedy (most Backbone events have 3 arguments).\r\n    var triggerEvents = function(events, args) {\r\n        var ev, i = -1, l = events.length;\r\n        switch (args.length) {\r\n            case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx);\r\n                return;\r\n            case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, args[0]);\r\n                return;\r\n            case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, args[0], args[1]);\r\n                return;\r\n            case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, args[0], args[1], args[2]);\r\n                return;\r\n            default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\r\n        }\r\n    };\r\n\r\n    // A module that can be mixed in to *any object* in order to provide it with\r\n    // custom events. You may bind with `on` or remove with `off` callback\r\n    // functions to an event; `trigger`-ing an event fires all callbacks in\r\n    // succession.\r\n    //\r\n    //     var object = {};\r\n    //     _.extend(object, Backbone.Events);\r\n    //     object.on(\'expand\', function(){ alert(\'expanded\'); });\r\n    //     object.trigger(\'expand\');\r\n    //\r\n    var Events = Backbone.Events = {\r\n\r\n        // Bind one or more space separated events, or an events map,\r\n        // to a `callback` function. Passing `\"all\"` will bind the callback to\r\n        // all events fired.\r\n        on: function(name, callback, context) {\r\n            if (!eventsApi(this, \'on\', name, [callback, context]) || !callback) return this;\r\n            this._events || (this._events = {});\r\n            var events = this._events[name] || (this._events[name] = []);\r\n            events.push({callback: callback, context: context, ctx: context || this});\r\n            return this;\r\n        },\r\n\r\n        // Bind events to only be triggered a single time. After the first time\r\n        // the callback is invoked, it will be removed.\r\n        once: function(name, callback, context) {\r\n            if (!eventsApi(this, \'once\', name, [callback, context]) || !callback) return this;\r\n            var self = this;\r\n            var once = _.once(function() {\r\n                self.off(name, once);\r\n                callback.apply(this, arguments);\r\n            });\r\n            once._callback = callback;\r\n            this.on(name, once, context);\r\n            return this;\r\n        },\r\n\r\n        // Remove one or many callbacks. If `context` is null, removes all\r\n        // callbacks with that function. If `callback` is null, removes all\r\n        // callbacks for the event. If `name` is null, removes all bound\r\n        // callbacks for all events.\r\n        off: function(name, callback, context) {\r\n            var retain, ev, events, names, i, l, j, k;\r\n            if (!this._events || !eventsApi(this, \'off\', name, [callback, context])) return this;\r\n            if (!name && !callback && !context) {\r\n                this._events = {};\r\n                return this;\r\n            }\r\n\r\n            names = name ? [name] : _.keys(this._events);\r\n            for (i = 0, l = names.length; i < l; i++) {\r\n                name = names[i];\r\n                if (events = this._events[name]) {\r\n                    this._events[name] = retain = [];\r\n                    if (callback || context) {\r\n                        for (j = 0, k = events.length; j < k; j++) {\r\n                            ev = events[j];\r\n                            if ((callback && callback !== ev.callback &&\r\n                                callback !== ev.callback._callback) ||\r\n                                (context && context !== ev.context)) {\r\n                                retain.push(ev);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!retain.length) delete this._events[name];\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        // Trigger one or many events, firing all bound callbacks. Callbacks are\r\n        // passed the same arguments as `trigger` is, apart from the event name\r\n        // (unless you\'re listening on `\"all\"`, which will cause your callback to\r\n        // receive the true name of the event as the first argument).\r\n        trigger: function(name) {\r\n            if (!this._events) return this;\r\n            var args = slice.call(arguments, 1);\r\n            if (!eventsApi(this, \'trigger\', name, args)) return this;\r\n            var events = this._events[name];\r\n            var allEvents = this._events.all;\r\n            if (events) triggerEvents(events, args);\r\n            if (allEvents) triggerEvents(allEvents, arguments);\r\n            return this;\r\n        },\r\n\r\n        // Tell this object to stop listening to either specific events ... or\r\n        // to every object it\'s currently listening to.\r\n        stopListening: function(obj, name, callback) {\r\n            var listeners = this._listeners;\r\n            if (!listeners) return this;\r\n            if (obj) {\r\n                obj.off(name, typeof name === \'object\' ? this : callback, this);\r\n                if (!name && !callback) delete listeners[obj._listenerId];\r\n            } else {\r\n                if (typeof name === \'object\') callback = this;\r\n                for (var id in listeners) {\r\n                    listeners[id].off(name, callback, this);\r\n                }\r\n                this._listeners = {};\r\n            }\r\n            return this;\r\n        }\r\n    };\r\n\r\n    var listenMethods = {listenTo: \'on\', listenToOnce: \'once\'};\r\n\r\n    // An inversion-of-control versions of `on` and `once`. Tell *this* object to listen to\r\n    // an event in another object ... keeping track of what it\'s listening to.\r\n    _.each(listenMethods, function(implementation, method) {\r\n        Events[method] = function(obj, name, callback) {\r\n            var listeners = this._listeners || (this._listeners = {});\r\n            var id = obj._listenerId || (obj._listenerId = _.uniqueId(\'l\'));\r\n            listeners[id] = obj;\r\n            obj[implementation](name, typeof name === \'object\' ? this : callback, this);\r\n            return this;\r\n        };\r\n    });\r\n\r\n    // Aliases for backwards compatibility.\r\n    Events.bind   = Events.on;\r\n    Events.unbind = Events.off;\r\n\r\n    // Allow the `Backbone` object to serve as a global event bus, for folks who\r\n    // want global \"pubsub\" in a convenient place.\r\n    _.extend(Backbone, Events);\r\n\r\n    // Backbone.Model\r\n    // --------------\r\n\r\n    // Create a new model, with defined attributes. A client id (`cid`)\r\n    // is automatically generated and assigned for you.\r\n    var Model = Backbone.Model = function(attributes, options) {\r\n        var defaults;\r\n        var attrs = attributes || {};\r\n        this.cid = _.uniqueId(\'c\');\r\n        this.attributes = {};\r\n        if (options && options.collection) this.collection = options.collection;\r\n        if (options && options.parse) attrs = this.parse(attrs, options) || {};\r\n        if (defaults = _.result(this, \'defaults\')) {\r\n            attrs = _.defaults({}, attrs, defaults);\r\n        }\r\n        this.set(attrs, options);\r\n        this.changed = {};\r\n        this.initialize.apply(this, arguments);\r\n    };\r\n\r\n    // Attach all inheritable methods to the Model prototype.\r\n    _.extend(Model.prototype, Events, {\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: \'id\',\r\n\r\n        // Initialize is an empty function by default. Override it with your own\r\n        // initialization logic.\r\n        initialize: function(){},\r\n\r\n        // Return a copy of the model\'s `attributes` object.\r\n        toJSON: function(options) {\r\n            return _.clone(this.attributes);\r\n        },\r\n\r\n        // Proxy `Backbone.sync` by default.\r\n        sync: function() {\r\n            return Backbone.sync.apply(this, arguments);\r\n        },\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n            return this.attributes[attr];\r\n        },\r\n\r\n        // Get the HTML-escaped value of an attribute.\r\n        escape: function(attr) {\r\n            return _.escape(this.get(attr));\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n            return this.get(attr) != null;\r\n        },\r\n\r\n        // ----------------------------------------------------------------------\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"` unless\r\n        // you choose to silence it.\r\n        set: function(key, val, options) {\r\n            var attr, attrs, unset, changes, silent, changing, prev, current;\r\n            if (key == null) return this;\r\n\r\n            // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n            if (typeof key === \'object\') {\r\n                attrs = key;\r\n                options = val;\r\n            } else {\r\n                (attrs = {})[key] = val;\r\n            }\r\n\r\n            options || (options = {});\r\n\r\n            // Run validation.\r\n            if (!this._validate(attrs, options)) return false;\r\n\r\n            // Extract attributes and options.\r\n            unset           = options.unset;\r\n            silent          = options.silent;\r\n            changes         = [];\r\n            changing        = this._changing;\r\n            this._changing  = true;\r\n\r\n            if (!changing) {\r\n                this._previousAttributes = _.clone(this.attributes);\r\n                this.changed = {};\r\n            }\r\n            current = this.attributes, prev = this._previousAttributes;\r\n\r\n            // Check for changes of `id`.\r\n            if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\r\n\r\n            // For each `set` attribute, update or delete the current value.\r\n            for (attr in attrs) {\r\n                val = attrs[attr];\r\n                if (!_.isEqual(current[attr], val)) changes.push(attr);\r\n                if (!_.isEqual(prev[attr], val)) {\r\n                    this.changed[attr] = val;\r\n                } else {\r\n                    delete this.changed[attr];\r\n                }\r\n                unset ? delete current[attr] : current[attr] = val;\r\n            }\r\n\r\n            // Trigger all relevant attribute changes.\r\n            if (!silent) {\r\n                if (changes.length) this._pending = true;\r\n                for (var i = 0, l = changes.length; i < l; i++) {\r\n                    this.trigger(\'change:\' + changes[i], this, current[changes[i]], options);\r\n                }\r\n            }\r\n\r\n            if (changing) return this;\r\n            if (!silent) {\r\n                while (this._pending) {\r\n                    this._pending = false;\r\n                    this.trigger(\'change\', this, options);\r\n                }\r\n            }\r\n            this._pending = false;\r\n            this._changing = false;\r\n            return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"` unless you choose\r\n        // to silence it. `unset` is a noop if the attribute doesn\'t exist.\r\n        unset: function(attr, options) {\r\n            return this.set(attr, void 0, _.extend({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"` unless you choose\r\n        // to silence it.\r\n        clear: function(options) {\r\n            var attrs = {};\r\n            for (var key in this.attributes) attrs[key] = void 0;\r\n            return this.set(attrs, _.extend({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n            if (attr == null) return !_.isEmpty(this.changed);\r\n            return _.has(this.changed, attr);\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n            if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\r\n            var val, changed = false;\r\n            var old = this._changing ? this._previousAttributes : this.attributes;\r\n            for (var attr in diff) {\r\n                if (_.isEqual(old[attr], (val = diff[attr]))) continue;\r\n                (changed || (changed = {}))[attr] = val;\r\n            }\r\n            return changed;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n            if (attr == null || !this._previousAttributes) return null;\r\n            return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n            return _.clone(this._previousAttributes);\r\n        },\r\n\r\n        // ---------------------------------------------------------------------\r\n\r\n        // Fetch the model from the server. If the server\'s representation of the\r\n        // model differs from its current attributes, they will be overriden,\r\n        // triggering a `\"change\"` event.\r\n        fetch: function(options) {\r\n            options = options ? _.clone(options) : {};\r\n            if (options.parse === void 0) options.parse = true;\r\n            var success = options.success;\r\n            options.success = function(model, resp, options) {\r\n                if (!model.set(model.parse(resp, options), options)) return false;\r\n                if (success) success(model, resp, options);\r\n            };\r\n            return this.sync(\'read\', this, options);\r\n        },\r\n\r\n        // Set a hash of model attributes, and sync the model to the server.\r\n        // If the server returns an attributes hash that differs, the model\'s\r\n        // state will be `set` again.\r\n        save: function(key, val, options) {\r\n            var attrs, success, method, xhr, attributes = this.attributes;\r\n\r\n            // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n            if (key == null || typeof key === \'object\') {\r\n                attrs = key;\r\n                options = val;\r\n            } else {\r\n                (attrs = {})[key] = val;\r\n            }\r\n\r\n            // If we\'re not waiting and attributes exist, save acts as `set(attr).save(null, opts)`.\r\n            if (attrs && (!options || !options.wait) && !this.set(attrs, options)) return false;\r\n\r\n            options = _.extend({validate: true}, options);\r\n\r\n            // Do not persist invalid models.\r\n            if (!this._validate(attrs, options)) return false;\r\n\r\n            // Set temporary attributes if `{wait: true}`.\r\n            if (attrs && options.wait) {\r\n                this.attributes = _.extend({}, attributes, attrs);\r\n            }\r\n\r\n            // After a successful server-side save, the client is (optionally)\r\n            // updated with the server-side state.\r\n            if (options.parse === void 0) options.parse = true;\r\n            success = options.success;\r\n            options.success = function(model, resp, options) {\r\n                // Ensure attributes are restored during synchronous saves.\r\n                model.attributes = attributes;\r\n                var serverAttrs = model.parse(resp, options);\r\n                if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);\r\n                if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {\r\n                    return false;\r\n                }\r\n                if (success) success(model, resp, options);\r\n            };\r\n\r\n            // Finish configuring and sending the Ajax request.\r\n            method = this.isNew() ? \'create\' : (options.patch ? \'patch\' : \'update\');\r\n            if (method === \'patch\') options.attrs = attrs;\r\n            xhr = this.sync(method, this, options);\r\n\r\n            // Restore attributes.\r\n            if (attrs && options.wait) this.attributes = attributes;\r\n\r\n            return xhr;\r\n        },\r\n\r\n        // Destroy this model on the server if it was already persisted.\r\n        // Optimistically removes the model from its collection, if it has one.\r\n        // If `wait: true` is passed, waits for the server to respond before removal.\r\n        destroy: function(options) {\r\n            options = options ? _.clone(options) : {};\r\n            var model = this;\r\n            var success = options.success;\r\n\r\n            var destroy = function() {\r\n                model.trigger(\'destroy\', model, model.collection, options);\r\n            };\r\n\r\n            options.success = function(model, resp, options) {\r\n                if (options.wait || model.isNew()) destroy();\r\n                if (success) success(model, resp, options);\r\n            };\r\n\r\n            if (this.isNew()) {\r\n                options.success(this, null, options);\r\n                return false;\r\n            }\r\n\r\n            var xhr = this.sync(\'delete\', this, options);\r\n            if (!options.wait) destroy();\r\n            return xhr;\r\n        },\r\n\r\n        // Default URL for the model\'s representation on the server -- if you\'re\r\n        // using Backbone\'s restful methods, override this to change the endpoint\r\n        // that will be called.\r\n        url: function() {\r\n            var base = _.result(this, \'urlRoot\') || _.result(this.collection, \'url\') || urlError();\r\n            if (this.isNew()) return base;\r\n            return base + (base.charAt(base.length - 1) === \'/\' ? \'\' : \'/\') + encodeURIComponent(this.id);\r\n        },\r\n\r\n        // **parse** converts a response into the hash of attributes to be `set` on\r\n        // the model. The default implementation is just to pass the response along.\r\n        parse: function(resp, options) {\r\n            return resp;\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n            return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n            return this.id == null;\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n            return !this.validate || !this.validate(this.attributes, options);\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an\r\n        // `\"invalid\"` event and call the invalid callback, if specified.\r\n        _validate: function(attrs, options) {\r\n            if (!options.validate || !this.validate) return true;\r\n            attrs = _.extend({}, this.attributes, attrs);\r\n            var error = this.validationError = this.validate(attrs, options) || null;\r\n            if (!error) return true;\r\n            this.trigger(\'invalid\', this, error, options || {});\r\n            return false;\r\n        }\r\n\r\n    });\r\n\r\n    // Backbone.Collection\r\n    // -------------------\r\n\r\n    // Provides a standard collection class for our sets of models, ordered\r\n    // or unordered. If a `comparator` is specified, the Collection will maintain\r\n    // its models in sort order, as they\'re added and removed.\r\n    var Collection = Backbone.Collection = function(models, options) {\r\n        options || (options = {});\r\n        if (options.model) this.model = options.model;\r\n        if (options.comparator !== void 0) this.comparator = options.comparator;\r\n        this._reset();\r\n        this.initialize.apply(this, arguments);\r\n        if (models) this.reset(models, _.extend({silent: true}, options));\r\n    };\r\n\r\n    // Define the Collection\'s inheritable methods.\r\n    _.extend(Collection.prototype, Events, {\r\n\r\n        // The default model for a collection is just a **Backbone.Model**.\r\n        // This should be overridden in most cases.\r\n        model: Model,\r\n\r\n        // Initialize is an empty function by default. Override it with your own\r\n        // initialization logic.\r\n        initialize: function(){},\r\n\r\n        // The JSON representation of a Collection is an array of the\r\n        // models\' attributes.\r\n        toJSON: function(options) {\r\n            return this.map(function(model){ return model.toJSON(options); });\r\n        },\r\n\r\n        // Proxy `Backbone.sync` by default.\r\n        sync: function() {\r\n            return Backbone.sync.apply(this, arguments);\r\n        },\r\n\r\n        // Add a model, or list of models to the set.\r\n        add: function(models, options) {\r\n            models = _.isArray(models) ? models.slice() : [models];\r\n            options || (options = {});\r\n            var i, l, model, attrs, existing, doSort, add, at, sort, sortAttr;\r\n            add = [];\r\n            at = options.at;\r\n            sort = this.comparator && (at == null) && options.sort !== false;\r\n            sortAttr = _.isString(this.comparator) ? this.comparator : null;\r\n\r\n            // Turn bare objects into model references, and prevent invalid models\r\n            // from being added.\r\n            for (i = 0, l = models.length; i < l; i++) {\r\n                if (!(model = this._prepareModel(attrs = models[i], options))) {\r\n                    this.trigger(\'invalid\', this, attrs, options);\r\n                    continue;\r\n                }\r\n\r\n                // If a duplicate is found, prevent it from being added and\r\n                // optionally merge it into the existing model.\r\n                if (existing = this.get(model)) {\r\n                    if (options.merge) {\r\n                        existing.set(attrs === model ? model.attributes : attrs, options);\r\n                        if (sort && !doSort && existing.hasChanged(sortAttr)) doSort = true;\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                // This is a new model, push it to the `add` list.\r\n                add.push(model);\r\n\r\n                // Listen to added models\' events, and index models for lookup by\r\n                // `id` and by `cid`.\r\n                model.on(\'all\', this._onModelEvent, this);\r\n                this._byId[model.cid] = model;\r\n                if (model.id != null) this._byId[model.id] = model;\r\n            }\r\n\r\n            // See if sorting is needed, update `length` and splice in new models.\r\n            if (add.length) {\r\n                if (sort) doSort = true;\r\n                this.length += add.length;\r\n                if (at != null) {\r\n                    splice.apply(this.models, [at, 0].concat(add));\r\n                } else {\r\n                    push.apply(this.models, add);\r\n                }\r\n            }\r\n\r\n            // Silently sort the collection if appropriate.\r\n            if (doSort) this.sort({silent: true});\r\n\r\n            if (options.silent) return this;\r\n\r\n            // Trigger `add` events.\r\n            for (i = 0, l = add.length; i < l; i++) {\r\n                (model = add[i]).trigger(\'add\', model, this, options);\r\n            }\r\n\r\n            // Trigger `sort` if the collection was sorted.\r\n            if (doSort) this.trigger(\'sort\', this, options);\r\n\r\n            return this;\r\n        },\r\n\r\n        // Remove a model, or a list of models from the set.\r\n        remove: function(models, options) {\r\n            models = _.isArray(models) ? models.slice() : [models];\r\n            options || (options = {});\r\n            var i, l, index, model;\r\n            for (i = 0, l = models.length; i < l; i++) {\r\n                model = this.get(models[i]);\r\n                if (!model) continue;\r\n                delete this._byId[model.id];\r\n                delete this._byId[model.cid];\r\n                index = this.indexOf(model);\r\n                this.models.splice(index, 1);\r\n                this.length--;\r\n                if (!options.silent) {\r\n                    options.index = index;\r\n                    model.trigger(\'remove\', model, this, options);\r\n                }\r\n                this._removeReference(model);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        // Add a model to the end of the collection.\r\n        push: function(model, options) {\r\n            model = this._prepareModel(model, options);\r\n            this.add(model, _.extend({at: this.length}, options));\r\n            return model;\r\n        },\r\n\r\n        // Remove a model from the end of the collection.\r\n        pop: function(options) {\r\n            var model = this.at(this.length - 1);\r\n            this.remove(model, options);\r\n            return model;\r\n        },\r\n\r\n        // Add a model to the beginning of the collection.\r\n        unshift: function(model, options) {\r\n            model = this._prepareModel(model, options);\r\n            this.add(model, _.extend({at: 0}, options));\r\n            return model;\r\n        },\r\n\r\n        // Remove a model from the beginning of the collection.\r\n        shift: function(options) {\r\n            var model = this.at(0);\r\n            this.remove(model, options);\r\n            return model;\r\n        },\r\n\r\n        // Slice out a sub-array of models from the collection.\r\n        slice: function(begin, end) {\r\n            return this.models.slice(begin, end);\r\n        },\r\n\r\n        // Get a model from the set by id.\r\n        get: function(obj) {\r\n            if (obj == null) return void 0;\r\n            this._idAttr || (this._idAttr = this.model.prototype.idAttribute);\r\n            return this._byId[obj.id || obj.cid || obj[this._idAttr] || obj];\r\n        },\r\n\r\n        // Get the model at the given index.\r\n        at: function(index) {\r\n            return this.models[index];\r\n        },\r\n\r\n        // Return models with matching attributes. Useful for simple cases of `filter`.\r\n        where: function(attrs) {\r\n            if (_.isEmpty(attrs)) return [];\r\n            return this.filter(function(model) {\r\n                for (var key in attrs) {\r\n                    if (attrs[key] !== model.get(key)) return false;\r\n                }\r\n                return true;\r\n            });\r\n        },\r\n\r\n        // Force the collection to re-sort itself. You don\'t need to call this under\r\n        // normal circumstances, as the set will maintain sort order as each item\r\n        // is added.\r\n        sort: function(options) {\r\n            if (!this.comparator) {\r\n                throw new Error(\'Cannot sort a set without a comparator\');\r\n            }\r\n            options || (options = {});\r\n\r\n            // Run sort based on type of `comparator`.\r\n            if (_.isString(this.comparator) || this.comparator.length === 1) {\r\n                this.models = this.sortBy(this.comparator, this);\r\n            } else {\r\n                this.models.sort(_.bind(this.comparator, this));\r\n            }\r\n\r\n            if (!options.silent) this.trigger(\'sort\', this, options);\r\n            return this;\r\n        },\r\n\r\n        // Pluck an attribute from each model in the collection.\r\n        pluck: function(attr) {\r\n            return _.invoke(this.models, \'get\', attr);\r\n        },\r\n\r\n        // Smartly update a collection with a change set of models, adding,\r\n        // removing, and merging as necessary.\r\n        update: function(models, options) {\r\n            options = _.extend({add: true, merge: true, remove: true}, options);\r\n            if (options.parse) models = this.parse(models, options);\r\n            var model, i, l, existing;\r\n            var add = [], remove = [], modelMap = {};\r\n\r\n            // Allow a single model (or no argument) to be passed.\r\n            if (!_.isArray(models)) models = models ? [models] : [];\r\n\r\n            // Proxy to `add` for this case, no need to iterate...\r\n            if (options.add && !options.remove) return this.add(models, options);\r\n\r\n            // Determine which models to add and merge, and which to remove.\r\n            for (i = 0, l = models.length; i < l; i++) {\r\n                model = models[i];\r\n                existing = this.get(model);\r\n                if (options.remove && existing) modelMap[existing.cid] = true;\r\n                if ((options.add && !existing) || (options.merge && existing)) {\r\n                    add.push(model);\r\n                }\r\n            }\r\n            if (options.remove) {\r\n                for (i = 0, l = this.models.length; i < l; i++) {\r\n                    model = this.models[i];\r\n                    if (!modelMap[model.cid]) remove.push(model);\r\n                }\r\n            }\r\n\r\n            // Remove models (if applicable) before we add and merge the rest.\r\n            if (remove.length) this.remove(remove, options);\r\n            if (add.length) this.add(add, options);\r\n            return this;\r\n        },\r\n\r\n        // When you have more items than you want to add or remove individually,\r\n        // you can reset the entire set with a new list of models, without firing\r\n        // any `add` or `remove` events. Fires `reset` when finished.\r\n        reset: function(models, options) {\r\n            options || (options = {});\r\n            if (options.parse) models = this.parse(models, options);\r\n            for (var i = 0, l = this.models.length; i < l; i++) {\r\n                this._removeReference(this.models[i]);\r\n            }\r\n            options.previousModels = this.models;\r\n            this._reset();\r\n            if (models) this.add(models, _.extend({silent: true}, options));\r\n            if (!options.silent) this.trigger(\'reset\', this, options);\r\n            return this;\r\n        },\r\n\r\n        // Fetch the default set of models for this collection, resetting the\r\n        // collection when they arrive. If `update: true` is passed, the response\r\n        // data will be passed through the `update` method instead of `reset`.\r\n        fetch: function(options) {\r\n            options = options ? _.clone(options) : {};\r\n            if (options.parse === void 0) options.parse = true;\r\n            var success = options.success;\r\n            options.success = function(collection, resp, options) {\r\n                var method = options.update ? \'update\' : \'reset\';\r\n                collection[method](resp, options);\r\n                if (success) success(collection, resp, options);\r\n            };\r\n            return this.sync(\'read\', this, options);\r\n        },\r\n\r\n        // Create a new instance of a model in this collection. Add the model to the\r\n        // collection immediately, unless `wait: true` is passed, in which case we\r\n        // wait for the server to agree.\r\n        create: function(model, options) {\r\n            options = options ? _.clone(options) : {};\r\n            if (!(model = this._prepareModel(model, options))) return false;\r\n            if (!options.wait) this.add(model, options);\r\n            var collection = this;\r\n            var success = options.success;\r\n            options.success = function(model, resp, options) {\r\n                if (options.wait) collection.add(model, options);\r\n                if (success) success(model, resp, options);\r\n            };\r\n            model.save(null, options);\r\n            return model;\r\n        },\r\n\r\n        // **parse** converts a response into a list of models to be added to the\r\n        // collection. The default implementation is just to pass it through.\r\n        parse: function(resp, options) {\r\n            return resp;\r\n        },\r\n\r\n        // Create a new collection with an identical list of models as this one.\r\n        clone: function() {\r\n            return new this.constructor(this.models);\r\n        },\r\n\r\n        // Reset all internal state. Called when the collection is reset.\r\n        _reset: function() {\r\n            this.length = 0;\r\n            this.models = [];\r\n            this._byId  = {};\r\n        },\r\n\r\n        // Prepare a model or hash of attributes to be added to this collection.\r\n        _prepareModel: function(attrs, options) {\r\n            if (attrs instanceof Model) {\r\n                if (!attrs.collection) attrs.collection = this;\r\n                return attrs;\r\n            }\r\n            options || (options = {});\r\n            options.collection = this;\r\n            var model = new this.model(attrs, options);\r\n            if (!model._validate(attrs, options)) return false;\r\n            return model;\r\n        },\r\n\r\n        // Internal method to remove a model\'s ties to a collection.\r\n        _removeReference: function(model) {\r\n            if (this === model.collection) delete model.collection;\r\n            model.off(\'all\', this._onModelEvent, this);\r\n        },\r\n\r\n        // Internal method called every time a model in the set fires an event.\r\n        // Sets need to update their indexes when models change ids. All other\r\n        // events simply proxy through. \"add\" and \"remove\" events that originate\r\n        // in other collections are ignored.\r\n        _onModelEvent: function(event, model, collection, options) {\r\n            if ((event === \'add\' || event === \'remove\') && collection !== this) return;\r\n            if (event === \'destroy\') this.remove(model, options);\r\n            if (model && event === \'change:\' + model.idAttribute) {\r\n                delete this._byId[model.previous(model.idAttribute)];\r\n                if (model.id != null) this._byId[model.id] = model;\r\n            }\r\n            this.trigger.apply(this, arguments);\r\n        },\r\n\r\n        sortedIndex: function (model, value, context) {\r\n            value || (value = this.comparator);\r\n            var iterator = _.isFunction(value) ? value : function(model) {\r\n                return model.get(value);\r\n            };\r\n            return _.sortedIndex(this.models, model, iterator, context);\r\n        }\r\n\r\n    });\r\n\r\n    // Underscore methods that we want to implement on the Collection.\r\n    var methods = [\'forEach\', \'each\', \'map\', \'collect\', \'reduce\', \'foldl\',\r\n        \'inject\', \'reduceRight\', \'foldr\', \'find\', \'detect\', \'filter\', \'select\',\r\n        \'reject\', \'every\', \'all\', \'some\', \'any\', \'include\', \'contains\', \'invoke\',\r\n        \'max\', \'min\', \'toArray\', \'size\', \'first\', \'head\', \'take\', \'initial\', \'rest\',\r\n        \'tail\', \'drop\', \'last\', \'without\', \'indexOf\', \'shuffle\', \'lastIndexOf\',\r\n        \'isEmpty\', \'chain\'];\r\n\r\n    // Mix in each Underscore method as a proxy to `Collection#models`.\r\n    _.each(methods, function(method) {\r\n        Collection.prototype[method] = function() {\r\n            var args = slice.call(arguments);\r\n            args.unshift(this.models);\r\n            return _[method].apply(_, args);\r\n        };\r\n    });\r\n\r\n    // Underscore methods that take a property name as an argument.\r\n    var attributeMethods = [\'groupBy\', \'countBy\', \'sortBy\'];\r\n\r\n    // Use attributes instead of properties.\r\n    _.each(attributeMethods, function(method) {\r\n        Collection.prototype[method] = function(value, context) {\r\n            var iterator = _.isFunction(value) ? value : function(model) {\r\n                return model.get(value);\r\n            };\r\n            return _[method](this.models, iterator, context);\r\n        };\r\n    });\r\n\r\n    // Backbone.Router\r\n    // ---------------\r\n\r\n    // Routers map faux-URLs to actions, and fire events when routes are\r\n    // matched. Creating a new one sets its `routes` hash, if not set statically.\r\n    var Router = Backbone.Router = function(options) {\r\n        options || (options = {});\r\n        if (options.routes) this.routes = options.routes;\r\n        this._bindRoutes();\r\n        this.initialize.apply(this, arguments);\r\n    };\r\n\r\n    // Cached regular expressions for matching named param parts and splatted\r\n    // parts of route strings.\r\n    var optionalParam = /\\((.*?)\\)/g;\r\n    var namedParam    = /(\\(\\?)?:\\w+/g;\r\n    var splatParam    = /\\*\\w+/g;\r\n    var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\r\n\r\n    // Set up all inheritable **Backbone.Router** properties and methods.\r\n    _.extend(Router.prototype, Events, {\r\n\r\n        // Initialize is an empty function by default. Override it with your own\r\n        // initialization logic.\r\n        initialize: function(){},\r\n\r\n        // Manually bind a single named route to a callback. For example:\r\n        //\r\n        //     this.route(\'search/:query/p:num\', \'search\', function(query, num) {\r\n        //       ...\r\n        //     });\r\n        //\r\n        route: function(route, name, callback) {\r\n            if (!_.isRegExp(route)) route = this._routeToRegExp(route);\r\n            if (!callback) callback = this[name];\r\n            Backbone.history.route(route, _.bind(function(fragment) {\r\n                var args = this._extractParameters(route, fragment);\r\n                callback && callback.apply(this, args);\r\n                this.trigger.apply(this, [\'route:\' + name].concat(args));\r\n                this.trigger(\'route\', name, args);\r\n                Backbone.history.trigger(\'route\', this, name, args);\r\n            }, this));\r\n            return this;\r\n        },\r\n\r\n        // Simple proxy to `Backbone.history` to save a fragment into the history.\r\n        navigate: function(fragment, options) {\r\n            Backbone.history.navigate(fragment, options);\r\n            return this;\r\n        },\r\n\r\n        // Bind all defined routes to `Backbone.history`. We have to reverse the\r\n        // order of the routes here to support behavior where the most general\r\n        // routes can be defined at the bottom of the route map.\r\n        _bindRoutes: function() {\r\n            if (!this.routes) return;\r\n            var route, routes = _.keys(this.routes);\r\n            while ((route = routes.pop()) != null) {\r\n                this.route(route, this.routes[route]);\r\n            }\r\n        },\r\n\r\n        // Convert a route string into a regular expression, suitable for matching\r\n        // against the current location hash.\r\n        _routeToRegExp: function(route) {\r\n            route = route.replace(escapeRegExp, \'\\\\$&\')\r\n                .replace(optionalParam, \'(?:$1)?\')\r\n                .replace(namedParam, function(match, optional){\r\n                    return optional ? match : \'([^\\/]+)\';\r\n                })\r\n                .replace(splatParam, \'(.*?)\');\r\n            return new RegExp(\'^\' + route + \'$\');\r\n        },\r\n\r\n        // Given a route, and a URL fragment that it matches, return the array of\r\n        // extracted parameters.\r\n        _extractParameters: function(route, fragment) {\r\n            return route.exec(fragment).slice(1);\r\n        }\r\n\r\n    });\r\n\r\n    // Backbone.History\r\n    // ----------------\r\n\r\n    // Handles cross-browser history management, based on URL fragments. If the\r\n    // browser does not support `onhashchange`, falls back to polling.\r\n    var History = Backbone.History = function() {\r\n        this.handlers = [];\r\n        _.bindAll(this, \'checkUrl\');\r\n\r\n        // Ensure that `History` can be used outside of the browser.\r\n        if (typeof window !== \'undefined\') {\r\n            this.location = window.location;\r\n            this.history = window.history;\r\n        }\r\n    };\r\n\r\n    // Cached regex for stripping a leading hash/slash and trailing space.\r\n    var routeStripper = /^[#\\/]|\\s+$/g;\r\n\r\n    // Cached regex for stripping leading and trailing slashes.\r\n    var rootStripper = /^\\/+|\\/+$/g;\r\n\r\n    // Cached regex for detecting MSIE.\r\n    var isExplorer = /msie [\\w.]+/;\r\n\r\n    // Cached regex for removing a trailing slash.\r\n    var trailingSlash = /\\/$/;\r\n\r\n    // Has the history handling already been started?\r\n    History.started = false;\r\n\r\n    // Set up all inheritable **Backbone.History** properties and methods.\r\n    _.extend(History.prototype, Events, {\r\n\r\n        // The default interval to poll for hash changes, if necessary, is\r\n        // twenty times a second.\r\n        interval: 50,\r\n\r\n        // Gets the true hash value. Cannot use location.hash directly due to bug\r\n        // in Firefox where location.hash will always be decoded.\r\n        getHash: function(window) {\r\n            var match = (window || this).location.href.match(/#(.*)$/);\r\n            return match ? match[1] : \'\';\r\n        },\r\n\r\n        // Get the cross-browser normalized URL fragment, either from the URL,\r\n        // the hash, or the override.\r\n        getFragment: function(fragment, forcePushState) {\r\n            if (fragment == null) {\r\n                if (this._hasPushState || !this._wantsHashChange || forcePushState) {\r\n                    fragment = this.location.pathname;\r\n                    var root = this.root.replace(trailingSlash, \'\');\r\n                    if (!fragment.indexOf(root)) fragment = fragment.substr(root.length);\r\n                } else {\r\n                    fragment = this.getHash();\r\n                }\r\n            }\r\n            return fragment.replace(routeStripper, \'\');\r\n        },\r\n\r\n        // Start the hash change handling, returning `true` if the current URL matches\r\n        // an existing route, and `false` otherwise.\r\n        start: function(options) {\r\n            if (History.started) throw new Error(\"Backbone.history has already been started\");\r\n            History.started = true;\r\n\r\n            // Figure out the initial configuration. Do we need an iframe?\r\n            // Is pushState desired ... is it available?\r\n            this.options          = _.extend({}, {root: \'/\'}, this.options, options);\r\n            this.root             = this.options.root;\r\n            this._wantsHashChange = this.options.hashChange !== false;\r\n            this._wantsPushState  = !!this.options.pushState;\r\n            this._hasPushState    = !!(this.options.pushState && this.history && this.history.pushState);\r\n            var fragment          = this.getFragment();\r\n            var docMode           = document.documentMode;\r\n            var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));\r\n\r\n            // Normalize root to always include a leading and trailing slash.\r\n            this.root = (\'/\' + this.root + \'/\').replace(rootStripper, \'/\');\r\n\r\n            if (oldIE && this._wantsHashChange) {\r\n                this.iframe = Backbone.$(\'<iframe src=\"javascript:0\" tabindex=\"-1\" />\').hide().appendTo(\'body\')[0].contentWindow;\r\n                this.navigate(fragment);\r\n            }\r\n\r\n            // Depending on whether we\'re using pushState or hashes, and whether\r\n            // \'onhashchange\' is supported, determine how we check the URL state.\r\n            if (this._hasPushState) {\r\n                Backbone.$(window).on(\'popstate\', this.checkUrl);\r\n            } else if (this._wantsHashChange && (\'onhashchange\' in window) && !oldIE) {\r\n                Backbone.$(window).on(\'hashchange\', this.checkUrl);\r\n            } else if (this._wantsHashChange) {\r\n                this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\r\n            }\r\n\r\n            // Determine if we need to change the base url, for a pushState link\r\n            // opened by a non-pushState browser.\r\n            this.fragment = fragment;\r\n            var loc = this.location;\r\n            var atRoot = loc.pathname.replace(/[^\\/]$/, \'$&/\') === this.root;\r\n\r\n            // If we\'ve started off with a route from a `pushState`-enabled browser,\r\n            // but we\'re currently in a browser that doesn\'t support it...\r\n            if (this._wantsHashChange && this._wantsPushState && !this._hasPushState && !atRoot) {\r\n                this.fragment = this.getFragment(null, true);\r\n                this.location.replace(this.root + this.location.search + \'#\' + this.fragment);\r\n                // Return immediately as browser will do redirect to new url\r\n                return true;\r\n\r\n                // Or if we\'ve started out with a hash-based route, but we\'re currently\r\n                // in a browser where it could be `pushState`-based instead...\r\n            } else if (this._wantsPushState && this._hasPushState && atRoot && loc.hash) {\r\n                this.fragment = this.getHash().replace(routeStripper, \'\');\r\n                this.history.replaceState({}, document.title, this.root + this.fragment + loc.search);\r\n            }\r\n\r\n            if (!this.options.silent) return this.loadUrl();\r\n        },\r\n\r\n        // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\r\n        // but possibly useful for unit testing Routers.\r\n        stop: function() {\r\n            Backbone.$(window).off(\'popstate\', this.checkUrl).off(\'hashchange\', this.checkUrl);\r\n            clearInterval(this._checkUrlInterval);\r\n            History.started = false;\r\n        },\r\n\r\n        // Add a route to be tested when the fragment changes. Routes added later\r\n        // may override previous routes.\r\n        route: function(route, callback) {\r\n            this.handlers.unshift({route: route, callback: callback});\r\n        },\r\n\r\n        // Checks the current URL to see if it has changed, and if it has,\r\n        // calls `loadUrl`, normalizing across the hidden iframe.\r\n        checkUrl: function(e) {\r\n            var current = this.getFragment();\r\n            if (current === this.fragment && this.iframe) {\r\n                current = this.getFragment(this.getHash(this.iframe));\r\n            }\r\n            if (current === this.fragment) return false;\r\n            if (this.iframe) this.navigate(current);\r\n            this.loadUrl() || this.loadUrl(this.getHash());\r\n        },\r\n\r\n        // Attempt to load the current URL fragment. If a route succeeds with a\r\n        // match, returns `true`. If no defined routes matches the fragment,\r\n        // returns `false`.\r\n        loadUrl: function(fragmentOverride) {\r\n            var fragment = this.fragment = this.getFragment(fragmentOverride);\r\n            var matched = _.any(this.handlers, function(handler) {\r\n                if (handler.route.test(fragment)) {\r\n                    handler.callback(fragment);\r\n                    return true;\r\n                }\r\n            });\r\n            return matched;\r\n        },\r\n\r\n        // Save a fragment into the hash history, or replace the URL state if the\r\n        // \'replace\' option is passed. You are responsible for properly URL-encoding\r\n        // the fragment in advance.\r\n        //\r\n        // The options object can contain `trigger: true` if you wish to have the\r\n        // route callback be fired (not usually desirable), or `replace: true`, if\r\n        // you wish to modify the current URL without adding an entry to the history.\r\n        navigate: function(fragment, options) {\r\n            if (!History.started) return false;\r\n            if (!options || options === true) options = {trigger: options};\r\n            fragment = this.getFragment(fragment || \'\');\r\n            if (this.fragment === fragment) return;\r\n            this.fragment = fragment;\r\n            var url = this.root + fragment;\r\n\r\n            // If pushState is available, we use it to set the fragment as a real URL.\r\n            if (this._hasPushState) {\r\n                this.history[options.replace ? \'replaceState\' : \'pushState\']({}, document.title, url);\r\n\r\n                // If hash changes haven\'t been explicitly disabled, update the hash\r\n                // fragment to store history.\r\n            } else if (this._wantsHashChange) {\r\n                this._updateHash(this.location, fragment, options.replace);\r\n                if (this.iframe && (fragment !== this.getFragment(this.getHash(this.iframe)))) {\r\n                    // Opening and closing the iframe tricks IE7 and earlier to push a\r\n                    // history entry on hash-tag change.  When replace is true, we don\'t\r\n                    // want this.\r\n                    if(!options.replace) this.iframe.document.open().close();\r\n                    this._updateHash(this.iframe.location, fragment, options.replace);\r\n                }\r\n\r\n                // If you\'ve told us that you explicitly don\'t want fallback hashchange-\r\n                // based history, then `navigate` becomes a page refresh.\r\n            } else {\r\n                return this.location.assign(url);\r\n            }\r\n            if (options.trigger) this.loadUrl(fragment);\r\n        },\r\n\r\n        // Update the hash location, either replacing the current entry, or adding\r\n        // a new one to the browser history.\r\n        _updateHash: function(location, fragment, replace) {\r\n            if (replace) {\r\n                var href = location.href.replace(/(javascript:|#).*$/, \'\');\r\n                location.replace(href + \'#\' + fragment);\r\n            } else {\r\n                // Some browsers require that `hash` contains a leading #.\r\n                location.hash = \'#\' + fragment;\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    // Create the default Backbone.history.\r\n    Backbone.history = new History;\r\n\r\n    // Backbone.View\r\n    // -------------\r\n\r\n    // Creating a Backbone.View creates its initial element outside of the DOM,\r\n    // if an existing element is not provided...\r\n    var View = Backbone.View = function(options) {\r\n        this.cid = _.uniqueId(\'view\');\r\n        this._configure(options || {});\r\n        this._ensureElement();\r\n        this.initialize.apply(this, arguments);\r\n        this.delegateEvents();\r\n    };\r\n\r\n    // Cached regex to split keys for `delegate`.\r\n    var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    // List of view options to be merged as properties.\r\n    var viewOptions = [\'model\', \'collection\', \'el\', \'id\', \'attributes\', \'className\', \'tagName\', \'events\'];\r\n\r\n    // Set up all inheritable **Backbone.View** properties and methods.\r\n    _.extend(View.prototype, Events, {\r\n\r\n        // The default `tagName` of a View\'s element is `\"div\"`.\r\n        tagName: \'div\',\r\n\r\n        // jQuery delegate for element lookup, scoped to DOM elements within the\r\n        // current view. This should be prefered to global lookups where possible.\r\n        $: function(selector) {\r\n            return this.$el.find(selector);\r\n        },\r\n\r\n        // Initialize is an empty function by default. Override it with your own\r\n        // initialization logic.\r\n        initialize: function(){},\r\n\r\n        // **render** is the core function that your view should override, in order\r\n        // to populate its element (`this.el`), with the appropriate HTML. The\r\n        // convention is for **render** to always return `this`.\r\n        render: function() {\r\n            return this;\r\n        },\r\n\r\n        // Remove this view by taking the element out of the DOM, and removing any\r\n        // applicable Backbone.Events listeners.\r\n        remove: function() {\r\n            this.$el.remove();\r\n            this.stopListening();\r\n            return this;\r\n        },\r\n\r\n        // Change the view\'s element (`this.el` property), including event\r\n        // re-delegation.\r\n        setElement: function(element, delegate) {\r\n            if (this.$el) this.undelegateEvents();\r\n            this.$el = element instanceof Backbone.$ ? element : Backbone.$(element);\r\n            this.el = this.$el[0];\r\n            if (delegate !== false) this.delegateEvents();\r\n            return this;\r\n        },\r\n\r\n        // Set callbacks, where `this.events` is a hash of\r\n        //\r\n        // *{\"event selector\": \"callback\"}*\r\n        //\r\n        //     {\r\n        //       \'mousedown .title\':  \'edit\',\r\n        //       \'click .button\':     \'save\'\r\n        //       \'click .open\':       function(e) { ... }\r\n        //     }\r\n        //\r\n        // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n        // Uses event delegation for efficiency.\r\n        // Omitting the selector binds the event to `this.el`.\r\n        // This only works for delegate-able events: not `focus`, `blur`, and\r\n        // not `change`, `submit`, and `reset` in Internet Explorer.\r\n        delegateEvents: function(events) {\r\n            if (!(events || (events = _.result(this, \'events\')))) return this;\r\n            this.undelegateEvents();\r\n            for (var key in events) {\r\n                var method = events[key];\r\n                if (!_.isFunction(method)) method = this[events[key]];\r\n                if (!method) throw new Error(\'Method \"\' + events[key] + \'\" does not exist\');\r\n                var match = key.match(delegateEventSplitter);\r\n                var eventName = match[1], selector = match[2];\r\n                method = _.bind(method, this);\r\n                eventName += \'.delegateEvents\' + this.cid;\r\n                if (selector === \'\') {\r\n                    this.$el.on(eventName, method);\r\n                } else {\r\n                    this.$el.on(eventName, selector, method);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        // Clears all callbacks previously bound to the view with `delegateEvents`.\r\n        // You usually don\'t need to use this, but may wish to if you have multiple\r\n        // Backbone views attached to the same DOM element.\r\n        undelegateEvents: function() {\r\n            this.$el.off(\'.delegateEvents\' + this.cid);\r\n            return this;\r\n        },\r\n\r\n        // Performs the initial configuration of a View with a set of options.\r\n        // Keys with special meaning *(model, collection, id, className)*, are\r\n        // attached directly to the view.\r\n        _configure: function(options) {\r\n            if (this.options) options = _.extend({}, _.result(this, \'options\'), options);\r\n            _.extend(this, _.pick(options, viewOptions));\r\n            this.options = options;\r\n        },\r\n\r\n        // Ensure that the View has a DOM element to render into.\r\n        // If `this.el` is a string, pass it through `$()`, take the first\r\n        // matching element, and re-assign it to `el`. Otherwise, create\r\n        // an element from the `id`, `className` and `tagName` properties.\r\n        _ensureElement: function() {\r\n            if (!this.el) {\r\n                var attrs = _.extend({}, _.result(this, \'attributes\'));\r\n                if (this.id) attrs.id = _.result(this, \'id\');\r\n                if (this.className) attrs[\'class\'] = _.result(this, \'className\');\r\n                var $el = Backbone.$(\'<\' + _.result(this, \'tagName\') + \'>\').attr(attrs);\r\n                this.setElement($el, false);\r\n            } else {\r\n                this.setElement(_.result(this, \'el\'), false);\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    // Backbone.sync\r\n    // -------------\r\n\r\n    // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n    var methodMap = {\r\n        \'create\': \'POST\',\r\n        \'update\': \'PUT\',\r\n        \'patch\':  \'PATCH\',\r\n        \'delete\': \'DELETE\',\r\n        \'read\':   \'GET\'\r\n    };\r\n\r\n    // Override this function to change the manner in which Backbone persists\r\n    // models to the server. You will be passed the type of request, and the\r\n    // model in question. By default, makes a RESTful Ajax request\r\n    // to the model\'s `url()`. Some possible customizations could be:\r\n    //\r\n    // * Use `setTimeout` to batch rapid-fire updates into a single request.\r\n    // * Send up the models as XML instead of JSON.\r\n    // * Persist models via WebSockets instead of Ajax.\r\n    //\r\n    // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\r\n    // as `POST`, with a `_method` parameter containing the true HTTP method,\r\n    // as well as all requests with the body as `application/x-www-form-urlencoded`\r\n    // instead of `application/json` with the model in a param named `model`.\r\n    // Useful when interfacing with server-side languages like **PHP** that make\r\n    // it difficult to read the body of `PUT` requests.\r\n    Backbone.sync = function(method, model, options) {\r\n        var type = methodMap[method];\r\n\r\n        // Default options, unless specified.\r\n        _.defaults(options || (options = {}), {\r\n            emulateHTTP: Backbone.emulateHTTP,\r\n            emulateJSON: Backbone.emulateJSON\r\n        });\r\n\r\n        // Default JSON-request options.\r\n        var params = {type: type, dataType: \'json\'};\r\n\r\n        // Ensure that we have a URL.\r\n        if (!options.url) {\r\n            params.url = _.result(model, \'url\') || urlError();\r\n        }\r\n\r\n        // Ensure that we have the appropriate request data.\r\n        if (options.data == null && model && (method === \'create\' || method === \'update\' || method === \'patch\')) {\r\n            params.contentType = \'application/json\';\r\n            params.data = JSON.stringify(options.attrs || model.toJSON(options));\r\n        }\r\n\r\n        // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n        if (options.emulateJSON) {\r\n            params.contentType = \'application/x-www-form-urlencoded\';\r\n            params.data = params.data ? {model: params.data} : {};\r\n        }\r\n\r\n        // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n        // And an `X-HTTP-Method-Override` header.\r\n        if (options.emulateHTTP && (type === \'PUT\' || type === \'DELETE\' || type === \'PATCH\')) {\r\n            params.type = \'POST\';\r\n            if (options.emulateJSON) params.data._method = type;\r\n            var beforeSend = options.beforeSend;\r\n            options.beforeSend = function(xhr) {\r\n                xhr.setRequestHeader(\'X-HTTP-Method-Override\', type);\r\n                if (beforeSend) return beforeSend.apply(this, arguments);\r\n            };\r\n        }\r\n\r\n        // Don\'t process data on a non-GET request.\r\n        if (params.type !== \'GET\' && !options.emulateJSON) {\r\n            params.processData = false;\r\n        }\r\n\r\n        var success = options.success;\r\n        options.success = function(resp) {\r\n            if (success) success(model, resp, options);\r\n            model.trigger(\'sync\', model, resp, options);\r\n        };\r\n\r\n        var error = options.error;\r\n        options.error = function(xhr) {\r\n            if (error) error(model, xhr, options);\r\n            model.trigger(\'error\', model, xhr, options);\r\n        };\r\n\r\n        // Make the request, allowing the user to override any Ajax options.\r\n        var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\r\n        model.trigger(\'request\', model, xhr, options);\r\n        return xhr;\r\n    };\r\n\r\n    // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\r\n    Backbone.ajax = function() {\r\n        return Backbone.$.ajax.apply(Backbone.$, arguments);\r\n    };\r\n\r\n    // Helpers\r\n    // -------\r\n\r\n    // Helper function to correctly set up the prototype chain, for subclasses.\r\n    // Similar to `goog.inherits`, but uses a hash of prototype properties and\r\n    // class properties to be extended.\r\n    var extend = function(protoProps, staticProps) {\r\n        var parent = this;\r\n        var child;\r\n\r\n        // The constructor function for the new subclass is either defined by you\r\n        // (the \"constructor\" property in your `extend` definition), or defaulted\r\n        // by us to simply call the parent\'s constructor.\r\n        if (protoProps && _.has(protoProps, \'constructor\')) {\r\n            child = protoProps.constructor;\r\n        } else {\r\n            child = function(){ return parent.apply(this, arguments); };\r\n        }\r\n\r\n        // Add static properties to the constructor function, if supplied.\r\n        _.extend(child, parent, staticProps);\r\n\r\n        // Set the prototype chain to inherit from `parent`, without calling\r\n        // `parent`\'s constructor function.\r\n        var Surrogate = function(){ this.constructor = child; };\r\n        Surrogate.prototype = parent.prototype;\r\n        child.prototype = new Surrogate;\r\n\r\n        // Add prototype properties (instance properties) to the subclass,\r\n        // if supplied.\r\n        if (protoProps) _.extend(child.prototype, protoProps);\r\n\r\n        // Set a convenience property in case the parent\'s prototype is needed\r\n        // later.\r\n        child.__super__ = parent.prototype;\r\n\r\n        return child;\r\n    };\r\n\r\n    // Set up inheritance for the model, collection, router, view and history.\r\n    Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\r\n\r\n    // Throw an error when a URL is needed, and none is supplied.\r\n    var urlError = function() {\r\n        throw new Error(\'A \"url\" property or function must be specified\');\r\n    };\r\n\r\n}).call(this);\n//# sourceURL=/E:/Javascript projects/Heartbeat/App/Heartbeat/www/src/js/libs/backbone.js");

define("backbone", ["underscore","jquery"], (function (global) {
    return function () {
        var ret, fn;
        return ret || global.Backbone;
    };
}(this)));

eval("/**\r\n * Created by DTuzenkov on 10/23/14.\r\n */\r\n/**\r\n * Utils for our app\r\n */\r\n\r\ndefine(\'../libs/utils\',[\'underscore\'], function (_) {\r\n    var Utils = {};\r\n\r\n    Utils.translate = function (string, params) {\r\n        return string;\r\n    };\r\n\r\n    return Utils;\r\n});\n//# sourceURL=/../libs/utils.js");

eval("// MarionetteJS (Backbone.Marionette)\n// ----------------------------------\n// v2.3.1\n//\n// Copyright (c)2015 Derick Bailey, Muted Solutions, LLC.\n// Distributed under MIT license\n//\n// http://marionettejs.com\n\n\n/*!\n * Includes BabySitter\n * https://github.com/marionettejs/backbone.babysitter/\n *\n * Includes Wreqr\n * https://github.com/marionettejs/backbone.wreqr/\n */\n\n\n(function(root, factory) {\n\n  /* istanbul ignore next */\n  if (typeof define === \'function\' && define.amd) {\n    define(\'marionette\',[\'backbone\', \'underscore\'], function(Backbone, _) {\n      return (root.Marionette = root.Mn = factory(root, Backbone, _));\n    });\n  } else if (typeof exports !== \'undefined\') {\n    var Backbone = require(\'backbone\');\n    var _ = require(\'underscore\');\n    module.exports = factory(root, Backbone, _);\n  } else {\n    root.Marionette = root.Mn = factory(root, root.Backbone, root._);\n  }\n\n}(this, function(root, Backbone, _) {\n  \'use strict\';\n\n  /* istanbul ignore next */\n  // Backbone.BabySitter\n  // -------------------\n  // v0.1.5\n  //\n  // Copyright (c)2014 Derick Bailey, Muted Solutions, LLC.\n  // Distributed under MIT license\n  //\n  // http://github.com/marionettejs/backbone.babysitter\n  (function(Backbone, _) {\n    \"use strict\";\n    var previousChildViewContainer = Backbone.ChildViewContainer;\n    // BabySitter.ChildViewContainer\n    // -----------------------------\n    //\n    // Provide a container to store, retrieve and\n    // shut down child views.\n    Backbone.ChildViewContainer = function(Backbone, _) {\n      // Container Constructor\n      // ---------------------\n      var Container = function(views) {\n        this._views = {};\n        this._indexByModel = {};\n        this._indexByCustom = {};\n        this._updateLength();\n        _.each(views, this.add, this);\n      };\n      // Container Methods\n      // -----------------\n      _.extend(Container.prototype, {\n        // Add a view to this container. Stores the view\n        // by `cid` and makes it searchable by the model\n        // cid (and model itself). Optionally specify\n        // a custom key to store an retrieve the view.\n        add: function(view, customIndex) {\n          var viewCid = view.cid;\n          // store the view\n          this._views[viewCid] = view;\n          // index it by model\n          if (view.model) {\n            this._indexByModel[view.model.cid] = viewCid;\n          }\n          // index by custom\n          if (customIndex) {\n            this._indexByCustom[customIndex] = viewCid;\n          }\n          this._updateLength();\n          return this;\n        },\n        // Find a view by the model that was attached to\n        // it. Uses the model\'s `cid` to find it.\n        findByModel: function(model) {\n          return this.findByModelCid(model.cid);\n        },\n        // Find a view by the `cid` of the model that was attached to\n        // it. Uses the model\'s `cid` to find the view `cid` and\n        // retrieve the view using it.\n        findByModelCid: function(modelCid) {\n          var viewCid = this._indexByModel[modelCid];\n          return this.findByCid(viewCid);\n        },\n        // Find a view by a custom indexer.\n        findByCustom: function(index) {\n          var viewCid = this._indexByCustom[index];\n          return this.findByCid(viewCid);\n        },\n        // Find by index. This is not guaranteed to be a\n        // stable index.\n        findByIndex: function(index) {\n          return _.values(this._views)[index];\n        },\n        // retrieve a view by its `cid` directly\n        findByCid: function(cid) {\n          return this._views[cid];\n        },\n        // Remove a view\n        remove: function(view) {\n          var viewCid = view.cid;\n          // delete model index\n          if (view.model) {\n            delete this._indexByModel[view.model.cid];\n          }\n          // delete custom index\n          _.any(this._indexByCustom, function(cid, key) {\n            if (cid === viewCid) {\n              delete this._indexByCustom[key];\n              return true;\n            }\n          }, this);\n          // remove the view from the container\n          delete this._views[viewCid];\n          // update the length\n          this._updateLength();\n          return this;\n        },\n        // Call a method on every view in the container,\n        // passing parameters to the call method one at a\n        // time, like `function.call`.\n        call: function(method) {\n          this.apply(method, _.tail(arguments));\n        },\n        // Apply a method on every view in the container,\n        // passing parameters to the call method one at a\n        // time, like `function.apply`.\n        apply: function(method, args) {\n          _.each(this._views, function(view) {\n            if (_.isFunction(view[method])) {\n              view[method].apply(view, args || []);\n            }\n          });\n        },\n        // Update the `.length` attribute on this container\n        _updateLength: function() {\n          this.length = _.size(this._views);\n        }\n      });\n      // Borrowing this code from Backbone.Collection:\n      // http://backbonejs.org/docs/backbone.html#section-106\n      //\n      // Mix in methods from Underscore, for iteration, and other\n      // collection related features.\n      var methods = [ \"forEach\", \"each\", \"map\", \"find\", \"detect\", \"filter\", \"select\", \"reject\", \"every\", \"all\", \"some\", \"any\", \"include\", \"contains\", \"invoke\", \"toArray\", \"first\", \"initial\", \"rest\", \"last\", \"without\", \"isEmpty\", \"pluck\" ];\n      _.each(methods, function(method) {\n        Container.prototype[method] = function() {\n          var views = _.values(this._views);\n          var args = [ views ].concat(_.toArray(arguments));\n          return _[method].apply(_, args);\n        };\n      });\n      // return the public API\n      return Container;\n    }(Backbone, _);\n    Backbone.ChildViewContainer.VERSION = \"0.1.5\";\n    Backbone.ChildViewContainer.noConflict = function() {\n      Backbone.ChildViewContainer = previousChildViewContainer;\n      return this;\n    };\n    return Backbone.ChildViewContainer;\n  })(Backbone, _);\n\n  /* istanbul ignore next */\n  // Backbone.Wreqr (Backbone.Marionette)\n  // ----------------------------------\n  // v1.3.1\n  //\n  // Copyright (c)2014 Derick Bailey, Muted Solutions, LLC.\n  // Distributed under MIT license\n  //\n  // http://github.com/marionettejs/backbone.wreqr\n  (function(Backbone, _) {\n    \"use strict\";\n    var previousWreqr = Backbone.Wreqr;\n    var Wreqr = Backbone.Wreqr = {};\n    Backbone.Wreqr.VERSION = \"1.3.1\";\n    Backbone.Wreqr.noConflict = function() {\n      Backbone.Wreqr = previousWreqr;\n      return this;\n    };\n    // Handlers\n    // --------\n    // A registry of functions to call, given a name\n    Wreqr.Handlers = function(Backbone, _) {\n      \"use strict\";\n      // Constructor\n      // -----------\n      var Handlers = function(options) {\n        this.options = options;\n        this._wreqrHandlers = {};\n        if (_.isFunction(this.initialize)) {\n          this.initialize(options);\n        }\n      };\n      Handlers.extend = Backbone.Model.extend;\n      // Instance Members\n      // ----------------\n      _.extend(Handlers.prototype, Backbone.Events, {\n        // Add multiple handlers using an object literal configuration\n        setHandlers: function(handlers) {\n          _.each(handlers, function(handler, name) {\n            var context = null;\n            if (_.isObject(handler) && !_.isFunction(handler)) {\n              context = handler.context;\n              handler = handler.callback;\n            }\n            this.setHandler(name, handler, context);\n          }, this);\n        },\n        // Add a handler for the given name, with an\n        // optional context to run the handler within\n        setHandler: function(name, handler, context) {\n          var config = {\n            callback: handler,\n            context: context\n          };\n          this._wreqrHandlers[name] = config;\n          this.trigger(\"handler:add\", name, handler, context);\n        },\n        // Determine whether or not a handler is registered\n        hasHandler: function(name) {\n          return !!this._wreqrHandlers[name];\n        },\n        // Get the currently registered handler for\n        // the specified name. Throws an exception if\n        // no handler is found.\n        getHandler: function(name) {\n          var config = this._wreqrHandlers[name];\n          if (!config) {\n            return;\n          }\n          return function() {\n            var args = Array.prototype.slice.apply(arguments);\n            return config.callback.apply(config.context, args);\n          };\n        },\n        // Remove a handler for the specified name\n        removeHandler: function(name) {\n          delete this._wreqrHandlers[name];\n        },\n        // Remove all handlers from this registry\n        removeAllHandlers: function() {\n          this._wreqrHandlers = {};\n        }\n      });\n      return Handlers;\n    }(Backbone, _);\n    // Wreqr.CommandStorage\n    // --------------------\n    //\n    // Store and retrieve commands for execution.\n    Wreqr.CommandStorage = function() {\n      \"use strict\";\n      // Constructor function\n      var CommandStorage = function(options) {\n        this.options = options;\n        this._commands = {};\n        if (_.isFunction(this.initialize)) {\n          this.initialize(options);\n        }\n      };\n      // Instance methods\n      _.extend(CommandStorage.prototype, Backbone.Events, {\n        // Get an object literal by command name, that contains\n        // the `commandName` and the `instances` of all commands\n        // represented as an array of arguments to process\n        getCommands: function(commandName) {\n          var commands = this._commands[commandName];\n          // we don\'t have it, so add it\n          if (!commands) {\n            // build the configuration\n            commands = {\n              command: commandName,\n              instances: []\n            };\n            // store it\n            this._commands[commandName] = commands;\n          }\n          return commands;\n        },\n        // Add a command by name, to the storage and store the\n        // args for the command\n        addCommand: function(commandName, args) {\n          var command = this.getCommands(commandName);\n          command.instances.push(args);\n        },\n        // Clear all commands for the given `commandName`\n        clearCommands: function(commandName) {\n          var command = this.getCommands(commandName);\n          command.instances = [];\n        }\n      });\n      return CommandStorage;\n    }();\n    // Wreqr.Commands\n    // --------------\n    //\n    // A simple command pattern implementation. Register a command\n    // handler and execute it.\n    Wreqr.Commands = function(Wreqr) {\n      \"use strict\";\n      return Wreqr.Handlers.extend({\n        // default storage type\n        storageType: Wreqr.CommandStorage,\n        constructor: function(options) {\n          this.options = options || {};\n          this._initializeStorage(this.options);\n          this.on(\"handler:add\", this._executeCommands, this);\n          var args = Array.prototype.slice.call(arguments);\n          Wreqr.Handlers.prototype.constructor.apply(this, args);\n        },\n        // Execute a named command with the supplied args\n        execute: function(name, args) {\n          name = arguments[0];\n          args = Array.prototype.slice.call(arguments, 1);\n          if (this.hasHandler(name)) {\n            this.getHandler(name).apply(this, args);\n          } else {\n            this.storage.addCommand(name, args);\n          }\n        },\n        // Internal method to handle bulk execution of stored commands\n        _executeCommands: function(name, handler, context) {\n          var command = this.storage.getCommands(name);\n          // loop through and execute all the stored command instances\n          _.each(command.instances, function(args) {\n            handler.apply(context, args);\n          });\n          this.storage.clearCommands(name);\n        },\n        // Internal method to initialize storage either from the type\'s\n        // `storageType` or the instance `options.storageType`.\n        _initializeStorage: function(options) {\n          var storage;\n          var StorageType = options.storageType || this.storageType;\n          if (_.isFunction(StorageType)) {\n            storage = new StorageType();\n          } else {\n            storage = StorageType;\n          }\n          this.storage = storage;\n        }\n      });\n    }(Wreqr);\n    // Wreqr.RequestResponse\n    // ---------------------\n    //\n    // A simple request/response implementation. Register a\n    // request handler, and return a response from it\n    Wreqr.RequestResponse = function(Wreqr) {\n      \"use strict\";\n      return Wreqr.Handlers.extend({\n        request: function() {\n          var name = arguments[0];\n          var args = Array.prototype.slice.call(arguments, 1);\n          if (this.hasHandler(name)) {\n            return this.getHandler(name).apply(this, args);\n          }\n        }\n      });\n    }(Wreqr);\n    // Event Aggregator\n    // ----------------\n    // A pub-sub object that can be used to decouple various parts\n    // of an application through event-driven architecture.\n    Wreqr.EventAggregator = function(Backbone, _) {\n      \"use strict\";\n      var EA = function() {};\n      // Copy the `extend` function used by Backbone\'s classes\n      EA.extend = Backbone.Model.extend;\n      // Copy the basic Backbone.Events on to the event aggregator\n      _.extend(EA.prototype, Backbone.Events);\n      return EA;\n    }(Backbone, _);\n    // Wreqr.Channel\n    // --------------\n    //\n    // An object that wraps the three messaging systems:\n    // EventAggregator, RequestResponse, Commands\n    Wreqr.Channel = function(Wreqr) {\n      \"use strict\";\n      var Channel = function(channelName) {\n        this.vent = new Backbone.Wreqr.EventAggregator();\n        this.reqres = new Backbone.Wreqr.RequestResponse();\n        this.commands = new Backbone.Wreqr.Commands();\n        this.channelName = channelName;\n      };\n      _.extend(Channel.prototype, {\n        // Remove all handlers from the messaging systems of this channel\n        reset: function() {\n          this.vent.off();\n          this.vent.stopListening();\n          this.reqres.removeAllHandlers();\n          this.commands.removeAllHandlers();\n          return this;\n        },\n        // Connect a hash of events; one for each messaging system\n        connectEvents: function(hash, context) {\n          this._connect(\"vent\", hash, context);\n          return this;\n        },\n        connectCommands: function(hash, context) {\n          this._connect(\"commands\", hash, context);\n          return this;\n        },\n        connectRequests: function(hash, context) {\n          this._connect(\"reqres\", hash, context);\n          return this;\n        },\n        // Attach the handlers to a given message system `type`\n        _connect: function(type, hash, context) {\n          if (!hash) {\n            return;\n          }\n          context = context || this;\n          var method = type === \"vent\" ? \"on\" : \"setHandler\";\n          _.each(hash, function(fn, eventName) {\n            this[type][method](eventName, _.bind(fn, context));\n          }, this);\n        }\n      });\n      return Channel;\n    }(Wreqr);\n    // Wreqr.Radio\n    // --------------\n    //\n    // An object that lets you communicate with many channels.\n    Wreqr.radio = function(Wreqr) {\n      \"use strict\";\n      var Radio = function() {\n        this._channels = {};\n        this.vent = {};\n        this.commands = {};\n        this.reqres = {};\n        this._proxyMethods();\n      };\n      _.extend(Radio.prototype, {\n        channel: function(channelName) {\n          if (!channelName) {\n            throw new Error(\"Channel must receive a name\");\n          }\n          return this._getChannel(channelName);\n        },\n        _getChannel: function(channelName) {\n          var channel = this._channels[channelName];\n          if (!channel) {\n            channel = new Wreqr.Channel(channelName);\n            this._channels[channelName] = channel;\n          }\n          return channel;\n        },\n        _proxyMethods: function() {\n          _.each([ \"vent\", \"commands\", \"reqres\" ], function(system) {\n            _.each(messageSystems[system], function(method) {\n              this[system][method] = proxyMethod(this, system, method);\n            }, this);\n          }, this);\n        }\n      });\n      var messageSystems = {\n        vent: [ \"on\", \"off\", \"trigger\", \"once\", \"stopListening\", \"listenTo\", \"listenToOnce\" ],\n        commands: [ \"execute\", \"setHandler\", \"setHandlers\", \"removeHandler\", \"removeAllHandlers\" ],\n        reqres: [ \"request\", \"setHandler\", \"setHandlers\", \"removeHandler\", \"removeAllHandlers\" ]\n      };\n      var proxyMethod = function(radio, system, method) {\n        return function(channelName) {\n          var messageSystem = radio._getChannel(channelName)[system];\n          var args = Array.prototype.slice.call(arguments, 1);\n          return messageSystem[method].apply(messageSystem, args);\n        };\n      };\n      return new Radio();\n    }(Wreqr);\n    return Backbone.Wreqr;\n  })(Backbone, _);\n\n  var previousMarionette = root.Marionette;\n\n  var Marionette = Backbone.Marionette = {};\n\n  Marionette.VERSION = \'2.3.1\';\n\n  Marionette.noConflict = function() {\n    root.Marionette = previousMarionette;\n    return this;\n  };\n\n  Backbone.Marionette = Marionette;\n\n  // Get the Deferred creator for later use\n  Marionette.Deferred = Backbone.$.Deferred;\n\n  /* jshint unused: false *//* global console */\n  \n  // Helpers\n  // -------\n  \n  // Marionette.extend\n  // -----------------\n  \n  // Borrow the Backbone `extend` method so we can use it as needed\n  Marionette.extend = Backbone.Model.extend;\n  \n  // Marionette.isNodeAttached\n  // -------------------------\n  \n  // Determine if `el` is a child of the document\n  Marionette.isNodeAttached = function(el) {\n    return Backbone.$.contains(document.documentElement, el);\n  };\n  \n  \n  // Marionette.getOption\n  // --------------------\n  \n  // Retrieve an object, function or other value from a target\n  // object or its `options`, with `options` taking precedence.\n  Marionette.getOption = function(target, optionName) {\n    if (!target || !optionName) { return; }\n    if (target.options && (target.options[optionName] !== undefined)) {\n      return target.options[optionName];\n    } else {\n      return target[optionName];\n    }\n  };\n  \n  // Proxy `Marionette.getOption`\n  Marionette.proxyGetOption = function(optionName) {\n    return Marionette.getOption(this, optionName);\n  };\n  \n  // Similar to `_.result`, this is a simple helper\n  // If a function is provided we call it with context\n  // otherwise just return the value. If the value is\n  // undefined return a default value\n  Marionette._getValue = function(value, context, params) {\n    if (_.isFunction(value)) {\n      value = value.apply(context, params);\n    }\n    return value;\n  };\n  \n  // Marionette.normalizeMethods\n  // ----------------------\n  \n  // Pass in a mapping of events => functions or function names\n  // and return a mapping of events => functions\n  Marionette.normalizeMethods = function(hash) {\n    return _.reduce(hash, function(normalizedHash, method, name) {\n      if (!_.isFunction(method)) {\n        method = this[method];\n      }\n      if (method) {\n        normalizedHash[name] = method;\n      }\n      return normalizedHash;\n    }, {}, this);\n  };\n  \n  // utility method for parsing @ui. syntax strings\n  // into associated selector\n  Marionette.normalizeUIString = function(uiString, ui) {\n    return uiString.replace(/@ui\\.[a-zA-Z_$0-9]*/g, function(r) {\n      return ui[r.slice(4)];\n    });\n  };\n  \n  // allows for the use of the @ui. syntax within\n  // a given key for triggers and events\n  // swaps the @ui with the associated selector.\n  // Returns a new, non-mutated, parsed events hash.\n  Marionette.normalizeUIKeys = function(hash, ui) {\n    return _.reduce(hash, function(memo, val, key) {\n      var normalizedKey = Marionette.normalizeUIString(key, ui);\n      memo[normalizedKey] = val;\n      return memo;\n    }, {});\n  };\n  \n  // allows for the use of the @ui. syntax within\n  // a given value for regions\n  // swaps the @ui with the associated selector\n  Marionette.normalizeUIValues = function(hash, ui) {\n    _.each(hash, function(val, key) {\n      if (_.isString(val)) {\n        hash[key] = Marionette.normalizeUIString(val, ui);\n      }\n    });\n    return hash;\n  };\n  \n  // Mix in methods from Underscore, for iteration, and other\n  // collection related features.\n  // Borrowing this code from Backbone.Collection:\n  // http://backbonejs.org/docs/backbone.html#section-121\n  Marionette.actAsCollection = function(object, listProperty) {\n    var methods = [\'forEach\', \'each\', \'map\', \'find\', \'detect\', \'filter\',\n      \'select\', \'reject\', \'every\', \'all\', \'some\', \'any\', \'include\',\n      \'contains\', \'invoke\', \'toArray\', \'first\', \'initial\', \'rest\',\n      \'last\', \'without\', \'isEmpty\', \'pluck\'];\n  \n    _.each(methods, function(method) {\n      object[method] = function() {\n        var list = _.values(_.result(this, listProperty));\n        var args = [list].concat(_.toArray(arguments));\n        return _[method].apply(_, args);\n      };\n    });\n  };\n  \n  var deprecate = Marionette.deprecate = function(message, test) {\n    if (_.isObject(message)) {\n      message = (\n        message.prev + \' is going to be removed in the future. \' +\n        \'Please use \' + message.next + \' instead.\' +\n        (message.url ? \' See: \' + message.url : \'\')\n      );\n    }\n  \n    if ((test === undefined || !test) && !deprecate._cache[message]) {\n      deprecate._warn(\'Deprecation warning: \' + message);\n      deprecate._cache[message] = true;\n    }\n  };\n  \n  deprecate._warn = typeof console !== \'undefined\' && (console.warn || console.log) || function() {};\n  deprecate._cache = {};\n  \n  /* jshint maxstatements: 14, maxcomplexity: 7 */\n  \n  // Trigger Method\n  // --------------\n  \n  \n  Marionette._triggerMethod = (function() {\n    // split the event name on the \":\"\n    var splitter = /(^|:)(\\w)/gi;\n  \n    // take the event section (\"section1:section2:section3\")\n    // and turn it in to uppercase name\n    function getEventName(match, prefix, eventName) {\n      return eventName.toUpperCase();\n    }\n  \n    return function(context, event, args) {\n      var noEventArg = arguments.length < 3;\n      if (noEventArg) {\n        args = event;\n        event = args[0];\n      }\n  \n      // get the method name from the event name\n      var methodName = \'on\' + event.replace(splitter, getEventName);\n      var method = context[methodName];\n      var result;\n  \n      // call the onMethodName if it exists\n      if (_.isFunction(method)) {\n        // pass all args, except the event name\n        result = method.apply(context, noEventArg ? _.rest(args) : args);\n      }\n  \n      // trigger the event, if a trigger method exists\n      if (_.isFunction(context.trigger)) {\n        if (noEventArg + args.length > 1) {\n          context.trigger.apply(context, noEventArg ? args : [event].concat(_.rest(args, 0)));\n        } else {\n          context.trigger(event);\n        }\n      }\n  \n      return result;\n    };\n  })();\n  \n  // Trigger an event and/or a corresponding method name. Examples:\n  //\n  // `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\n  // call the \"onFoo\" method.\n  //\n  // `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\n  // call the \"onFooBar\" method.\n  Marionette.triggerMethod = function(event) {\n    return Marionette._triggerMethod(this, arguments);\n  };\n  \n  // triggerMethodOn invokes triggerMethod on a specific context\n  //\n  // e.g. `Marionette.triggerMethodOn(view, \'show\')`\n  // will trigger a \"show\" event or invoke onShow the view.\n  Marionette.triggerMethodOn = function(context) {\n    var fnc = _.isFunction(context.triggerMethod) ?\n                  context.triggerMethod :\n                  Marionette.triggerMethod;\n  \n    return fnc.apply(context, _.rest(arguments));\n  };\n  \n  // DOM Refresh\n  // -----------\n  \n  // Monitor a view\'s state, and after it has been rendered and shown\n  // in the DOM, trigger a \"dom:refresh\" event every time it is\n  // re-rendered.\n  \n  Marionette.MonitorDOMRefresh = function(view) {\n  \n    // track when the view has been shown in the DOM,\n    // using a Marionette.Region (or by other means of triggering \"show\")\n    function handleShow() {\n      view._isShown = true;\n      triggerDOMRefresh();\n    }\n  \n    // track when the view has been rendered\n    function handleRender() {\n      view._isRendered = true;\n      triggerDOMRefresh();\n    }\n  \n    // Trigger the \"dom:refresh\" event and corresponding \"onDomRefresh\" method\n    function triggerDOMRefresh() {\n      if (view._isShown && view._isRendered && Marionette.isNodeAttached(view.el)) {\n        if (_.isFunction(view.triggerMethod)) {\n          view.triggerMethod(\'dom:refresh\');\n        }\n      }\n    }\n  \n    view.on({\n      show: handleShow,\n      render: handleRender\n    });\n  };\n  \n  /* jshint maxparams: 5 */\n  \n  // Bind Entity Events & Unbind Entity Events\n  // -----------------------------------------\n  //\n  // These methods are used to bind/unbind a backbone \"entity\" (collection/model)\n  // to methods on a target object.\n  //\n  // The first parameter, `target`, must have a `listenTo` method from the\n  // EventBinder object.\n  //\n  // The second parameter is the entity (Backbone.Model or Backbone.Collection)\n  // to bind the events from.\n  //\n  // The third parameter is a hash of { \"event:name\": \"eventHandler\" }\n  // configuration. Multiple handlers can be separated by a space. A\n  // function can be supplied instead of a string handler name.\n  \n  (function(Marionette) {\n    \'use strict\';\n  \n    // Bind the event to handlers specified as a string of\n    // handler names on the target object\n    function bindFromStrings(target, entity, evt, methods) {\n      var methodNames = methods.split(/\\s+/);\n  \n      _.each(methodNames, function(methodName) {\n  \n        var method = target[methodName];\n        if (!method) {\n          throw new Marionette.Error(\'Method \"\' + methodName +\n            \'\" was configured as an event handler, but does not exist.\');\n        }\n  \n        target.listenTo(entity, evt, method);\n      });\n    }\n  \n    // Bind the event to a supplied callback function\n    function bindToFunction(target, entity, evt, method) {\n      target.listenTo(entity, evt, method);\n    }\n  \n    // Bind the event to handlers specified as a string of\n    // handler names on the target object\n    function unbindFromStrings(target, entity, evt, methods) {\n      var methodNames = methods.split(/\\s+/);\n  \n      _.each(methodNames, function(methodName) {\n        var method = target[methodName];\n        target.stopListening(entity, evt, method);\n      });\n    }\n  \n    // Bind the event to a supplied callback function\n    function unbindToFunction(target, entity, evt, method) {\n      target.stopListening(entity, evt, method);\n    }\n  \n  \n    // generic looping function\n    function iterateEvents(target, entity, bindings, functionCallback, stringCallback) {\n      if (!entity || !bindings) { return; }\n  \n      // type-check bindings\n      if (!_.isObject(bindings)) {\n        throw new Marionette.Error({\n          message: \'Bindings must be an object or function.\',\n          url: \'marionette.functions.html#marionettebindentityevents\'\n        });\n      }\n  \n      // allow the bindings to be a function\n      bindings = Marionette._getValue(bindings, target);\n  \n      // iterate the bindings and bind them\n      _.each(bindings, function(methods, evt) {\n  \n        // allow for a function as the handler,\n        // or a list of event names as a string\n        if (_.isFunction(methods)) {\n          functionCallback(target, entity, evt, methods);\n        } else {\n          stringCallback(target, entity, evt, methods);\n        }\n  \n      });\n    }\n  \n    // Export Public API\n    Marionette.bindEntityEvents = function(target, entity, bindings) {\n      iterateEvents(target, entity, bindings, bindToFunction, bindFromStrings);\n    };\n  \n    Marionette.unbindEntityEvents = function(target, entity, bindings) {\n      iterateEvents(target, entity, bindings, unbindToFunction, unbindFromStrings);\n    };\n  \n    // Proxy `bindEntityEvents`\n    Marionette.proxyBindEntityEvents = function(entity, bindings) {\n      return Marionette.bindEntityEvents(this, entity, bindings);\n    };\n  \n    // Proxy `unbindEntityEvents`\n    Marionette.proxyUnbindEntityEvents = function(entity, bindings) {\n      return Marionette.unbindEntityEvents(this, entity, bindings);\n    };\n  })(Marionette);\n  \n\n  // Error\n  // -----\n  \n  var errorProps = [\'description\', \'fileName\', \'lineNumber\', \'name\', \'message\', \'number\'];\n  \n  Marionette.Error = Marionette.extend.call(Error, {\n    urlRoot: \'http://marionettejs.com/docs/v\' + Marionette.VERSION + \'/\',\n  \n    constructor: function(message, options) {\n      if (_.isObject(message)) {\n        options = message;\n        message = options.message;\n      } else if (!options) {\n        options = {};\n      }\n  \n      var error = Error.call(this, message);\n      _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));\n  \n      this.captureStackTrace();\n  \n      if (options.url) {\n        this.url = this.urlRoot + options.url;\n      }\n    },\n  \n    captureStackTrace: function() {\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, Marionette.Error);\n      }\n    },\n  \n    toString: function() {\n      return this.name + \': \' + this.message + (this.url ? \' See: \' + this.url : \'\');\n    }\n  });\n  \n  Marionette.Error.extend = Marionette.extend;\n  \n  // Callbacks\n  // ---------\n  \n  // A simple way of managing a collection of callbacks\n  // and executing them at a later point in time, using jQuery\'s\n  // `Deferred` object.\n  Marionette.Callbacks = function() {\n    this._deferred = Marionette.Deferred();\n    this._callbacks = [];\n  };\n  \n  _.extend(Marionette.Callbacks.prototype, {\n  \n    // Add a callback to be executed. Callbacks added here are\n    // guaranteed to execute, even if they are added after the\n    // `run` method is called.\n    add: function(callback, contextOverride) {\n      var promise = _.result(this._deferred, \'promise\');\n  \n      this._callbacks.push({cb: callback, ctx: contextOverride});\n  \n      promise.then(function(args) {\n        if (contextOverride){ args.context = contextOverride; }\n        callback.call(args.context, args.options);\n      });\n    },\n  \n    // Run all registered callbacks with the context specified.\n    // Additional callbacks can be added after this has been run\n    // and they will still be executed.\n    run: function(options, context) {\n      this._deferred.resolve({\n        options: options,\n        context: context\n      });\n    },\n  \n    // Resets the list of callbacks to be run, allowing the same list\n    // to be run multiple times - whenever the `run` method is called.\n    reset: function() {\n      var callbacks = this._callbacks;\n      this._deferred = Marionette.Deferred();\n      this._callbacks = [];\n  \n      _.each(callbacks, function(cb) {\n        this.add(cb.cb, cb.ctx);\n      }, this);\n    }\n  });\n  \n  // Controller\n  // ----------\n  \n  // A multi-purpose object to use as a controller for\n  // modules and routers, and as a mediator for workflow\n  // and coordination of other objects, views, and more.\n  Marionette.Controller = function(options) {\n    this.options = options || {};\n  \n    if (_.isFunction(this.initialize)) {\n      this.initialize(this.options);\n    }\n  };\n  \n  Marionette.Controller.extend = Marionette.extend;\n  \n  // Controller Methods\n  // --------------\n  \n  // Ensure it can trigger events with Backbone.Events\n  _.extend(Marionette.Controller.prototype, Backbone.Events, {\n    destroy: function() {\n      Marionette._triggerMethod(this, \'before:destroy\', arguments);\n      Marionette._triggerMethod(this, \'destroy\', arguments);\n  \n      this.stopListening();\n      this.off();\n      return this;\n    },\n  \n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod,\n  \n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption\n  \n  });\n  \n  // Object\n  // ------\n  \n  // A Base Class that other Classes should descend from.\n  // Object borrows many conventions and utilities from Backbone.\n  Marionette.Object = function(options) {\n    this.options = _.extend({}, _.result(this, \'options\'), options);\n  \n    this.initialize.apply(this, arguments);\n  };\n  \n  Marionette.Object.extend = Marionette.extend;\n  \n  // Object Methods\n  // --------------\n  \n  // Ensure it can trigger events with Backbone.Events\n  _.extend(Marionette.Object.prototype, Backbone.Events, {\n  \n    //this is a noop method intended to be overridden by classes that extend from this base\n    initialize: function() {},\n  \n    destroy: function() {\n      this.triggerMethod(\'before:destroy\');\n      this.triggerMethod(\'destroy\');\n      this.stopListening();\n    },\n  \n    // Import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod,\n  \n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n  \n    // Proxy `bindEntityEvents` to enable binding view\'s events from another entity.\n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n  \n    // Proxy `unbindEntityEvents` to enable unbinding view\'s events from another entity.\n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n  \n  /* jshint maxcomplexity: 16, maxstatements: 45, maxlen: 120 */\n  \n  // Region\n  // ------\n  \n  // Manage the visual regions of your composite application. See\n  // http://lostechies.com/derickbailey/2011/12/12/composite-js-apps-regions-and-region-managers/\n  \n  Marionette.Region = Marionette.Object.extend({\n    constructor: function (options) {\n  \n      // set options temporarily so that we can get `el`.\n      // options will be overriden by Object.constructor\n      this.options = options || {};\n      this.el = this.getOption(\'el\');\n  \n      // Handle when this.el is passed in as a $ wrapped element.\n      this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;\n  \n      if (!this.el) {\n        throw new Marionette.Error({\n          name: \'NoElError\',\n          message: \'An \"el\" must be specified for a region.\'\n        });\n      }\n  \n      this.$el = this.getEl(this.el);\n      Marionette.Object.call(this, options);\n    },\n  \n    // Displays a backbone view instance inside of the region.\n    // Handles calling the `render` method for you. Reads content\n    // directly from the `el` attribute. Also calls an optional\n    // `onShow` and `onDestroy` method on your view, just after showing\n    // or just before destroying the view, respectively.\n    // The `preventDestroy` option can be used to prevent a view from\n    // the old view being destroyed on show.\n    // The `forceShow` option can be used to force a view to be\n    // re-rendered if it\'s already shown in the region.\n    show: function(view, options){\n      if (!this._ensureElement()) {\n        return;\n      }\n  \n      this._ensureViewIsIntact(view);\n  \n      var showOptions     = options || {};\n      var isDifferentView = view !== this.currentView;\n      var preventDestroy  = !!showOptions.preventDestroy;\n      var forceShow       = !!showOptions.forceShow;\n  \n      // We are only changing the view if there is a current view to change to begin with\n      var isChangingView = !!this.currentView;\n  \n      // Only destroy the current view if we don\'t want to `preventDestroy` and if\n      // the view given in the first argument is different than `currentView`\n      var _shouldDestroyView = isDifferentView && !preventDestroy;\n  \n      // Only show the view given in the first argument if it is different than\n      // the current view or if we want to re-show the view. Note that if\n      // `_shouldDestroyView` is true, then `_shouldShowView` is also necessarily true.\n      var _shouldShowView = isDifferentView || forceShow;\n  \n      if (isChangingView) {\n        this.triggerMethod(\'before:swapOut\', this.currentView, this, options);\n      }\n  \n      if (this.currentView) {\n        delete this.currentView._parent;\n      }\n  \n      if (_shouldDestroyView) {\n        this.empty();\n  \n      // A `destroy` event is attached to the clean up manually removed views.\n      // We need to detach this event when a new view is going to be shown as it\n      // is no longer relevant.\n      } else if (isChangingView && _shouldShowView) {\n        this.currentView.off(\'destroy\', this.empty, this);\n      }\n  \n      if (_shouldShowView) {\n  \n        // We need to listen for if a view is destroyed\n        // in a way other than through the region.\n        // If this happens we need to remove the reference\n        // to the currentView since once a view has been destroyed\n        // we can not reuse it.\n        view.once(\'destroy\', this.empty, this);\n        view.render();\n  \n        view._parent = this;\n  \n        if (isChangingView) {\n          this.triggerMethod(\'before:swap\', view, this, options);\n        }\n  \n        this.triggerMethod(\'before:show\', view, this, options);\n        Marionette.triggerMethodOn(view, \'before:show\', view, this, options);\n  \n        if (isChangingView) {\n          this.triggerMethod(\'swapOut\', this.currentView, this, options);\n        }\n  \n        // An array of views that we\'re about to display\n        var attachedRegion = Marionette.isNodeAttached(this.el);\n  \n        // The views that we\'re about to attach to the document\n        // It\'s important that we prevent _getNestedViews from being executed unnecessarily\n        // as it\'s a potentially-slow method\n        var displayedViews = [];\n  \n        var triggerBeforeAttach = showOptions.triggerBeforeAttach || this.triggerBeforeAttach;\n        var triggerAttach = showOptions.triggerAttach || this.triggerAttach;\n  \n        if (attachedRegion && triggerBeforeAttach) {\n          displayedViews = this._displayedViews(view);\n          this._triggerAttach(displayedViews, \'before:\');\n        }\n  \n        this.attachHtml(view);\n        this.currentView = view;\n  \n        if (attachedRegion && triggerAttach) {\n          displayedViews = this._displayedViews(view);\n          this._triggerAttach(displayedViews);\n        }\n  \n        if (isChangingView) {\n          this.triggerMethod(\'swap\', view, this, options);\n        }\n  \n        this.triggerMethod(\'show\', view, this, options);\n        Marionette.triggerMethodOn(view, \'show\', view, this, options);\n  \n        return this;\n      }\n  \n      return this;\n    },\n  \n    triggerBeforeAttach: true,\n    triggerAttach: true,\n  \n    _triggerAttach: function(views, prefix) {\n      var eventName = (prefix || \'\') + \'attach\';\n      _.each(views, function(view) {\n        Marionette.triggerMethodOn(view, eventName, view, this);\n      }, this);\n    },\n  \n    _displayedViews: function(view) {\n      return _.union([view], _.result(view, \'_getNestedViews\') || []);\n    },\n  \n    _ensureElement: function(){\n      if (!_.isObject(this.el)) {\n        this.$el = this.getEl(this.el);\n        this.el = this.$el[0];\n      }\n  \n      if (!this.$el || this.$el.length === 0) {\n        if (this.getOption(\'allowMissingEl\')) {\n          return false;\n        } else {\n          throw new Marionette.Error(\'An \"el\" \' + this.$el.selector + \' must exist in DOM\');\n        }\n      }\n      return true;\n    },\n  \n    _ensureViewIsIntact: function(view) {\n      if (!view) {\n        throw new Marionette.Error({\n          name: \'ViewNotValid\',\n          message: \'The view passed is undefined and therefore invalid. You must pass a view instance to show.\'\n        });\n      }\n  \n      if (view.isDestroyed) {\n        throw new Marionette.Error({\n          name: \'ViewDestroyedError\',\n          message: \'View (cid: \"\' + view.cid + \'\") has already been destroyed and cannot be used.\'\n        });\n      }\n    },\n  \n    // Override this method to change how the region finds the DOM\n    // element that it manages. Return a jQuery selector object scoped\n    // to a provided parent el or the document if none exists.\n    getEl: function(el) {\n      return Backbone.$(el, Marionette._getValue(this.options.parentEl, this));\n    },\n  \n    // Override this method to change how the new view is\n    // appended to the `$el` that the region is managing\n    attachHtml: function(view) {\n      this.$el.contents().detach();\n  \n      this.el.appendChild(view.el);\n    },\n  \n    // Destroy the current view, if there is one. If there is no\n    // current view, it does nothing and returns immediately.\n    empty: function() {\n      var view = this.currentView;\n  \n      // If there is no view in the region\n      // we should not remove anything\n      if (!view) { return; }\n  \n      view.off(\'destroy\', this.empty, this);\n      this.triggerMethod(\'before:empty\', view);\n      this._destroyView();\n      this.triggerMethod(\'empty\', view);\n  \n      // Remove region pointer to the currentView\n      delete this.currentView;\n      return this;\n    },\n  \n    // call \'destroy\' or \'remove\', depending on which is found\n    // on the view (if showing a raw Backbone view or a Marionette View)\n    _destroyView: function() {\n      var view = this.currentView;\n  \n      if (view.destroy && !view.isDestroyed) {\n        view.destroy();\n      } else if (view.remove) {\n        view.remove();\n  \n        // appending isDestroyed to raw Backbone View allows regions\n        // to throw a ViewDestroyedError for this view\n        view.isDestroyed = true;\n      }\n    },\n  \n    // Attach an existing view to the region. This\n    // will not call `render` or `onShow` for the new view,\n    // and will not replace the current HTML for the `el`\n    // of the region.\n    attachView: function(view) {\n      this.currentView = view;\n      return this;\n    },\n  \n    // Checks whether a view is currently present within\n    // the region. Returns `true` if there is and `false` if\n    // no view is present.\n    hasView: function() {\n      return !!this.currentView;\n    },\n  \n    // Reset the region by destroying any existing view and\n    // clearing out the cached `$el`. The next time a view\n    // is shown via this region, the region will re-query the\n    // DOM for the region\'s `el`.\n    reset: function() {\n      this.empty();\n  \n      if (this.$el) {\n        this.el = this.$el.selector;\n      }\n  \n      delete this.$el;\n      return this;\n    }\n  \n  },\n  \n  // Static Methods\n  {\n  \n    // Build an instance of a region by passing in a configuration object\n    // and a default region class to use if none is specified in the config.\n    //\n    // The config object should either be a string as a jQuery DOM selector,\n    // a Region class directly, or an object literal that specifies a selector,\n    // a custom regionClass, and any options to be supplied to the region:\n    //\n    // ```js\n    // {\n    //   selector: \"#foo\",\n    //   regionClass: MyCustomRegion,\n    //   allowMissingEl: false\n    // }\n    // ```\n    //\n    buildRegion: function(regionConfig, DefaultRegionClass) {\n      if (_.isString(regionConfig)) {\n        return this._buildRegionFromSelector(regionConfig, DefaultRegionClass);\n      }\n  \n      if (regionConfig.selector || regionConfig.el || regionConfig.regionClass) {\n        return this._buildRegionFromObject(regionConfig, DefaultRegionClass);\n      }\n  \n      if (_.isFunction(regionConfig)) {\n        return this._buildRegionFromRegionClass(regionConfig);\n      }\n  \n      throw new Marionette.Error({\n        message: \'Improper region configuration type.\',\n        url: \'marionette.region.html#region-configuration-types\'\n      });\n    },\n  \n    // Build the region from a string selector like \'#foo-region\'\n    _buildRegionFromSelector: function(selector, DefaultRegionClass) {\n      return new DefaultRegionClass({ el: selector });\n    },\n  \n    // Build the region from a configuration object\n    // ```js\n    // { selector: \'#foo\', regionClass: FooRegion, allowMissingEl: false }\n    // ```\n    _buildRegionFromObject: function(regionConfig, DefaultRegionClass) {\n      var RegionClass = regionConfig.regionClass || DefaultRegionClass;\n      var options = _.omit(regionConfig, \'selector\', \'regionClass\');\n  \n      if (regionConfig.selector && !options.el) {\n        options.el = regionConfig.selector;\n      }\n  \n      return new RegionClass(options);\n    },\n  \n    // Build the region directly from a given `RegionClass`\n    _buildRegionFromRegionClass: function(RegionClass) {\n      return new RegionClass();\n    }\n  });\n  \n  // Region Manager\n  // --------------\n  \n  // Manage one or more related `Marionette.Region` objects.\n  Marionette.RegionManager = Marionette.Controller.extend({\n    constructor: function(options) {\n      this._regions = {};\n  \n      Marionette.Controller.call(this, options);\n  \n      this.addRegions(this.getOption(\'regions\'));\n    },\n  \n    // Add multiple regions using an object literal or a\n    // function that returns an object literal, where\n    // each key becomes the region name, and each value is\n    // the region definition.\n    addRegions: function(regionDefinitions, defaults) {\n      regionDefinitions = Marionette._getValue(regionDefinitions, this, arguments);\n  \n      return _.reduce(regionDefinitions, function(regions, definition, name) {\n        if (_.isString(definition)) {\n          definition = {selector: definition};\n        }\n        if (definition.selector) {\n          definition = _.defaults({}, definition, defaults);\n        }\n  \n        regions[name] = this.addRegion(name, definition);\n        return regions;\n      }, {}, this);\n    },\n  \n    // Add an individual region to the region manager,\n    // and return the region instance\n    addRegion: function(name, definition) {\n      var region;\n  \n      if (definition instanceof Marionette.Region) {\n        region = definition;\n      } else {\n        region = Marionette.Region.buildRegion(definition, Marionette.Region);\n      }\n  \n      this.triggerMethod(\'before:add:region\', name, region);\n  \n      region._parent = this;\n      this._store(name, region);\n  \n      this.triggerMethod(\'add:region\', name, region);\n      return region;\n    },\n  \n    // Get a region by name\n    get: function(name) {\n      return this._regions[name];\n    },\n  \n    // Gets all the regions contained within\n    // the `regionManager` instance.\n    getRegions: function(){\n      return _.clone(this._regions);\n    },\n  \n    // Remove a region by name\n    removeRegion: function(name) {\n      var region = this._regions[name];\n      this._remove(name, region);\n  \n      return region;\n    },\n  \n    // Empty all regions in the region manager, and\n    // remove them\n    removeRegions: function() {\n      var regions = this.getRegions();\n      _.each(this._regions, function(region, name) {\n        this._remove(name, region);\n      }, this);\n  \n      return regions;\n    },\n  \n    // Empty all regions in the region manager, but\n    // leave them attached\n    emptyRegions: function() {\n      var regions = this.getRegions();\n      _.invoke(regions, \'empty\');\n      return regions;\n    },\n  \n    // Destroy all regions and shut down the region\n    // manager entirely\n    destroy: function() {\n      this.removeRegions();\n      return Marionette.Controller.prototype.destroy.apply(this, arguments);\n    },\n  \n    // internal method to store regions\n    _store: function(name, region) {\n      this._regions[name] = region;\n      this._setLength();\n    },\n  \n    // internal method to remove a region\n    _remove: function(name, region) {\n      this.triggerMethod(\'before:remove:region\', name, region);\n      region.empty();\n      region.stopListening();\n  \n      delete region._parent;\n      delete this._regions[name];\n      this._setLength();\n      this.triggerMethod(\'remove:region\', name, region);\n    },\n  \n    // set the number of regions current held\n    _setLength: function() {\n      this.length = _.size(this._regions);\n    }\n  });\n  \n  Marionette.actAsCollection(Marionette.RegionManager.prototype, \'_regions\');\n  \n\n  // Template Cache\n  // --------------\n  \n  // Manage templates stored in `<script>` blocks,\n  // caching them for faster access.\n  Marionette.TemplateCache = function(templateId) {\n    this.templateId = templateId;\n  };\n  \n  // TemplateCache object-level methods. Manage the template\n  // caches from these method calls instead of creating\n  // your own TemplateCache instances\n  _.extend(Marionette.TemplateCache, {\n    templateCaches: {},\n  \n    // Get the specified template by id. Either\n    // retrieves the cached version, or loads it\n    // from the DOM.\n    get: function(templateId) {\n      var cachedTemplate = this.templateCaches[templateId];\n  \n      if (!cachedTemplate) {\n        cachedTemplate = new Marionette.TemplateCache(templateId);\n        this.templateCaches[templateId] = cachedTemplate;\n      }\n  \n      return cachedTemplate.load();\n    },\n  \n    // Clear templates from the cache. If no arguments\n    // are specified, clears all templates:\n    // `clear()`\n    //\n    // If arguments are specified, clears each of the\n    // specified templates from the cache:\n    // `clear(\"#t1\", \"#t2\", \"...\")`\n    clear: function() {\n      var i;\n      var args = _.toArray(arguments);\n      var length = args.length;\n  \n      if (length > 0) {\n        for (i = 0; i < length; i++) {\n          delete this.templateCaches[args[i]];\n        }\n      } else {\n        this.templateCaches = {};\n      }\n    }\n  });\n  \n  // TemplateCache instance methods, allowing each\n  // template cache object to manage its own state\n  // and know whether or not it has been loaded\n  _.extend(Marionette.TemplateCache.prototype, {\n  \n    // Internal method to load the template\n    load: function() {\n      // Guard clause to prevent loading this template more than once\n      if (this.compiledTemplate) {\n        return this.compiledTemplate;\n      }\n  \n      // Load the template and compile it\n      var template = this.loadTemplate(this.templateId);\n      this.compiledTemplate = this.compileTemplate(template);\n  \n      return this.compiledTemplate;\n    },\n  \n    // Load a template from the DOM, by default. Override\n    // this method to provide your own template retrieval\n    // For asynchronous loading with AMD/RequireJS, consider\n    // using a template-loader plugin as described here:\n    // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs\n    loadTemplate: function(templateId) {\n      var template = Backbone.$(templateId).html();\n  \n      if (!template || template.length === 0) {\n        throw new Marionette.Error({\n          name: \'NoTemplateError\',\n          message: \'Could not find template: \"\' + templateId + \'\"\'\n        });\n      }\n  \n      return template;\n    },\n  \n    // Pre-compile the template before caching it. Override\n    // this method if you do not need to pre-compile a template\n    // (JST / RequireJS for example) or if you want to change\n    // the template engine used (Handebars, etc).\n    compileTemplate: function(rawTemplate) {\n      return _.template(rawTemplate);\n    }\n  });\n  \n  // Renderer\n  // --------\n  \n  // Render a template with data by passing in the template\n  // selector and the data to render.\n  Marionette.Renderer = {\n  \n    // Render a template with data. The `template` parameter is\n    // passed to the `TemplateCache` object to retrieve the\n    // template function. Override this method to provide your own\n    // custom rendering and template handling for all of Marionette.\n    render: function(template, data) {\n      if (!template) {\n        throw new Marionette.Error({\n          name: \'TemplateNotFoundError\',\n          message: \'Cannot render the template since its false, null or undefined.\'\n        });\n      }\n  \n      var templateFunc = _.isFunction(template) ? template : Marionette.TemplateCache.get(template);\n  \n      return templateFunc(data);\n    }\n  };\n  \n\n  /* jshint maxlen: 114, nonew: false */\n  // View\n  // ----\n  \n  // The core view class that other Marionette views extend from.\n  Marionette.View = Backbone.View.extend({\n    isDestroyed: false,\n  \n    constructor: function(options) {\n      _.bindAll(this, \'render\');\n  \n      options = Marionette._getValue(options, this);\n  \n      // this exposes view options to the view initializer\n      // this is a backfill since backbone removed the assignment\n      // of this.options\n      // at some point however this may be removed\n      this.options = _.extend({}, _.result(this, \'options\'), options);\n  \n      this._behaviors = Marionette.Behaviors(this);\n  \n      Backbone.View.apply(this, arguments);\n  \n      Marionette.MonitorDOMRefresh(this);\n      this.on(\'show\', this.onShowCalled);\n    },\n  \n    // Get the template for this view\n    // instance. You can set a `template` attribute in the view\n    // definition or pass a `template: \"whatever\"` parameter in\n    // to the constructor options.\n    getTemplate: function() {\n      return this.getOption(\'template\');\n    },\n  \n    // Serialize a model by returning its attributes. Clones\n    // the attributes to allow modification.\n    serializeModel: function(model){\n      return model.toJSON.apply(model, _.rest(arguments));\n    },\n  \n    // Mix in template helper methods. Looks for a\n    // `templateHelpers` attribute, which can either be an\n    // object literal, or a function that returns an object\n    // literal. All methods and attributes from this object\n    // are copies to the object passed in.\n    mixinTemplateHelpers: function(target) {\n      target = target || {};\n      var templateHelpers = this.getOption(\'templateHelpers\');\n      templateHelpers = Marionette._getValue(templateHelpers, this);\n      return _.extend(target, templateHelpers);\n    },\n  \n    // normalize the keys of passed hash with the views `ui` selectors.\n    // `{\"@ui.foo\": \"bar\"}`\n    normalizeUIKeys: function(hash) {\n      var uiBindings = _.result(this, \'_uiBindings\');\n      return Marionette.normalizeUIKeys(hash, uiBindings || _.result(this, \'ui\'));\n    },\n  \n    // normalize the values of passed hash with the views `ui` selectors.\n    // `{foo: \"@ui.bar\"}`\n    normalizeUIValues: function(hash) {\n      var ui = _.result(this, \'ui\');\n      var uiBindings = _.result(this, \'_uiBindings\');\n      return Marionette.normalizeUIValues(hash, uiBindings || ui);\n    },\n  \n    // Configure `triggers` to forward DOM events to view\n    // events. `triggers: {\"click .foo\": \"do:foo\"}`\n    configureTriggers: function() {\n      if (!this.triggers) { return; }\n  \n      // Allow `triggers` to be configured as a function\n      var triggers = this.normalizeUIKeys(_.result(this, \'triggers\'));\n  \n      // Configure the triggers, prevent default\n      // action and stop propagation of DOM events\n      return _.reduce(triggers, function(events, value, key) {\n        events[key] = this._buildViewTrigger(value);\n        return events;\n      }, {}, this);\n    },\n  \n    // Overriding Backbone.View\'s delegateEvents to handle\n    // the `triggers`, `modelEvents`, and `collectionEvents` configuration\n    delegateEvents: function(events) {\n      this._delegateDOMEvents(events);\n      this.bindEntityEvents(this.model, this.getOption(\'modelEvents\'));\n      this.bindEntityEvents(this.collection, this.getOption(\'collectionEvents\'));\n  \n      _.each(this._behaviors, function(behavior) {\n        behavior.bindEntityEvents(this.model, behavior.getOption(\'modelEvents\'));\n        behavior.bindEntityEvents(this.collection, behavior.getOption(\'collectionEvents\'));\n      }, this);\n  \n      return this;\n    },\n  \n    // internal method to delegate DOM events and triggers\n    _delegateDOMEvents: function(eventsArg) {\n      var events = Marionette._getValue(eventsArg || this.events, this);\n  \n      // normalize ui keys\n      events = this.normalizeUIKeys(events);\n      if(_.isUndefined(eventsArg)) {this.events = events;}\n  \n      var combinedEvents = {};\n  \n      // look up if this view has behavior events\n      var behaviorEvents = _.result(this, \'behaviorEvents\') || {};\n      var triggers = this.configureTriggers();\n      var behaviorTriggers = _.result(this, \'behaviorTriggers\') || {};\n  \n      // behavior events will be overriden by view events and or triggers\n      _.extend(combinedEvents, behaviorEvents, events, triggers, behaviorTriggers);\n  \n      Backbone.View.prototype.delegateEvents.call(this, combinedEvents);\n    },\n  \n    // Overriding Backbone.View\'s undelegateEvents to handle unbinding\n    // the `triggers`, `modelEvents`, and `collectionEvents` config\n    undelegateEvents: function() {\n      Backbone.View.prototype.undelegateEvents.apply(this, arguments);\n  \n      this.unbindEntityEvents(this.model, this.getOption(\'modelEvents\'));\n      this.unbindEntityEvents(this.collection, this.getOption(\'collectionEvents\'));\n  \n      _.each(this._behaviors, function(behavior) {\n        behavior.unbindEntityEvents(this.model, behavior.getOption(\'modelEvents\'));\n        behavior.unbindEntityEvents(this.collection, behavior.getOption(\'collectionEvents\'));\n      }, this);\n  \n      return this;\n    },\n  \n    // Internal method, handles the `show` event.\n    onShowCalled: function() {},\n  \n    // Internal helper method to verify whether the view hasn\'t been destroyed\n    _ensureViewIsIntact: function() {\n      if (this.isDestroyed) {\n        throw new Marionette.Error({\n          name: \'ViewDestroyedError\',\n          message: \'View (cid: \"\' + this.cid + \'\") has already been destroyed and cannot be used.\'\n        });\n      }\n    },\n  \n    // Default `destroy` implementation, for removing a view from the\n    // DOM and unbinding it. Regions will call this method\n    // for you. You can specify an `onDestroy` method in your view to\n    // add custom code that is called after the view is destroyed.\n    destroy: function() {\n      if (this.isDestroyed) { return; }\n  \n      var args = _.toArray(arguments);\n  \n      this.triggerMethod.apply(this, [\'before:destroy\'].concat(args));\n  \n      // mark as destroyed before doing the actual destroy, to\n      // prevent infinite loops within \"destroy\" event handlers\n      // that are trying to destroy other views\n      this.isDestroyed = true;\n      this.triggerMethod.apply(this, [\'destroy\'].concat(args));\n  \n      // unbind UI elements\n      this.unbindUIElements();\n  \n      // remove the view from the DOM\n      this.remove();\n  \n      // Call destroy on each behavior after\n      // destroying the view.\n      // This unbinds event listeners\n      // that behaviors have registered for.\n      _.invoke(this._behaviors, \'destroy\', args);\n  \n      return this;\n    },\n  \n    bindUIElements: function() {\n      this._bindUIElements();\n      _.invoke(this._behaviors, this._bindUIElements);\n    },\n  \n    // This method binds the elements specified in the \"ui\" hash inside the view\'s code with\n    // the associated jQuery selectors.\n    _bindUIElements: function() {\n      if (!this.ui) { return; }\n  \n      // store the ui hash in _uiBindings so they can be reset later\n      // and so re-rendering the view will be able to find the bindings\n      if (!this._uiBindings) {\n        this._uiBindings = this.ui;\n      }\n  \n      // get the bindings result, as a function or otherwise\n      var bindings = _.result(this, \'_uiBindings\');\n  \n      // empty the ui so we don\'t have anything to start with\n      this.ui = {};\n  \n      // bind each of the selectors\n      _.each(bindings, function(selector, key) {\n        this.ui[key] = this.$(selector);\n      }, this);\n    },\n  \n    // This method unbinds the elements specified in the \"ui\" hash\n    unbindUIElements: function() {\n      this._unbindUIElements();\n      _.invoke(this._behaviors, this._unbindUIElements);\n    },\n  \n    _unbindUIElements: function() {\n      if (!this.ui || !this._uiBindings) { return; }\n  \n      // delete all of the existing ui bindings\n      _.each(this.ui, function($el, name) {\n        delete this.ui[name];\n      }, this);\n  \n      // reset the ui element to the original bindings configuration\n      this.ui = this._uiBindings;\n      delete this._uiBindings;\n    },\n  \n    // Internal method to create an event handler for a given `triggerDef` like\n    // \'click:foo\'\n    _buildViewTrigger: function(triggerDef) {\n      var hasOptions = _.isObject(triggerDef);\n  \n      var options = _.defaults({}, (hasOptions ? triggerDef : {}), {\n        preventDefault: true,\n        stopPropagation: true\n      });\n  \n      var eventName = hasOptions ? options.event : triggerDef;\n  \n      return function(e) {\n        if (e) {\n          if (e.preventDefault && options.preventDefault) {\n            e.preventDefault();\n          }\n  \n          if (e.stopPropagation && options.stopPropagation) {\n            e.stopPropagation();\n          }\n        }\n  \n        var args = {\n          view: this,\n          model: this.model,\n          collection: this.collection\n        };\n  \n        this.triggerMethod(eventName, args);\n      };\n    },\n  \n    setElement: function() {\n      var ret = Backbone.View.prototype.setElement.apply(this, arguments);\n  \n      // proxy behavior $el to the view\'s $el.\n      // This is needed because a view\'s $el proxy\n      // is not set until after setElement is called.\n      _.invoke(this._behaviors, \'proxyViewProperties\', this);\n  \n      return ret;\n    },\n  \n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: function() {\n      var triggerMethod = Marionette._triggerMethod;\n      var ret = triggerMethod(this, arguments);\n      var behaviors = this._behaviors;\n      // Use good ol\' for as this is a very hot function\n      for (var i = 0, length = behaviors && behaviors.length; i < length; i++) {\n        triggerMethod(behaviors[i], arguments);\n      }\n  \n      return ret;\n    },\n  \n    // This method returns any views that are immediate\n    // children of this view\n    _getImmediateChildren: function() {\n      return [];\n    },\n  \n    // Returns an array of every nested view within this view\n    _getNestedViews: function() {\n      var children = this._getImmediateChildren();\n  \n      if (!children.length) { return children; }\n  \n      return _.reduce(children, function(memo, view) {\n        if (!view._getNestedViews) { return memo; }\n        return memo.concat(view._getNestedViews());\n      }, children);\n    },\n  \n    // Imports the \"normalizeMethods\" to transform hashes of\n    // events=>function references/names to a hash of events=>function references\n    normalizeMethods: Marionette.normalizeMethods,\n  \n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n  \n    // Proxy `bindEntityEvents` to enable binding view\'s events from another entity.\n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n  \n    // Proxy `unbindEntityEvents` to enable unbinding view\'s events from another entity.\n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n  \n  // Item View\n  // ---------\n  \n  // A single item view implementation that contains code for rendering\n  // with underscore.js templates, serializing the view\'s model or collection,\n  // and calling several methods on extended views, such as `onRender`.\n  Marionette.ItemView = Marionette.View.extend({\n  \n    // Setting up the inheritance chain which allows changes to\n    // Marionette.View.prototype.constructor which allows overriding\n    constructor: function() {\n      Marionette.View.apply(this, arguments);\n    },\n  \n    // Serialize the model or collection for the view. If a model is\n    // found, the view\'s `serializeModel` is called. If a collection is found,\n    // each model in the collection is serialized by calling\n    // the view\'s `serializeCollection` and put into an `items` array in\n    // the resulting data. If both are found, defaults to the model.\n    // You can override the `serializeData` method in your own view definition,\n    // to provide custom serialization for your view\'s data.\n    serializeData: function(){\n      if (!this.model && !this.collection) {\n        return {};\n      }\n  \n      var args = [this.model || this.collection];\n      if (arguments.length) {\n        args.push.apply(args, arguments);\n      }\n  \n      if (this.model) {\n        return this.serializeModel.apply(this, args);\n      } else {\n        return {\n          items: this.serializeCollection.apply(this, args)\n        };\n      }\n    },\n  \n    // Serialize a collection by serializing each of its models.\n    serializeCollection: function(collection){\n      return collection.toJSON.apply(collection, _.rest(arguments));\n    },\n  \n    // Render the view, defaulting to underscore.js templates.\n    // You can override this in your view definition to provide\n    // a very specific rendering for your view. In general, though,\n    // you should override the `Marionette.Renderer` object to\n    // change how Marionette renders views.\n    render: function() {\n      this._ensureViewIsIntact();\n  \n      this.triggerMethod(\'before:render\', this);\n  \n      this._renderTemplate();\n      this.bindUIElements();\n  \n      this.triggerMethod(\'render\', this);\n  \n      return this;\n    },\n  \n    // Internal method to render the template with the serialized data\n    // and template helpers via the `Marionette.Renderer` object.\n    // Throws an `UndefinedTemplateError` error if the template is\n    // any falsely value but literal `false`.\n    _renderTemplate: function() {\n      var template = this.getTemplate();\n  \n      // Allow template-less item views\n      if (template === false) {\n        return;\n      }\n  \n      if (!template) {\n        throw new Marionette.Error({\n          name: \'UndefinedTemplateError\',\n          message: \'Cannot render the template since it is null or undefined.\'\n        });\n      }\n  \n      // Add in entity data and template helpers\n      var data = this.serializeData();\n      data = this.mixinTemplateHelpers(data);\n  \n      // Render and add to el\n      var html = Marionette.Renderer.render(template, data, this);\n      this.attachElContent(html);\n  \n      return this;\n    },\n  \n    // Attaches the content of a given view.\n    // This method can be overridden to optimize rendering,\n    // or to render in a non standard way.\n    //\n    // For example, using `innerHTML` instead of `$el.html`\n    //\n    // ```js\n    // attachElContent: function(html) {\n    //   this.el.innerHTML = html;\n    //   return this;\n    // }\n    // ```\n    attachElContent: function(html) {\n      this.$el.html(html);\n  \n      return this;\n    }\n  });\n  \n  /* jshint maxstatements: 14 */\n  \n  // Collection View\n  // ---------------\n  \n  // A view that iterates over a Backbone.Collection\n  // and renders an individual child view for each model.\n  Marionette.CollectionView = Marionette.View.extend({\n  \n    // used as the prefix for child view events\n    // that are forwarded through the collectionview\n    childViewEventPrefix: \'childview\',\n  \n    // constructor\n    // option to pass `{sort: false}` to prevent the `CollectionView` from\n    // maintaining the sorted order of the collection.\n    // This will fallback onto appending childView\'s to the end.\n    constructor: function(options){\n      var initOptions = options || {};\n      if (_.isUndefined(this.sort)){\n        this.sort = _.isUndefined(initOptions.sort) ? true : initOptions.sort;\n      }\n  \n      this.once(\'render\', this._initialEvents);\n      this._initChildViewStorage();\n  \n      Marionette.View.apply(this, arguments);\n  \n      this.initRenderBuffer();\n    },\n  \n    // Instead of inserting elements one by one into the page,\n    // it\'s much more performant to insert elements into a document\n    // fragment and then insert that document fragment into the page\n    initRenderBuffer: function() {\n      this.elBuffer = document.createDocumentFragment();\n      this._bufferedChildren = [];\n    },\n  \n    startBuffering: function() {\n      this.initRenderBuffer();\n      this.isBuffering = true;\n    },\n  \n    endBuffering: function() {\n      this.isBuffering = false;\n      this._triggerBeforeShowBufferedChildren();\n      this.attachBuffer(this, this.elBuffer);\n      this._triggerShowBufferedChildren();\n      this.initRenderBuffer();\n    },\n  \n    _triggerBeforeShowBufferedChildren: function() {\n      if (this._isShown) {\n        _.each(this._bufferedChildren, _.partial(this._triggerMethodOnChild, \'before:show\'));\n      }\n    },\n  \n    _triggerShowBufferedChildren: function() {\n      if (this._isShown) {\n        _.each(this._bufferedChildren, _.partial(this._triggerMethodOnChild, \'show\'));\n  \n        this._bufferedChildren = [];\n      }\n    },\n  \n    // Internal method for _.each loops to call `Marionette.triggerMethodOn` on\n    // a child view\n    _triggerMethodOnChild: function(event, childView) {\n      Marionette.triggerMethodOn(childView, event);\n    },\n  \n    // Configured the initial events that the collection view\n    // binds to.\n    _initialEvents: function() {\n      if (this.collection) {\n        this.listenTo(this.collection, \'add\', this._onCollectionAdd);\n        this.listenTo(this.collection, \'remove\', this._onCollectionRemove);\n        this.listenTo(this.collection, \'reset\', this.render);\n  \n        if (this.sort) {\n          this.listenTo(this.collection, \'sort\', this._sortViews);\n        }\n      }\n    },\n  \n    // Handle a child added to the collection\n    _onCollectionAdd: function(child) {\n      this.destroyEmptyView();\n      var ChildView = this.getChildView(child);\n      var index = this.collection.indexOf(child);\n      this.addChild(child, ChildView, index);\n    },\n  \n    // get the child view by model it holds, and remove it\n    _onCollectionRemove: function(model) {\n      var view = this.children.findByModel(model);\n      this.removeChildView(view);\n      this.checkEmpty();\n    },\n  \n    // Override from `Marionette.View` to trigger show on child views\n    onShowCalled: function() {\n      this.children.each(_.partial(this._triggerMethodOnChild, \'show\'));\n    },\n  \n    // Render children views. Override this method to\n    // provide your own implementation of a render function for\n    // the collection view.\n    render: function() {\n      this._ensureViewIsIntact();\n      this.triggerMethod(\'before:render\', this);\n      this._renderChildren();\n      this.triggerMethod(\'render\', this);\n      return this;\n    },\n  \n    // Render view after sorting. Override this method to\n    // change how the view renders after a `sort` on the collection.\n    // An example of this would be to only `renderChildren` in a `CompositeView`\n    // rather than the full view.\n    resortView: function() {\n      this.render();\n    },\n  \n    // Internal method. This checks for any changes in the order of the collection.\n    // If the index of any view doesn\'t match, it will render.\n    _sortViews: function() {\n      // check for any changes in sort order of views\n      var orderChanged = this.collection.find(function(item, index){\n        var view = this.children.findByModel(item);\n        return !view || view._index !== index;\n      }, this);\n  \n      if (orderChanged) {\n        this.resortView();\n      }\n    },\n  \n    // Internal reference to what index a `emptyView` is.\n    _emptyViewIndex: -1,\n  \n    // Internal method. Separated so that CompositeView can have\n    // more control over events being triggered, around the rendering\n    // process\n    _renderChildren: function() {\n      this.destroyEmptyView();\n      this.destroyChildren();\n  \n      if (this.isEmpty(this.collection)) {\n        this.showEmptyView();\n      } else {\n        this.triggerMethod(\'before:render:collection\', this);\n        this.startBuffering();\n        this.showCollection();\n        this.endBuffering();\n        this.triggerMethod(\'render:collection\', this);\n      }\n    },\n  \n    // Internal method to loop through collection and show each child view.\n    showCollection: function() {\n      var ChildView;\n      this.collection.each(function(child, index) {\n        ChildView = this.getChildView(child);\n        this.addChild(child, ChildView, index);\n      }, this);\n    },\n  \n    // Internal method to show an empty view in place of\n    // a collection of child views, when the collection is empty\n    showEmptyView: function() {\n      var EmptyView = this.getEmptyView();\n  \n      if (EmptyView && !this._showingEmptyView) {\n        this.triggerMethod(\'before:render:empty\');\n  \n        this._showingEmptyView = true;\n        var model = new Backbone.Model();\n        this.addEmptyView(model, EmptyView);\n  \n        this.triggerMethod(\'render:empty\');\n      }\n    },\n  \n    // Internal method to destroy an existing emptyView instance\n    // if one exists. Called when a collection view has been\n    // rendered empty, and then a child is added to the collection.\n    destroyEmptyView: function() {\n      if (this._showingEmptyView) {\n        this.triggerMethod(\'before:remove:empty\');\n  \n        this.destroyChildren();\n        delete this._showingEmptyView;\n  \n        this.triggerMethod(\'remove:empty\');\n      }\n    },\n  \n    // Retrieve the empty view class\n    getEmptyView: function() {\n      return this.getOption(\'emptyView\');\n    },\n  \n    // Render and show the emptyView. Similar to addChild method\n    // but \"child:added\" events are not fired, and the event from\n    // emptyView are not forwarded\n    addEmptyView: function(child, EmptyView) {\n  \n      // get the emptyViewOptions, falling back to childViewOptions\n      var emptyViewOptions = this.getOption(\'emptyViewOptions\') ||\n                            this.getOption(\'childViewOptions\');\n  \n      if (_.isFunction(emptyViewOptions)){\n        emptyViewOptions = emptyViewOptions.call(this, child, this._emptyViewIndex);\n      }\n  \n      // build the empty view\n      var view = this.buildChildView(child, EmptyView, emptyViewOptions);\n  \n      view._parent = this;\n  \n      // Proxy emptyView events\n      this.proxyChildEvents(view);\n  \n      // trigger the \'before:show\' event on `view` if the collection view\n      // has already been shown\n      if (this._isShown) {\n        Marionette.triggerMethodOn(view, \'before:show\');\n      }\n  \n      // Store the `emptyView` like a `childView` so we can properly\n      // remove and/or close it later\n      this.children.add(view);\n  \n      // Render it and show it\n      this.renderChildView(view, this._emptyViewIndex);\n  \n      // call the \'show\' method if the collection view\n      // has already been shown\n      if (this._isShown) {\n        Marionette.triggerMethodOn(view, \'show\');\n      }\n    },\n  \n    // Retrieve the `childView` class, either from `this.options.childView`\n    // or from the `childView` in the object definition. The \"options\"\n    // takes precedence.\n    // This method receives the model that will be passed to the instance\n    // created from this `childView`. Overriding methods may use the child\n    // to determine what `childView` class to return.\n    getChildView: function(child) {\n      var childView = this.getOption(\'childView\');\n  \n      if (!childView) {\n        throw new Marionette.Error({\n          name: \'NoChildViewError\',\n          message: \'A \"childView\" must be specified\'\n        });\n      }\n  \n      return childView;\n    },\n  \n    // Render the child\'s view and add it to the\n    // HTML for the collection view at a given index.\n    // This will also update the indices of later views in the collection\n    // in order to keep the children in sync with the collection.\n    addChild: function(child, ChildView, index) {\n      var childViewOptions = this.getOption(\'childViewOptions\');\n      childViewOptions = Marionette._getValue(childViewOptions, this, [child, index]);\n  \n      var view = this.buildChildView(child, ChildView, childViewOptions);\n  \n      // increment indices of views after this one\n      this._updateIndices(view, true, index);\n  \n      this._addChildView(view, index);\n  \n      view._parent = this;\n  \n      return view;\n    },\n  \n    // Internal method. This decrements or increments the indices of views after the\n    // added/removed view to keep in sync with the collection.\n    _updateIndices: function(view, increment, index) {\n      if (!this.sort) {\n        return;\n      }\n  \n      if (increment) {\n        // assign the index to the view\n        view._index = index;\n      }\n  \n      // update the indexes of views after this one\n      this.children.each(function (laterView) {\n        if (laterView._index >= view._index) {\n          laterView._index += increment ? 1 : -1;\n        }\n      });\n    },\n  \n  \n    // Internal Method. Add the view to children and render it at\n    // the given index.\n    _addChildView: function(view, index) {\n      // set up the child view event forwarding\n      this.proxyChildEvents(view);\n  \n      this.triggerMethod(\'before:add:child\', view);\n  \n      // Store the child view itself so we can properly\n      // remove and/or destroy it later\n      this.children.add(view);\n      this.renderChildView(view, index);\n  \n      if (this._isShown && !this.isBuffering) {\n        Marionette.triggerMethodOn(view, \'show\');\n      }\n  \n      this.triggerMethod(\'add:child\', view);\n    },\n  \n    // render the child view\n    renderChildView: function(view, index) {\n      view.render();\n      this.attachHtml(this, view, index);\n      return view;\n    },\n  \n    // Build a `childView` for a model in the collection.\n    buildChildView: function(child, ChildViewClass, childViewOptions) {\n      var options = _.extend({model: child}, childViewOptions);\n      return new ChildViewClass(options);\n    },\n  \n    // Remove the child view and destroy it.\n    // This function also updates the indices of\n    // later views in the collection in order to keep\n    // the children in sync with the collection.\n    removeChildView: function(view) {\n  \n      if (view) {\n        this.triggerMethod(\'before:remove:child\', view);\n        // call \'destroy\' or \'remove\', depending on which is found\n        if (view.destroy) { view.destroy(); }\n        else if (view.remove) { view.remove(); }\n  \n        delete view._parent;\n        this.stopListening(view);\n        this.children.remove(view);\n        this.triggerMethod(\'remove:child\', view);\n  \n        // decrement the index of views after this one\n        this._updateIndices(view, false);\n      }\n  \n      return view;\n    },\n  \n    // check if the collection is empty\n    isEmpty: function() {\n      return !this.collection || this.collection.length === 0;\n    },\n  \n    // If empty, show the empty view\n    checkEmpty: function() {\n      if (this.isEmpty(this.collection)) {\n        this.showEmptyView();\n      }\n    },\n  \n    // You might need to override this if you\'ve overridden attachHtml\n    attachBuffer: function(collectionView, buffer) {\n      collectionView.$el.append(buffer);\n    },\n  \n    // Append the HTML to the collection\'s `el`.\n    // Override this method to do something other\n    // than `.append`.\n    attachHtml: function(collectionView, childView, index) {\n      if (collectionView.isBuffering) {\n        // buffering happens on reset events and initial renders\n        // in order to reduce the number of inserts into the\n        // document, which are expensive.\n        collectionView.elBuffer.appendChild(childView.el);\n        collectionView._bufferedChildren.push(childView);\n      }\n      else {\n        // If we\'ve already rendered the main collection, append\n        // the new child into the correct order if we need to. Otherwise\n        // append to the end.\n        if (!collectionView._insertBefore(childView, index)){\n          collectionView._insertAfter(childView);\n        }\n      }\n    },\n  \n    // Internal method. Check whether we need to insert the view into\n    // the correct position.\n    _insertBefore: function(childView, index) {\n      var currentView;\n      var findPosition = this.sort && (index < this.children.length - 1);\n      if (findPosition) {\n        // Find the view after this one\n        currentView = this.children.find(function (view) {\n          return view._index === index + 1;\n        });\n      }\n  \n      if (currentView) {\n        currentView.$el.before(childView.el);\n        return true;\n      }\n  \n      return false;\n    },\n  \n    // Internal method. Append a view to the end of the $el\n    _insertAfter: function(childView) {\n      this.$el.append(childView.el);\n    },\n  \n    // Internal method to set up the `children` object for\n    // storing all of the child views\n    _initChildViewStorage: function() {\n      this.children = new Backbone.ChildViewContainer();\n    },\n  \n    // Handle cleanup and other destroying needs for the collection of views\n    destroy: function() {\n      if (this.isDestroyed) { return; }\n  \n      this.triggerMethod(\'before:destroy:collection\');\n      this.destroyChildren();\n      this.triggerMethod(\'destroy:collection\');\n  \n      return Marionette.View.prototype.destroy.apply(this, arguments);\n    },\n  \n    // Destroy the child views that this collection view\n    // is holding on to, if any\n    destroyChildren: function() {\n      var childViews = this.children.map(_.identity);\n      this.children.each(this.removeChildView, this);\n      this.checkEmpty();\n      return childViews;\n    },\n  \n    // Set up the child view event forwarding. Uses a \"childview:\"\n    // prefix in front of all forwarded events.\n    proxyChildEvents: function(view) {\n      var prefix = this.getOption(\'childViewEventPrefix\');\n  \n      // Forward all child view events through the parent,\n      // prepending \"childview:\" to the event name\n      this.listenTo(view, \'all\', function() {\n        var args = _.toArray(arguments);\n        var rootEvent = args[0];\n        var childEvents = this.normalizeMethods(_.result(this, \'childEvents\'));\n  \n        args[0] = prefix + \':\' + rootEvent;\n        args.splice(1, 0, view);\n  \n        // call collectionView childEvent if defined\n        if (typeof childEvents !== \'undefined\' && _.isFunction(childEvents[rootEvent])) {\n          childEvents[rootEvent].apply(this, args.slice(1));\n        }\n  \n        this.triggerMethod.apply(this, args);\n      }, this);\n    },\n  \n    _getImmediateChildren: function() {\n      return _.values(this.children._views);\n    }\n  });\n  \n  /* jshint maxstatements: 17, maxlen: 117 */\n  \n  // Composite View\n  // --------------\n  \n  // Used for rendering a branch-leaf, hierarchical structure.\n  // Extends directly from CollectionView and also renders an\n  // a child view as `modelView`, for the top leaf\n  Marionette.CompositeView = Marionette.CollectionView.extend({\n  \n    // Setting up the inheritance chain which allows changes to\n    // Marionette.CollectionView.prototype.constructor which allows overriding\n    // option to pass \'{sort: false}\' to prevent the CompositeView from\n    // maintaining the sorted order of the collection.\n    // This will fallback onto appending childView\'s to the end.\n    constructor: function() {\n      Marionette.CollectionView.apply(this, arguments);\n    },\n  \n    // Configured the initial events that the composite view\n    // binds to. Override this method to prevent the initial\n    // events, or to add your own initial events.\n    _initialEvents: function() {\n  \n      // Bind only after composite view is rendered to avoid adding child views\n      // to nonexistent childViewContainer\n  \n      if (this.collection) {\n        this.listenTo(this.collection, \'add\', this._onCollectionAdd);\n        this.listenTo(this.collection, \'remove\', this._onCollectionRemove);\n        this.listenTo(this.collection, \'reset\', this._renderChildren);\n  \n        if (this.sort) {\n          this.listenTo(this.collection, \'sort\', this._sortViews);\n        }\n      }\n    },\n  \n    // Retrieve the `childView` to be used when rendering each of\n    // the items in the collection. The default is to return\n    // `this.childView` or Marionette.CompositeView if no `childView`\n    // has been defined\n    getChildView: function(child) {\n      var childView = this.getOption(\'childView\') || this.constructor;\n  \n      return childView;\n    },\n  \n    // Serialize the model for the view.\n    // You can override the `serializeData` method in your own view\n    // definition, to provide custom serialization for your view\'s data.\n    serializeData: function() {\n      var data = {};\n  \n      if (this.model){\n        data = _.partial(this.serializeModel, this.model).apply(this, arguments);\n      }\n  \n      return data;\n    },\n  \n    // Renders the model and the collection.\n    render: function() {\n      this._ensureViewIsIntact();\n      this.isRendered = true;\n      this.resetChildViewContainer();\n  \n      this.triggerMethod(\'before:render\', this);\n  \n      this._renderTemplate();\n      this._renderChildren();\n  \n      this.triggerMethod(\'render\', this);\n      return this;\n    },\n  \n    _renderChildren: function() {\n      if (this.isRendered) {\n        Marionette.CollectionView.prototype._renderChildren.call(this);\n      }\n    },\n  \n    // Render the root template that the children\n    // views are appended to\n    _renderTemplate: function() {\n      var data = {};\n      data = this.serializeData();\n      data = this.mixinTemplateHelpers(data);\n  \n      this.triggerMethod(\'before:render:template\');\n  \n      var template = this.getTemplate();\n      var html = Marionette.Renderer.render(template, data, this);\n      this.attachElContent(html);\n  \n      // the ui bindings is done here and not at the end of render since they\n      // will not be available until after the model is rendered, but should be\n      // available before the collection is rendered.\n      this.bindUIElements();\n      this.triggerMethod(\'render:template\');\n    },\n  \n    // Attaches the content of the root.\n    // This method can be overridden to optimize rendering,\n    // or to render in a non standard way.\n    //\n    // For example, using `innerHTML` instead of `$el.html`\n    //\n    // ```js\n    // attachElContent: function(html) {\n    //   this.el.innerHTML = html;\n    //   return this;\n    // }\n    // ```\n    attachElContent: function(html) {\n      this.$el.html(html);\n  \n      return this;\n    },\n  \n    // You might need to override this if you\'ve overridden attachHtml\n    attachBuffer: function(compositeView, buffer) {\n      var $container = this.getChildViewContainer(compositeView);\n      $container.append(buffer);\n    },\n  \n    // Internal method. Append a view to the end of the $el.\n    // Overidden from CollectionView to ensure view is appended to\n    // childViewContainer\n    _insertAfter: function (childView) {\n      var $container = this.getChildViewContainer(this, childView);\n      $container.append(childView.el);\n    },\n  \n    // Internal method to ensure an `$childViewContainer` exists, for the\n    // `attachHtml` method to use.\n    getChildViewContainer: function(containerView, childView) {\n      if (\'$childViewContainer\' in containerView) {\n        return containerView.$childViewContainer;\n      }\n  \n      var container;\n      var childViewContainer = Marionette.getOption(containerView, \'childViewContainer\');\n      if (childViewContainer) {\n  \n        var selector = Marionette._getValue(childViewContainer, containerView);\n  \n        if (selector.charAt(0) === \'@\' && containerView.ui) {\n          container = containerView.ui[selector.substr(4)];\n        } else {\n          container = containerView.$(selector);\n        }\n  \n        if (container.length <= 0) {\n          throw new Marionette.Error({\n            name: \'ChildViewContainerMissingError\',\n            message: \'The specified \"childViewContainer\" was not found: \' + containerView.childViewContainer\n          });\n        }\n  \n      } else {\n        container = containerView.$el;\n      }\n  \n      containerView.$childViewContainer = container;\n      return container;\n    },\n  \n    // Internal method to reset the `$childViewContainer` on render\n    resetChildViewContainer: function() {\n      if (this.$childViewContainer) {\n        delete this.$childViewContainer;\n      }\n    }\n  });\n  \n  // Layout View\n  // -----------\n  \n  // Used for managing application layoutViews, nested layoutViews and\n  // multiple regions within an application or sub-application.\n  //\n  // A specialized view class that renders an area of HTML and then\n  // attaches `Region` instances to the specified `regions`.\n  // Used for composite view management and sub-application areas.\n  Marionette.LayoutView = Marionette.ItemView.extend({\n    regionClass: Marionette.Region,\n  \n    // Ensure the regions are available when the `initialize` method\n    // is called.\n    constructor: function(options) {\n      options = options || {};\n  \n      this._firstRender = true;\n      this._initializeRegions(options);\n  \n      Marionette.ItemView.call(this, options);\n    },\n  \n    // LayoutView\'s render will use the existing region objects the\n    // first time it is called. Subsequent calls will destroy the\n    // views that the regions are showing and then reset the `el`\n    // for the regions to the newly rendered DOM elements.\n    render: function() {\n      this._ensureViewIsIntact();\n  \n      if (this._firstRender) {\n        // if this is the first render, don\'t do anything to\n        // reset the regions\n        this._firstRender = false;\n      } else {\n        // If this is not the first render call, then we need to\n        // re-initialize the `el` for each region\n        this._reInitializeRegions();\n      }\n  \n      return Marionette.ItemView.prototype.render.apply(this, arguments);\n    },\n  \n    // Handle destroying regions, and then destroy the view itself.\n    destroy: function() {\n      if (this.isDestroyed) { return this; }\n  \n      this.regionManager.destroy();\n      return Marionette.ItemView.prototype.destroy.apply(this, arguments);\n    },\n  \n    // Add a single region, by name, to the layoutView\n    addRegion: function(name, definition) {\n      var regions = {};\n      regions[name] = definition;\n      return this._buildRegions(regions)[name];\n    },\n  \n    // Add multiple regions as a {name: definition, name2: def2} object literal\n    addRegions: function(regions) {\n      this.regions = _.extend({}, this.regions, regions);\n      return this._buildRegions(regions);\n    },\n  \n    // Remove a single region from the LayoutView, by name\n    removeRegion: function(name) {\n      delete this.regions[name];\n      return this.regionManager.removeRegion(name);\n    },\n  \n    // Provides alternative access to regions\n    // Accepts the region name\n    // getRegion(\'main\')\n    getRegion: function(region) {\n      return this.regionManager.get(region);\n    },\n  \n    // Get all regions\n    getRegions: function(){\n      return this.regionManager.getRegions();\n    },\n  \n    // internal method to build regions\n    _buildRegions: function(regions) {\n      var defaults = {\n        regionClass: this.getOption(\'regionClass\'),\n        parentEl: _.partial(_.result, this, \'el\')\n      };\n  \n      return this.regionManager.addRegions(regions, defaults);\n    },\n  \n    // Internal method to initialize the regions that have been defined in a\n    // `regions` attribute on this layoutView.\n    _initializeRegions: function(options) {\n      var regions;\n      this._initRegionManager();\n  \n      regions = Marionette._getValue(this.regions, this, [options]) || {};\n  \n      // Enable users to define `regions` as instance options.\n      var regionOptions = this.getOption.call(options, \'regions\');\n  \n      // enable region options to be a function\n      regionOptions = Marionette._getValue(regionOptions, this, [options]);\n  \n      _.extend(regions, regionOptions);\n  \n      // Normalize region selectors hash to allow\n      // a user to use the @ui. syntax.\n      regions = this.normalizeUIValues(regions);\n  \n      this.addRegions(regions);\n    },\n  \n    // Internal method to re-initialize all of the regions by updating the `el` that\n    // they point to\n    _reInitializeRegions: function() {\n      this.regionManager.invoke(\'reset\');\n    },\n  \n    // Enable easy overriding of the default `RegionManager`\n    // for customized region interactions and business specific\n    // view logic for better control over single regions.\n    getRegionManager: function() {\n      return new Marionette.RegionManager();\n    },\n  \n    // Internal method to initialize the region manager\n    // and all regions in it\n    _initRegionManager: function() {\n      this.regionManager = this.getRegionManager();\n      this.regionManager._parent = this;\n  \n      this.listenTo(this.regionManager, \'before:add:region\', function(name) {\n        this.triggerMethod(\'before:add:region\', name);\n      });\n  \n      this.listenTo(this.regionManager, \'add:region\', function(name, region) {\n        this[name] = region;\n        this.triggerMethod(\'add:region\', name, region);\n      });\n  \n      this.listenTo(this.regionManager, \'before:remove:region\', function(name) {\n        this.triggerMethod(\'before:remove:region\', name);\n      });\n  \n      this.listenTo(this.regionManager, \'remove:region\', function(name, region) {\n        delete this[name];\n        this.triggerMethod(\'remove:region\', name, region);\n      });\n    },\n  \n    _getImmediateChildren: function() {\n      return _.chain(this.regionManager.getRegions())\n        .pluck(\'currentView\')\n        .compact()\n        .value();\n    }\n  });\n  \n\n  // Behavior\n  // --------\n  \n  // A Behavior is an isolated set of DOM /\n  // user interactions that can be mixed into any View.\n  // Behaviors allow you to blackbox View specific interactions\n  // into portable logical chunks, keeping your views simple and your code DRY.\n  \n  Marionette.Behavior = Marionette.Object.extend({\n    constructor: function(options, view) {\n      // Setup reference to the view.\n      // this comes in handle when a behavior\n      // wants to directly talk up the chain\n      // to the view.\n      this.view = view;\n      this.defaults = _.result(this, \'defaults\') || {};\n      this.options  = _.extend({}, this.defaults, options);\n  \n      Marionette.Object.apply(this, arguments);\n    },\n  \n    // proxy behavior $ method to the view\n    // this is useful for doing jquery DOM lookups\n    // scoped to behaviors view.\n    $: function() {\n      return this.view.$.apply(this.view, arguments);\n    },\n  \n    // Stops the behavior from listening to events.\n    // Overrides Object#destroy to prevent additional events from being triggered.\n    destroy: function() {\n      this.stopListening();\n    },\n  \n    proxyViewProperties: function (view) {\n      this.$el = view.$el;\n      this.el = view.el;\n    }\n  });\n  \n  /* jshint maxlen: 143 */\n  // Behaviors\n  // ---------\n  \n  // Behaviors is a utility class that takes care of\n  // gluing your behavior instances to their given View.\n  // The most important part of this class is that you\n  // **MUST** override the class level behaviorsLookup\n  // method for things to work properly.\n  \n  Marionette.Behaviors = (function(Marionette, _) {\n    // Borrow event splitter from Backbone\n    var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n  \n    function Behaviors(view, behaviors) {\n  \n      if (!_.isObject(view.behaviors)) {\n        return {};\n      }\n  \n      // Behaviors defined on a view can be a flat object literal\n      // or it can be a function that returns an object.\n      behaviors = Behaviors.parseBehaviors(view, behaviors || _.result(view, \'behaviors\'));\n  \n      // Wraps several of the view\'s methods\n      // calling the methods first on each behavior\n      // and then eventually calling the method on the view.\n      Behaviors.wrap(view, behaviors, _.keys(methods));\n      return behaviors;\n    }\n  \n    var methods = {\n      behaviorTriggers: function(behaviorTriggers, behaviors) {\n        var triggerBuilder = new BehaviorTriggersBuilder(this, behaviors);\n        return triggerBuilder.buildBehaviorTriggers();\n      },\n  \n      behaviorEvents: function(behaviorEvents, behaviors) {\n        var _behaviorsEvents = {};\n        var viewUI = this._uiBindings || _.result(this, \'ui\');\n  \n        _.each(behaviors, function(b, i) {\n          var _events = {};\n          var behaviorEvents = _.clone(_.result(b, \'events\')) || {};\n          var behaviorUI = b._uiBindings || _.result(b, \'ui\');\n  \n          // Construct an internal UI hash first using\n          // the views UI hash and then the behaviors UI hash.\n          // This allows the user to use UI hash elements\n          // defined in the parent view as well as those\n          // defined in the given behavior.\n          var ui = _.extend({}, viewUI, behaviorUI);\n  \n          // Normalize behavior events hash to allow\n          // a user to use the @ui. syntax.\n          behaviorEvents = Marionette.normalizeUIKeys(behaviorEvents, ui);\n  \n          var j = 0;\n          _.each(behaviorEvents, function(behaviour, key) {\n            var match     = key.match(delegateEventSplitter);\n  \n            // Set event name to be namespaced using the view cid,\n            // the behavior index, and the behavior event index\n            // to generate a non colliding event namespace\n            // http://api.jquery.com/event.namespace/\n            var eventName = match[1] + \'.\' + [this.cid, i, j++, \' \'].join(\'\'),\n                selector  = match[2];\n  \n            var eventKey  = eventName + selector;\n            var handler   = _.isFunction(behaviour) ? behaviour : b[behaviour];\n  \n            _events[eventKey] = _.bind(handler, b);\n          }, this);\n  \n          _behaviorsEvents = _.extend(_behaviorsEvents, _events);\n        }, this);\n  \n        return _behaviorsEvents;\n      }\n    };\n  \n    _.extend(Behaviors, {\n  \n      // Placeholder method to be extended by the user.\n      // The method should define the object that stores the behaviors.\n      // i.e.\n      //\n      // ```js\n      // Marionette.Behaviors.behaviorsLookup: function() {\n      //   return App.Behaviors\n      // }\n      // ```\n      behaviorsLookup: function() {\n        throw new Marionette.Error({\n          message: \'You must define where your behaviors are stored.\',\n          url: \'marionette.behaviors.html#behaviorslookup\'\n        });\n      },\n  \n      // Takes care of getting the behavior class\n      // given options and a key.\n      // If a user passes in options.behaviorClass\n      // default to using that. Otherwise delegate\n      // the lookup to the users `behaviorsLookup` implementation.\n      getBehaviorClass: function(options, key) {\n        if (options.behaviorClass) {\n          return options.behaviorClass;\n        }\n  \n        // Get behavior class can be either a flat object or a method\n        return Marionette._getValue(Behaviors.behaviorsLookup, this, [options, key])[key];\n      },\n  \n      // Iterate over the behaviors object, for each behavior\n      // instantiate it and get its grouped behaviors.\n      parseBehaviors: function(view, behaviors) {\n        return _.chain(behaviors).map(function(options, key) {\n          var BehaviorClass = Behaviors.getBehaviorClass(options, key);\n  \n          var behavior = new BehaviorClass(options, view);\n          var nestedBehaviors = Behaviors.parseBehaviors(view, _.result(behavior, \'behaviors\'));\n  \n          return [behavior].concat(nestedBehaviors);\n        }).flatten().value();\n      },\n  \n      // Wrap view internal methods so that they delegate to behaviors. For example,\n      // `onDestroy` should trigger destroy on all of the behaviors and then destroy itself.\n      // i.e.\n      //\n      // `view.delegateEvents = _.partial(methods.delegateEvents, view.delegateEvents, behaviors);`\n      wrap: function(view, behaviors, methodNames) {\n        _.each(methodNames, function(methodName) {\n          view[methodName] = _.partial(methods[methodName], view[methodName], behaviors);\n        });\n      }\n    });\n  \n    // Class to build handlers for `triggers` on behaviors\n    // for views\n    function BehaviorTriggersBuilder(view, behaviors) {\n      this._view      = view;\n      this._viewUI    = _.result(view, \'ui\');\n      this._behaviors = behaviors;\n      this._triggers  = {};\n    }\n  \n    _.extend(BehaviorTriggersBuilder.prototype, {\n      // Main method to build the triggers hash with event keys and handlers\n      buildBehaviorTriggers: function() {\n        _.each(this._behaviors, this._buildTriggerHandlersForBehavior, this);\n        return this._triggers;\n      },\n  \n      // Internal method to build all trigger handlers for a given behavior\n      _buildTriggerHandlersForBehavior: function(behavior, i) {\n        var ui = _.extend({}, this._viewUI, _.result(behavior, \'ui\'));\n        var triggersHash = _.clone(_.result(behavior, \'triggers\')) || {};\n  \n        triggersHash = Marionette.normalizeUIKeys(triggersHash, ui);\n  \n        _.each(triggersHash, _.bind(this._setHandlerForBehavior, this, behavior, i));\n      },\n  \n      // Internal method to create and assign the trigger handler for a given\n      // behavior\n      _setHandlerForBehavior: function(behavior, i, eventName, trigger) {\n        // Unique identifier for the `this._triggers` hash\n        var triggerKey = trigger.replace(/^\\S+/, function(triggerName) {\n          return triggerName + \'.\' + \'behaviortriggers\' + i;\n        });\n  \n        this._triggers[triggerKey] = this._view._buildViewTrigger(eventName);\n      }\n    });\n  \n    return Behaviors;\n  \n  })(Marionette, _);\n  \n\n  // App Router\n  // ----------\n  \n  // Reduce the boilerplate code of handling route events\n  // and then calling a single method on another object.\n  // Have your routers configured to call the method on\n  // your object, directly.\n  //\n  // Configure an AppRouter with `appRoutes`.\n  //\n  // App routers can only take one `controller` object.\n  // It is recommended that you divide your controller\n  // objects in to smaller pieces of related functionality\n  // and have multiple routers / controllers, instead of\n  // just one giant router and controller.\n  //\n  // You can also add standard routes to an AppRouter.\n  \n  Marionette.AppRouter = Backbone.Router.extend({\n  \n    constructor: function(options) {\n      this.options = options || {};\n  \n      Backbone.Router.apply(this, arguments);\n  \n      var appRoutes = this.getOption(\'appRoutes\');\n      var controller = this._getController();\n      this.processAppRoutes(controller, appRoutes);\n      this.on(\'route\', this._processOnRoute, this);\n    },\n  \n    // Similar to route method on a Backbone Router but\n    // method is called on the controller\n    appRoute: function(route, methodName) {\n      var controller = this._getController();\n      this._addAppRoute(controller, route, methodName);\n    },\n  \n    // process the route event and trigger the onRoute\n    // method call, if it exists\n    _processOnRoute: function(routeName, routeArgs) {\n      // make sure an onRoute before trying to call it\n      if (_.isFunction(this.onRoute)) {\n        // find the path that matches the current route\n        var routePath = _.invert(this.getOption(\'appRoutes\'))[routeName];\n        this.onRoute(routeName, routePath, routeArgs);\n      }\n    },\n  \n    // Internal method to process the `appRoutes` for the\n    // router, and turn them in to routes that trigger the\n    // specified method on the specified `controller`.\n    processAppRoutes: function(controller, appRoutes) {\n      if (!appRoutes) { return; }\n  \n      var routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes\n  \n      _.each(routeNames, function(route) {\n        this._addAppRoute(controller, route, appRoutes[route]);\n      }, this);\n    },\n  \n    _getController: function() {\n      return this.getOption(\'controller\');\n    },\n  \n    _addAppRoute: function(controller, route, methodName) {\n      var method = controller[methodName];\n  \n      if (!method) {\n        throw new Marionette.Error(\'Method \"\' + methodName + \'\" was not found on the controller\');\n      }\n  \n      this.route(route, methodName, _.bind(method, controller));\n    },\n  \n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n  \n    triggerMethod: Marionette.triggerMethod,\n  \n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n  \n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n  \n  // Application\n  // -----------\n  \n  // Contain and manage the composite application as a whole.\n  // Stores and starts up `Region` objects, includes an\n  // event aggregator as `app.vent`\n  Marionette.Application = Marionette.Object.extend({\n    constructor: function(options) {\n      this._initializeRegions(options);\n      this._initCallbacks = new Marionette.Callbacks();\n      this.submodules = {};\n      _.extend(this, options);\n      this._initChannel();\n      Marionette.Object.call(this, options);\n    },\n  \n    // Command execution, facilitated by Backbone.Wreqr.Commands\n    execute: function() {\n      this.commands.execute.apply(this.commands, arguments);\n    },\n  \n    // Request/response, facilitated by Backbone.Wreqr.RequestResponse\n    request: function() {\n      return this.reqres.request.apply(this.reqres, arguments);\n    },\n  \n    // Add an initializer that is either run at when the `start`\n    // method is called, or run immediately if added after `start`\n    // has already been called.\n    addInitializer: function(initializer) {\n      this._initCallbacks.add(initializer);\n    },\n  \n    // kick off all of the application\'s processes.\n    // initializes all of the regions that have been added\n    // to the app, and runs all of the initializer functions\n    start: function(options) {\n      this.triggerMethod(\'before:start\', options);\n      this._initCallbacks.run(options, this);\n      this.triggerMethod(\'start\', options);\n    },\n  \n    // Add regions to your app.\n    // Accepts a hash of named strings or Region objects\n    // addRegions({something: \"#someRegion\"})\n    // addRegions({something: Region.extend({el: \"#someRegion\"}) });\n    addRegions: function(regions) {\n      return this._regionManager.addRegions(regions);\n    },\n  \n    // Empty all regions in the app, without removing them\n    emptyRegions: function() {\n      return this._regionManager.emptyRegions();\n    },\n  \n    // Removes a region from your app, by name\n    // Accepts the regions name\n    // removeRegion(\'myRegion\')\n    removeRegion: function(region) {\n      return this._regionManager.removeRegion(region);\n    },\n  \n    // Provides alternative access to regions\n    // Accepts the region name\n    // getRegion(\'main\')\n    getRegion: function(region) {\n      return this._regionManager.get(region);\n    },\n  \n    // Get all the regions from the region manager\n    getRegions: function(){\n      return this._regionManager.getRegions();\n    },\n  \n    // Create a module, attached to the application\n    module: function(moduleNames, moduleDefinition) {\n  \n      // Overwrite the module class if the user specifies one\n      var ModuleClass = Marionette.Module.getClass(moduleDefinition);\n  \n      var args = _.toArray(arguments);\n      args.unshift(this);\n  \n      // see the Marionette.Module object for more information\n      return ModuleClass.create.apply(ModuleClass, args);\n    },\n  \n    // Enable easy overriding of the default `RegionManager`\n    // for customized region interactions and business-specific\n    // view logic for better control over single regions.\n    getRegionManager: function() {\n      return new Marionette.RegionManager();\n    },\n  \n    // Internal method to initialize the regions that have been defined in a\n    // `regions` attribute on the application instance\n    _initializeRegions: function(options) {\n      var regions = _.isFunction(this.regions) ? this.regions(options) : this.regions || {};\n  \n      this._initRegionManager();\n  \n      // Enable users to define `regions` in instance options.\n      var optionRegions = Marionette.getOption(options, \'regions\');\n  \n      // Enable region options to be a function\n      if (_.isFunction(optionRegions)) {\n        optionRegions = optionRegions.call(this, options);\n      }\n  \n      // Overwrite current regions with those passed in options\n      _.extend(regions, optionRegions);\n  \n      this.addRegions(regions);\n  \n      return this;\n    },\n  \n    // Internal method to set up the region manager\n    _initRegionManager: function() {\n      this._regionManager = this.getRegionManager();\n      this._regionManager._parent = this;\n  \n      this.listenTo(this._regionManager, \'before:add:region\', function() {\n        Marionette._triggerMethod(this, \'before:add:region\', arguments);\n      });\n  \n      this.listenTo(this._regionManager, \'add:region\', function(name, region) {\n        this[name] = region;\n        Marionette._triggerMethod(this, \'add:region\', arguments);\n      });\n  \n      this.listenTo(this._regionManager, \'before:remove:region\', function() {\n        Marionette._triggerMethod(this, \'before:remove:region\', arguments);\n      });\n  \n      this.listenTo(this._regionManager, \'remove:region\', function(name) {\n        delete this[name];\n        Marionette._triggerMethod(this, \'remove:region\', arguments);\n      });\n    },\n  \n    // Internal method to setup the Wreqr.radio channel\n    _initChannel: function() {\n      this.channelName = _.result(this, \'channelName\') || \'global\';\n      this.channel = _.result(this, \'channel\') || Backbone.Wreqr.radio.channel(this.channelName);\n      this.vent = _.result(this, \'vent\') || this.channel.vent;\n      this.commands = _.result(this, \'commands\') || this.channel.commands;\n      this.reqres = _.result(this, \'reqres\') || this.channel.reqres;\n    }\n  });\n  \n  /* jshint maxparams: 9 */\n  \n  // Module\n  // ------\n  \n  // A simple module system, used to create privacy and encapsulation in\n  // Marionette applications\n  Marionette.Module = function(moduleName, app, options) {\n    this.moduleName = moduleName;\n    this.options = _.extend({}, this.options, options);\n    // Allow for a user to overide the initialize\n    // for a given module instance.\n    this.initialize = options.initialize || this.initialize;\n  \n    // Set up an internal store for sub-modules.\n    this.submodules = {};\n  \n    this._setupInitializersAndFinalizers();\n  \n    // Set an internal reference to the app\n    // within a module.\n    this.app = app;\n  \n    if (_.isFunction(this.initialize)) {\n      this.initialize(moduleName, app, this.options);\n    }\n  };\n  \n  Marionette.Module.extend = Marionette.extend;\n  \n  // Extend the Module prototype with events / listenTo, so that the module\n  // can be used as an event aggregator or pub/sub.\n  _.extend(Marionette.Module.prototype, Backbone.Events, {\n  \n    // By default modules start with their parents.\n    startWithParent: true,\n  \n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic when extending Marionette.Module.\n    initialize: function() {},\n  \n    // Initializer for a specific module. Initializers are run when the\n    // module\'s `start` method is called.\n    addInitializer: function(callback) {\n      this._initializerCallbacks.add(callback);\n    },\n  \n    // Finalizers are run when a module is stopped. They are used to teardown\n    // and finalize any variables, references, events and other code that the\n    // module had set up.\n    addFinalizer: function(callback) {\n      this._finalizerCallbacks.add(callback);\n    },\n  \n    // Start the module, and run all of its initializers\n    start: function(options) {\n      // Prevent re-starting a module that is already started\n      if (this._isInitialized) { return; }\n  \n      // start the sub-modules (depth-first hierarchy)\n      _.each(this.submodules, function(mod) {\n        // check to see if we should start the sub-module with this parent\n        if (mod.startWithParent) {\n          mod.start(options);\n        }\n      });\n  \n      // run the callbacks to \"start\" the current module\n      this.triggerMethod(\'before:start\', options);\n  \n      this._initializerCallbacks.run(options, this);\n      this._isInitialized = true;\n  \n      this.triggerMethod(\'start\', options);\n    },\n  \n    // Stop this module by running its finalizers and then stop all of\n    // the sub-modules for this module\n    stop: function() {\n      // if we are not initialized, don\'t bother finalizing\n      if (!this._isInitialized) { return; }\n      this._isInitialized = false;\n  \n      this.triggerMethod(\'before:stop\');\n  \n      // stop the sub-modules; depth-first, to make sure the\n      // sub-modules are stopped / finalized before parents\n      _.invoke(this.submodules, \'stop\');\n  \n      // run the finalizers\n      this._finalizerCallbacks.run(undefined, this);\n  \n      // reset the initializers and finalizers\n      this._initializerCallbacks.reset();\n      this._finalizerCallbacks.reset();\n  \n      this.triggerMethod(\'stop\');\n    },\n  \n    // Configure the module with a definition function and any custom args\n    // that are to be passed in to the definition function\n    addDefinition: function(moduleDefinition, customArgs) {\n      this._runModuleDefinition(moduleDefinition, customArgs);\n    },\n  \n    // Internal method: run the module definition function with the correct\n    // arguments\n    _runModuleDefinition: function(definition, customArgs) {\n      // If there is no definition short circut the method.\n      if (!definition) { return; }\n  \n      // build the correct list of arguments for the module definition\n      var args = _.flatten([\n        this,\n        this.app,\n        Backbone,\n        Marionette,\n        Backbone.$, _,\n        customArgs\n      ]);\n  \n      definition.apply(this, args);\n    },\n  \n    // Internal method: set up new copies of initializers and finalizers.\n    // Calling this method will wipe out all existing initializers and\n    // finalizers.\n    _setupInitializersAndFinalizers: function() {\n      this._initializerCallbacks = new Marionette.Callbacks();\n      this._finalizerCallbacks = new Marionette.Callbacks();\n    },\n  \n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod\n  });\n  \n  // Class methods to create modules\n  _.extend(Marionette.Module, {\n  \n    // Create a module, hanging off the app parameter as the parent object.\n    create: function(app, moduleNames, moduleDefinition) {\n      var module = app;\n  \n      // get the custom args passed in after the module definition and\n      // get rid of the module name and definition function\n      var customArgs = _.rest(arguments, 3);\n  \n      // Split the module names and get the number of submodules.\n      // i.e. an example module name of `Doge.Wow.Amaze` would\n      // then have the potential for 3 module definitions.\n      moduleNames = moduleNames.split(\'.\');\n      var length = moduleNames.length;\n  \n      // store the module definition for the last module in the chain\n      var moduleDefinitions = [];\n      moduleDefinitions[length - 1] = moduleDefinition;\n  \n      // Loop through all the parts of the module definition\n      _.each(moduleNames, function(moduleName, i) {\n        var parentModule = module;\n        module = this._getModule(parentModule, moduleName, app, moduleDefinition);\n        this._addModuleDefinition(parentModule, module, moduleDefinitions[i], customArgs);\n      }, this);\n  \n      // Return the last module in the definition chain\n      return module;\n    },\n  \n    _getModule: function(parentModule, moduleName, app, def, args) {\n      var options = _.extend({}, def);\n      var ModuleClass = this.getClass(def);\n  \n      // Get an existing module of this name if we have one\n      var module = parentModule[moduleName];\n  \n      if (!module) {\n        // Create a new module if we don\'t have one\n        module = new ModuleClass(moduleName, app, options);\n        parentModule[moduleName] = module;\n        // store the module on the parent\n        parentModule.submodules[moduleName] = module;\n      }\n  \n      return module;\n    },\n  \n    // ## Module Classes\n    //\n    // Module classes can be used as an alternative to the define pattern.\n    // The extend function of a Module is identical to the extend functions\n    // on other Backbone and Marionette classes.\n    // This allows module lifecyle events like `onStart` and `onStop` to be called directly.\n    getClass: function(moduleDefinition) {\n      var ModuleClass = Marionette.Module;\n  \n      if (!moduleDefinition) {\n        return ModuleClass;\n      }\n  \n      // If all of the module\'s functionality is defined inside its class,\n      // then the class can be passed in directly. `MyApp.module(\"Foo\", FooModule)`.\n      if (moduleDefinition.prototype instanceof ModuleClass) {\n        return moduleDefinition;\n      }\n  \n      return moduleDefinition.moduleClass || ModuleClass;\n    },\n  \n    // Add the module definition and add a startWithParent initializer function.\n    // This is complicated because module definitions are heavily overloaded\n    // and support an anonymous function, module class, or options object\n    _addModuleDefinition: function(parentModule, module, def, args) {\n      var fn = this._getDefine(def);\n      var startWithParent = this._getStartWithParent(def, module);\n  \n      if (fn) {\n        module.addDefinition(fn, args);\n      }\n  \n      this._addStartWithParent(parentModule, module, startWithParent);\n    },\n  \n    _getStartWithParent: function(def, module) {\n      var swp;\n  \n      if (_.isFunction(def) && (def.prototype instanceof Marionette.Module)) {\n        swp = module.constructor.prototype.startWithParent;\n        return _.isUndefined(swp) ? true : swp;\n      }\n  \n      if (_.isObject(def)) {\n        swp = def.startWithParent;\n        return _.isUndefined(swp) ? true : swp;\n      }\n  \n      return true;\n    },\n  \n    _getDefine: function(def) {\n      if (_.isFunction(def) && !(def.prototype instanceof Marionette.Module)) {\n        return def;\n      }\n  \n      if (_.isObject(def)) {\n        return def.define;\n      }\n  \n      return null;\n    },\n  \n    _addStartWithParent: function(parentModule, module, startWithParent) {\n      module.startWithParent = module.startWithParent && startWithParent;\n  \n      if (!module.startWithParent || !!module.startWithParentIsConfigured) {\n        return;\n      }\n  \n      module.startWithParentIsConfigured = true;\n  \n      parentModule.addInitializer(function(options) {\n        if (module.startWithParent) {\n          module.start(options);\n        }\n      });\n    }\n  });\n  \n\n  return Marionette;\n}));\n\n//# sourceURL=/E:/Javascript projects/Heartbeat/App/Heartbeat/www/src/js/libs/backbone.marionette.js");

eval("/*!\r\n\r\n handlebars v2.0.0\r\n\r\nCopyright (C) 2011-2014 by Yehuda Katz\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n@license\r\n*/\r\n/* exported Handlebars */\r\n(function (root, factory) {\r\n  if (typeof define === \'function\' && define.amd) {\r\n    define(\'handlebars.runtime\',[], factory);\r\n  } else if (typeof exports === \'object\') {\r\n    module.exports = factory();\r\n  } else {\r\n    root.Handlebars = root.Handlebars || factory();\r\n  }\r\n}(this, function () {\r\n// handlebars/safe-string.js\r\nvar __module3__ = (function() {\r\n  \"use strict\";\r\n  var __exports__;\r\n  // Build out our basic SafeString type\r\n  function SafeString(string) {\r\n    this.string = string;\r\n  }\r\n\r\n  SafeString.prototype.toString = function() {\r\n    return \"\" + this.string;\r\n  };\r\n\r\n  __exports__ = SafeString;\r\n  return __exports__;\r\n})();\r\n\r\n// handlebars/utils.js\r\nvar __module2__ = (function(__dependency1__) {\r\n  \"use strict\";\r\n  var __exports__ = {};\r\n  /*jshint -W004 */\r\n  var SafeString = __dependency1__;\r\n\r\n  var escape = {\r\n    \"&\": \"&amp;\",\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    \'\"\': \"&quot;\",\r\n    \"\'\": \"&#x27;\",\r\n    \"`\": \"&#x60;\"\r\n  };\r\n\r\n  var badChars = /[&<>\"\'`]/g;\r\n  var possible = /[&<>\"\'`]/;\r\n\r\n  function escapeChar(chr) {\r\n    return escape[chr];\r\n  }\r\n\r\n  function extend(obj /* , ...source */) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      for (var key in arguments[i]) {\r\n        if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\r\n          obj[key] = arguments[i][key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  __exports__.extend = extend;var toString = Object.prototype.toString;\r\n  __exports__.toString = toString;\r\n  // Sourced from lodash\r\n  // https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\r\n  var isFunction = function(value) {\r\n    return typeof value === \'function\';\r\n  };\r\n  // fallback for older versions of Chrome and Safari\r\n  /* istanbul ignore next */\r\n  if (isFunction(/x/)) {\r\n    isFunction = function(value) {\r\n      return typeof value === \'function\' && toString.call(value) === \'[object Function]\';\r\n    };\r\n  }\r\n  var isFunction;\r\n  __exports__.isFunction = isFunction;\r\n  /* istanbul ignore next */\r\n  var isArray = Array.isArray || function(value) {\r\n    return (value && typeof value === \'object\') ? toString.call(value) === \'[object Array]\' : false;\r\n  };\r\n  __exports__.isArray = isArray;\r\n\r\n  function escapeExpression(string) {\r\n    // don\'t escape SafeStrings, since they\'re already safe\r\n    if (string instanceof SafeString) {\r\n      return string.toString();\r\n    } else if (string == null) {\r\n      return \"\";\r\n    } else if (!string) {\r\n      return string + \'\';\r\n    }\r\n\r\n    // Force a string conversion as this will be done by the append regardless and\r\n    // the regex test will do this transparently behind the scenes, causing issues if\r\n    // an object\'s to string has escaped characters in it.\r\n    string = \"\" + string;\r\n\r\n    if(!possible.test(string)) { return string; }\r\n    return string.replace(badChars, escapeChar);\r\n  }\r\n\r\n  __exports__.escapeExpression = escapeExpression;function isEmpty(value) {\r\n    if (!value && value !== 0) {\r\n      return true;\r\n    } else if (isArray(value) && value.length === 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  __exports__.isEmpty = isEmpty;function appendContextPath(contextPath, id) {\r\n    return (contextPath ? contextPath + \'.\' : \'\') + id;\r\n  }\r\n\r\n  __exports__.appendContextPath = appendContextPath;\r\n  return __exports__;\r\n})(__module3__);\r\n\r\n// handlebars/exception.js\r\nvar __module4__ = (function() {\r\n  \"use strict\";\r\n  var __exports__;\r\n\r\n  var errorProps = [\'description\', \'fileName\', \'lineNumber\', \'message\', \'name\', \'number\', \'stack\'];\r\n\r\n  function Exception(message, node) {\r\n    var line;\r\n    if (node && node.firstLine) {\r\n      line = node.firstLine;\r\n\r\n      message += \' - \' + line + \':\' + node.firstColumn;\r\n    }\r\n\r\n    var tmp = Error.prototype.constructor.call(this, message);\r\n\r\n    // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn\'t work.\r\n    for (var idx = 0; idx < errorProps.length; idx++) {\r\n      this[errorProps[idx]] = tmp[errorProps[idx]];\r\n    }\r\n\r\n    if (line) {\r\n      this.lineNumber = line;\r\n      this.column = node.firstColumn;\r\n    }\r\n  }\r\n\r\n  Exception.prototype = new Error();\r\n\r\n  __exports__ = Exception;\r\n  return __exports__;\r\n})();\r\n\r\n// handlebars/base.js\r\nvar __module1__ = (function(__dependency1__, __dependency2__) {\r\n  \"use strict\";\r\n  var __exports__ = {};\r\n  var Utils = __dependency1__;\r\n  var Exception = __dependency2__;\r\n\r\n  var VERSION = \"2.0.0\";\r\n  __exports__.VERSION = VERSION;var COMPILER_REVISION = 6;\r\n  __exports__.COMPILER_REVISION = COMPILER_REVISION;\r\n  var REVISION_CHANGES = {\r\n    1: \'<= 1.0.rc.2\', // 1.0.rc.2 is actually rev2 but doesn\'t report it\r\n    2: \'== 1.0.0-rc.3\',\r\n    3: \'== 1.0.0-rc.4\',\r\n    4: \'== 1.x.x\',\r\n    5: \'== 2.0.0-alpha.x\',\r\n    6: \'>= 2.0.0-beta.1\'\r\n  };\r\n  __exports__.REVISION_CHANGES = REVISION_CHANGES;\r\n  var isArray = Utils.isArray,\r\n      isFunction = Utils.isFunction,\r\n      toString = Utils.toString,\r\n      objectType = \'[object Object]\';\r\n\r\n  function HandlebarsEnvironment(helpers, partials) {\r\n    this.helpers = helpers || {};\r\n    this.partials = partials || {};\r\n\r\n    registerDefaultHelpers(this);\r\n  }\r\n\r\n  __exports__.HandlebarsEnvironment = HandlebarsEnvironment;HandlebarsEnvironment.prototype = {\r\n    constructor: HandlebarsEnvironment,\r\n\r\n    logger: logger,\r\n    log: log,\r\n\r\n    registerHelper: function(name, fn) {\r\n      if (toString.call(name) === objectType) {\r\n        if (fn) { throw new Exception(\'Arg not supported with multiple helpers\'); }\r\n        Utils.extend(this.helpers, name);\r\n      } else {\r\n        this.helpers[name] = fn;\r\n      }\r\n    },\r\n    unregisterHelper: function(name) {\r\n      delete this.helpers[name];\r\n    },\r\n\r\n    registerPartial: function(name, partial) {\r\n      if (toString.call(name) === objectType) {\r\n        Utils.extend(this.partials,  name);\r\n      } else {\r\n        this.partials[name] = partial;\r\n      }\r\n    },\r\n    unregisterPartial: function(name) {\r\n      delete this.partials[name];\r\n    }\r\n  };\r\n\r\n  function registerDefaultHelpers(instance) {\r\n    instance.registerHelper(\'helperMissing\', function(/* [args, ]options */) {\r\n      if(arguments.length === 1) {\r\n        // A missing field in a {{foo}} constuct.\r\n        return undefined;\r\n      } else {\r\n        // Someone is actually trying to call something, blow up.\r\n        throw new Exception(\"Missing helper: \'\" + arguments[arguments.length-1].name + \"\'\");\r\n      }\r\n    });\r\n\r\n    instance.registerHelper(\'blockHelperMissing\', function(context, options) {\r\n      var inverse = options.inverse,\r\n          fn = options.fn;\r\n\r\n      if(context === true) {\r\n        return fn(this);\r\n      } else if(context === false || context == null) {\r\n        return inverse(this);\r\n      } else if (isArray(context)) {\r\n        if(context.length > 0) {\r\n          if (options.ids) {\r\n            options.ids = [options.name];\r\n          }\r\n\r\n          return instance.helpers.each(context, options);\r\n        } else {\r\n          return inverse(this);\r\n        }\r\n      } else {\r\n        if (options.data && options.ids) {\r\n          var data = createFrame(options.data);\r\n          data.contextPath = Utils.appendContextPath(options.data.contextPath, options.name);\r\n          options = {data: data};\r\n        }\r\n\r\n        return fn(context, options);\r\n      }\r\n    });\r\n\r\n    instance.registerHelper(\'each\', function(context, options) {\r\n      if (!options) {\r\n        throw new Exception(\'Must pass iterator to #each\');\r\n      }\r\n\r\n      var fn = options.fn, inverse = options.inverse;\r\n      var i = 0, ret = \"\", data;\r\n\r\n      var contextPath;\r\n      if (options.data && options.ids) {\r\n        contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]) + \'.\';\r\n      }\r\n\r\n      if (isFunction(context)) { context = context.call(this); }\r\n\r\n      if (options.data) {\r\n        data = createFrame(options.data);\r\n      }\r\n\r\n      if(context && typeof context === \'object\') {\r\n        if (isArray(context)) {\r\n          for(var j = context.length; i<j; i++) {\r\n            if (data) {\r\n              data.index = i;\r\n              data.first = (i === 0);\r\n              data.last  = (i === (context.length-1));\r\n\r\n              if (contextPath) {\r\n                data.contextPath = contextPath + i;\r\n              }\r\n            }\r\n            ret = ret + fn(context[i], { data: data });\r\n          }\r\n        } else {\r\n          for(var key in context) {\r\n            if(context.hasOwnProperty(key)) {\r\n              if(data) {\r\n                data.key = key;\r\n                data.index = i;\r\n                data.first = (i === 0);\r\n\r\n                if (contextPath) {\r\n                  data.contextPath = contextPath + key;\r\n                }\r\n              }\r\n              ret = ret + fn(context[key], {data: data});\r\n              i++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if(i === 0){\r\n        ret = inverse(this);\r\n      }\r\n\r\n      return ret;\r\n    });\r\n\r\n    instance.registerHelper(\'if\', function(conditional, options) {\r\n      if (isFunction(conditional)) { conditional = conditional.call(this); }\r\n\r\n      // Default behavior is to render the positive path if the value is truthy and not empty.\r\n      // The `includeZero` option may be set to treat the condtional as purely not empty based on the\r\n      // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\r\n      if ((!options.hash.includeZero && !conditional) || Utils.isEmpty(conditional)) {\r\n        return options.inverse(this);\r\n      } else {\r\n        return options.fn(this);\r\n      }\r\n    });\r\n\r\n    instance.registerHelper(\'unless\', function(conditional, options) {\r\n      return instance.helpers[\'if\'].call(this, conditional, {fn: options.inverse, inverse: options.fn, hash: options.hash});\r\n    });\r\n\r\n    instance.registerHelper(\'with\', function(context, options) {\r\n      if (isFunction(context)) { context = context.call(this); }\r\n\r\n      var fn = options.fn;\r\n\r\n      if (!Utils.isEmpty(context)) {\r\n        if (options.data && options.ids) {\r\n          var data = createFrame(options.data);\r\n          data.contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]);\r\n          options = {data:data};\r\n        }\r\n\r\n        return fn(context, options);\r\n      } else {\r\n        return options.inverse(this);\r\n      }\r\n    });\r\n\r\n    instance.registerHelper(\'log\', function(message, options) {\r\n      var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;\r\n      instance.log(level, message);\r\n    });\r\n\r\n    instance.registerHelper(\'lookup\', function(obj, field) {\r\n      return obj && obj[field];\r\n    });\r\n  }\r\n\r\n  var logger = {\r\n    methodMap: { 0: \'debug\', 1: \'info\', 2: \'warn\', 3: \'error\' },\r\n\r\n    // State enum\r\n    DEBUG: 0,\r\n    INFO: 1,\r\n    WARN: 2,\r\n    ERROR: 3,\r\n    level: 3,\r\n\r\n    // can be overridden in the host environment\r\n    log: function(level, message) {\r\n      if (logger.level <= level) {\r\n        var method = logger.methodMap[level];\r\n        if (typeof console !== \'undefined\' && console[method]) {\r\n          console[method].call(console, message);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  __exports__.logger = logger;\r\n  var log = logger.log;\r\n  __exports__.log = log;\r\n  var createFrame = function(object) {\r\n    var frame = Utils.extend({}, object);\r\n    frame._parent = object;\r\n    return frame;\r\n  };\r\n  __exports__.createFrame = createFrame;\r\n  return __exports__;\r\n})(__module2__, __module4__);\r\n\r\n// handlebars/runtime.js\r\nvar __module5__ = (function(__dependency1__, __dependency2__, __dependency3__) {\r\n  \"use strict\";\r\n  var __exports__ = {};\r\n  var Utils = __dependency1__;\r\n  var Exception = __dependency2__;\r\n  var COMPILER_REVISION = __dependency3__.COMPILER_REVISION;\r\n  var REVISION_CHANGES = __dependency3__.REVISION_CHANGES;\r\n  var createFrame = __dependency3__.createFrame;\r\n\r\n  function checkRevision(compilerInfo) {\r\n    var compilerRevision = compilerInfo && compilerInfo[0] || 1,\r\n        currentRevision = COMPILER_REVISION;\r\n\r\n    if (compilerRevision !== currentRevision) {\r\n      if (compilerRevision < currentRevision) {\r\n        var runtimeVersions = REVISION_CHANGES[currentRevision],\r\n            compilerVersions = REVISION_CHANGES[compilerRevision];\r\n        throw new Exception(\"Template was precompiled with an older version of Handlebars than the current runtime. \"+\r\n              \"Please update your precompiler to a newer version (\"+runtimeVersions+\") or downgrade your runtime to an older version (\"+compilerVersions+\").\");\r\n      } else {\r\n        // Use the embedded version info since the runtime doesn\'t know about this revision yet\r\n        throw new Exception(\"Template was precompiled with a newer version of Handlebars than the current runtime. \"+\r\n              \"Please update your runtime to a newer version (\"+compilerInfo[1]+\").\");\r\n      }\r\n    }\r\n  }\r\n\r\n  __exports__.checkRevision = checkRevision;// TODO: Remove this line and break up compilePartial\r\n\r\n  function template(templateSpec, env) {\r\n    /* istanbul ignore next */\r\n    if (!env) {\r\n      throw new Exception(\"No environment passed to template\");\r\n    }\r\n    if (!templateSpec || !templateSpec.main) {\r\n      throw new Exception(\'Unknown template object: \' + typeof templateSpec);\r\n    }\r\n\r\n    // Note: Using env.VM references rather than local var references throughout this section to allow\r\n    // for external users to override these as psuedo-supported APIs.\r\n    env.VM.checkRevision(templateSpec.compiler);\r\n\r\n    var invokePartialWrapper = function(partial, indent, name, context, hash, helpers, partials, data, depths) {\r\n      if (hash) {\r\n        context = Utils.extend({}, context, hash);\r\n      }\r\n\r\n      var result = env.VM.invokePartial.call(this, partial, name, context, helpers, partials, data, depths);\r\n\r\n      if (result == null && env.compile) {\r\n        var options = { helpers: helpers, partials: partials, data: data, depths: depths };\r\n        partials[name] = env.compile(partial, { data: data !== undefined, compat: templateSpec.compat }, env);\r\n        result = partials[name](context, options);\r\n      }\r\n      if (result != null) {\r\n        if (indent) {\r\n          var lines = result.split(\'\\n\');\r\n          for (var i = 0, l = lines.length; i < l; i++) {\r\n            if (!lines[i] && i + 1 === l) {\r\n              break;\r\n            }\r\n\r\n            lines[i] = indent + lines[i];\r\n          }\r\n          result = lines.join(\'\\n\');\r\n        }\r\n        return result;\r\n      } else {\r\n        throw new Exception(\"The partial \" + name + \" could not be compiled when running in runtime-only mode\");\r\n      }\r\n    };\r\n\r\n    // Just add water\r\n    var container = {\r\n      lookup: function(depths, name) {\r\n        var len = depths.length;\r\n        for (var i = 0; i < len; i++) {\r\n          if (depths[i] && depths[i][name] != null) {\r\n            return depths[i][name];\r\n          }\r\n        }\r\n      },\r\n      lambda: function(current, context) {\r\n        return typeof current === \'function\' ? current.call(context) : current;\r\n      },\r\n\r\n      escapeExpression: Utils.escapeExpression,\r\n      invokePartial: invokePartialWrapper,\r\n\r\n      fn: function(i) {\r\n        return templateSpec[i];\r\n      },\r\n\r\n      programs: [],\r\n      program: function(i, data, depths) {\r\n        var programWrapper = this.programs[i],\r\n            fn = this.fn(i);\r\n        if (data || depths) {\r\n          programWrapper = program(this, i, fn, data, depths);\r\n        } else if (!programWrapper) {\r\n          programWrapper = this.programs[i] = program(this, i, fn);\r\n        }\r\n        return programWrapper;\r\n      },\r\n\r\n      data: function(data, depth) {\r\n        while (data && depth--) {\r\n          data = data._parent;\r\n        }\r\n        return data;\r\n      },\r\n      merge: function(param, common) {\r\n        var ret = param || common;\r\n\r\n        if (param && common && (param !== common)) {\r\n          ret = Utils.extend({}, common, param);\r\n        }\r\n\r\n        return ret;\r\n      },\r\n\r\n      noop: env.VM.noop,\r\n      compilerInfo: templateSpec.compiler\r\n    };\r\n\r\n    var ret = function(context, options) {\r\n      options = options || {};\r\n      var data = options.data;\r\n\r\n      ret._setup(options);\r\n      if (!options.partial && templateSpec.useData) {\r\n        data = initData(context, data);\r\n      }\r\n      var depths;\r\n      if (templateSpec.useDepths) {\r\n        depths = options.depths ? [context].concat(options.depths) : [context];\r\n      }\r\n\r\n      return templateSpec.main.call(container, context, container.helpers, container.partials, data, depths);\r\n    };\r\n    ret.isTop = true;\r\n\r\n    ret._setup = function(options) {\r\n      if (!options.partial) {\r\n        container.helpers = container.merge(options.helpers, env.helpers);\r\n\r\n        if (templateSpec.usePartial) {\r\n          container.partials = container.merge(options.partials, env.partials);\r\n        }\r\n      } else {\r\n        container.helpers = options.helpers;\r\n        container.partials = options.partials;\r\n      }\r\n    };\r\n\r\n    ret._child = function(i, data, depths) {\r\n      if (templateSpec.useDepths && !depths) {\r\n        throw new Exception(\'must pass parent depths\');\r\n      }\r\n\r\n      return program(container, i, templateSpec[i], data, depths);\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  __exports__.template = template;function program(container, i, fn, data, depths) {\r\n    var prog = function(context, options) {\r\n      options = options || {};\r\n\r\n      return fn.call(container, context, container.helpers, container.partials, options.data || data, depths && [context].concat(depths));\r\n    };\r\n    prog.program = i;\r\n    prog.depth = depths ? depths.length : 0;\r\n    return prog;\r\n  }\r\n\r\n  __exports__.program = program;function invokePartial(partial, name, context, helpers, partials, data, depths) {\r\n    var options = { partial: true, helpers: helpers, partials: partials, data: data, depths: depths };\r\n\r\n    if(partial === undefined) {\r\n      throw new Exception(\"The partial \" + name + \" could not be found\");\r\n    } else if(partial instanceof Function) {\r\n      return partial(context, options);\r\n    }\r\n  }\r\n\r\n  __exports__.invokePartial = invokePartial;function noop() { return \"\"; }\r\n\r\n  __exports__.noop = noop;function initData(context, data) {\r\n    if (!data || !(\'root\' in data)) {\r\n      data = data ? createFrame(data) : {};\r\n      data.root = context;\r\n    }\r\n    return data;\r\n  }\r\n  return __exports__;\r\n})(__module2__, __module4__, __module1__);\r\n\r\n// handlebars.runtime.js\r\nvar __module0__ = (function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__) {\r\n  \"use strict\";\r\n  var __exports__;\r\n  /*globals Handlebars: true */\r\n  var base = __dependency1__;\r\n\r\n  // Each of these augment the Handlebars object. No need to setup here.\r\n  // (This is done to easily share code between commonjs and browse envs)\r\n  var SafeString = __dependency2__;\r\n  var Exception = __dependency3__;\r\n  var Utils = __dependency4__;\r\n  var runtime = __dependency5__;\r\n\r\n  // For compatibility and usage outside of module systems, make the Handlebars object a namespace\r\n  var create = function() {\r\n    var hb = new base.HandlebarsEnvironment();\r\n\r\n    Utils.extend(hb, base);\r\n    hb.SafeString = SafeString;\r\n    hb.Exception = Exception;\r\n    hb.Utils = Utils;\r\n    hb.escapeExpression = Utils.escapeExpression;\r\n\r\n    hb.VM = runtime;\r\n    hb.template = function(spec) {\r\n      return runtime.template(spec, hb);\r\n    };\r\n\r\n    return hb;\r\n  };\r\n\r\n  var Handlebars = create();\r\n  Handlebars.create = create;\r\n\r\n  Handlebars[\'default\'] = Handlebars;\r\n\r\n  __exports__ = Handlebars;\r\n  return __exports__;\r\n})(__module1__, __module3__, __module4__, __module2__, __module5__);\r\n\r\n  return __module0__;\r\n}));\r\n\n//# sourceURL=/E:/Javascript projects/Heartbeat/App/Heartbeat/www/src/js/libs/handlebars.runtime.js");

eval("define(\'templates/templateCollection\',[\'handlebars.runtime\'], function(Handlebars) {\r\n\r\nthis[\"Heartbeat\"] = this[\"Heartbeat\"] || {};\r\n\r\nHandlebars.registerPartial(\"FriendsFooterView.hbs\", this[\"Heartbeat\"][\"FriendsFooterView.hbs\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  return \"<ul class=\\\"footer-list\\\">\\r\\n    <li class=\\\"social active\\\">Social</li>\\r\\n    <li class=\\\"f-online\\\">Online</li>\\r\\n    <li class=\\\"contacts\\\">Contacts</li>\\r\\n    <li class=\\\"application\\\">Application</li>\\r\\n</ul>\";\n  },\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"FriendsView.hbs\", this[\"Heartbeat\"][\"FriendsView.hbs\"] = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n  return \" online \";\n  },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  var stack1, helper, functionType=\"function\", helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = \"<div class=\\\"fl-photo \";\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.isOnline : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"\\\">\\r\\n    <img src=\\\"\"\n    + escapeExpression(((helper = (helper = helpers.photo || (depth0 != null ? depth0.photo : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"photo\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" alt=\\\"\"\n    + escapeExpression(((helper = (helper = helpers.lastName || (depth0 != null ? depth0.lastName : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"lastName\",\"hash\":{},\"data\":data}) : helper)))\n    + escapeExpression(((helper = (helper = helpers.firstName || (depth0 != null ? depth0.firstName : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"firstName\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\"/>\\r\\n</div>\\r\\n<div class=\\\"fl-info\\\">\\r\\n    <div class=\\\"name\\\">\\r\\n        <span class=\\\"last-name\\\">\"\n    + escapeExpression(((helper = (helper = helpers.lastName || (depth0 != null ? depth0.lastName : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"lastName\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n        <span class=\\\"first-name\\\">\"\n    + escapeExpression(((helper = (helper = helpers.firstName || (depth0 != null ? depth0.firstName : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"firstName\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n    </div>\\r\\n    <div class=\\\"fl-stat\\\">\\r\\n        <span class=\\\"raiting\\\">rating: </span>\\r\\n        <span class=\\\"rating-value\\\">10203</span>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"fl-active-btns\\\">\\r\\n    <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"\\\"/><label class=\\\"icons check\\\"></label>\\r\\n</div>\\r\\n\";\n},\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"GetBeats.hbs\", this[\"Heartbeat\"][\"GetBeats.hbs\"] = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n  return \"        <span class=\\\"btn-scnd-bg get-beats\\\">Start beats</span>\\r\\n\";\n  },\"3\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"        <div class=\\\"beats-cat-title-wrapper\\\">\\r\\n            <span class=\\\"title\\\">Choose your favorite music categories :</span>\\r\\n            <span class=\\\"done btn-scnd-bg\\\">Done</span>\\r\\n        </div>\\r\\n        <ul class=\\\"beats-cat-wrapper\\\">\\r\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 != null ? depth0.genre_id : depth0), {\"name\":\"each\",\"hash\":{},\"fn\":this.program(4, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"        </ul>\\r\\n\";\n},\"4\":function(depth0,helpers,partials,data) {\n  var lambda=this.lambda, escapeExpression=this.escapeExpression;\n  return \"                <li class=\\\"beats-cat\\\">\\r\\n                    <span>\"\n    + escapeExpression(lambda(depth0, depth0))\n    + \"</span>\\r\\n                <span>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"\\\"/><label class=\\\"icons check\\\"></label>\\r\\n                </span>\\r\\n                </li>\\r\\n\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"<div>\\r\\n\";\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showGetBeats : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showBeatsCategorys : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(3, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"</div>\";\n},\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"HeaderView.hbs\", this[\"Heartbeat\"][\"HeaderView.hbs\"] = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n  return \"            <span class=\\\"settings\\\"></span>\\r\\n\";\n  },\"3\":function(depth0,helpers,partials,data) {\n  return \"            <span class=\\\"menu\\\"></span>\\r\\n\";\n  },\"5\":function(depth0,helpers,partials,data) {\n  return \"            <span class=\\\"left-back\\\"></span>\\r\\n\";\n  },\"7\":function(depth0,helpers,partials,data) {\n  var helper, functionType=\"function\", helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n  return \"            <h1 class=\\\"title\\\">\"\n    + escapeExpression(((helper = (helper = helpers.Title || (depth0 != null ? depth0.Title : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"Title\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</h1>\\r\\n\";\n},\"9\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"            <ul class=\\\"list-switch\\\">\\r\\n\";\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showHomeNav : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(10, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"            </ul>\\r\\n\";\n},\"10\":function(depth0,helpers,partials,data) {\n  return \"                    <li class=\\\"player active\\\">Player</li>\\r\\n                    <li class=\\\"music\\\">Music</li>\\r\\n\";\n  },\"12\":function(depth0,helpers,partials,data) {\n  return \"            <span class=\\\"btn-third-clr send\\\">Send</span>\\r\\n\";\n  },\"14\":function(depth0,helpers,partials,data) {\n  return \"            <span class=\\\"right-back\\\"></span>\\r\\n\";\n  },\"16\":function(depth0,helpers,partials,data) {\n  return \"        <span class=\\\"icons message\\\">\\r\\n            <span class=\\\"messages-count\\\">0</span>\\r\\n        </span>\\r\\n\";\n  },\"18\":function(depth0,helpers,partials,data) {\n  return \"            <span class=\\\"search\\\"></span>\\r\\n            <span class=\\\"cancel\\\">Cancel</span>\\r\\n\";\n  },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"<div>\\r\\n    <div class=\\\"left-el icons\\\">\\r\\n\";\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showSettings : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showMenu : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(3, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showLeftBack : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(5, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"    </div>\\r\\n    <div class=\\\"middle-el\\\">\\r\\n\";\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showTitle : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(7, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showlist : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(9, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showSend : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(12, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"    </div>\\r\\n    <div class=\\\"right-el icons\\\">\\r\\n\";\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showRightBack : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(14, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showMessages : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(16, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.showSearch : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(18, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"    </div>\\r\\n</div>\";\n},\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"HomePageLayout.hbs\", this[\"Heartbeat\"][\"HomePageLayout.hbs\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  return \"<div id=\\\"layout-content-block\\\">\\r\\n\\r\\n</div>\\r\\n<div id=\\\"layout-notification\\\">\\r\\n\\r\\n</div>\\r\\n<div id=\\\"layout-info\\\">\\r\\n\\r\\n</div>\\r\\n<div id=\\\"layout-player-block\\\">\\r\\n\\r\\n</div>\\r\\n<div id=\\\"layout-beats-block\\\">\\r\\n\\r\\n</div>\";\n  },\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"MainLayout.hbs\", this[\"Heartbeat\"][\"MainLayout.hbs\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  return \"<div id=\\\"layout-settings\\\">\\r\\n\\r\\n</div>\\r\\n<div id=\\\"layout-home\\\">\\r\\n\\r\\n</div>\\r\\n<div id=\\\"layout-playlists\\\">\\r\\n\\r\\n</div>\";\n  },\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"MobileLogin.hbs\", this[\"Heartbeat\"][\"MobileLogin.hbs\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  return \"    <div id=\\\"logo\\\">\\r\\n        <p>heartbeats to the rhythm</p>\\r\\n    </div>\\r\\n    <div id=\\\"login\\\">\\r\\n        <form id=\\\"loginForm\\\">\\r\\n            <!--<div class=\\\"form-group\\\">-->\\r\\n                <!--<label for=\\\"userName\\\">Username</label>-->\\r\\n                <!--<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userName\\\" placeholder=\\\"Enter username\\\">-->\\r\\n            <!--</div>-->\\r\\n            <!--<div class=\\\"form-group\\\">-->\\r\\n                <!--<label for=\\\"password\\\">Password</label>-->\\r\\n                <!--<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password1\\\" placeholder=\\\"Password\\\">-->\\r\\n            <!--</div>-->\\r\\n            <!--<button type=\\\"submit\\\" class=\\\"btn btn btn-red-bg\\\">Submit</button>-->\\r\\n            <div class=\\\"form-group social\\\">\\r\\n                <p>Welcome to the Heartbeat application.</br>\\r\\n                    Login to the application using social accounts</p>\\r\\n                <a class=\\\"btn btn-auth\\\" id=\\\"vkLogin\\\" href=\\\"#\\\"><span>Login with VK account</span></a>\\r\\n                <a class=\\\"btn btn-auth\\\" id=\\\"fbLogin\\\" href=\\\"#\\\"><span>Login with Facebook account</span></a>\\r\\n                <a class=\\\"btn btn-auth\\\" id=\\\"twLogin\\\" href=\\\"#\\\"><span>Login with Twitter account</span></a>\\r\\n            </div>\\r\\n            <!--<div class=\\\"form-group\\\">-->\\r\\n                <!--<p>Need a Heartbeat account?</p>-->\\r\\n                <!--<a class=\\\"link\\\" href=\\\"#\\\">Sign up here.</a>-->\\r\\n            <!--</div>-->\\r\\n        </form>\\r\\n    </div>\";\n  },\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"MobileRegistration.hbs\", this[\"Heartbeat\"][\"MobileRegistration.hbs\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  return \"<p>This is registration template</p>\";\n  },\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"Notifications.hbs\", this[\"Heartbeat\"][\"Notifications.hbs\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  return \"<span class=\\\"message-text\\\"></span>\";\n  },\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"PlayerView.hbs\", this[\"Heartbeat\"][\"PlayerView.hbs\"] = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n  return \"pause\";\n  },\"3\":function(depth0,helpers,partials,data) {\n  return \"play\";\n  },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  var stack1, helper, functionType=\"function\", helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = \"<div class=\\\"volume-bar\\\">\\r\\n    <span class=\\\"volume-low icons\\\"></span>\\r\\n        <span class=\\\"volume-wrapper\\\">\\r\\n            <span class=\\\"volume-trigger\\\" style=\\\"width:\"\n    + escapeExpression(((helper = (helper = helpers.volume || (depth0 != null ? depth0.volume : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"volume\",\"hash\":{},\"data\":data}) : helper)))\n    + \"%;\\\"></span>\\r\\n            <span class=\\\"volume-trigger-button\\\"></span>\\r\\n        </span>\\r\\n    <span class=\\\"volume-high icons\\\"></span>\\r\\n</div>\\r\\n<div class=\\\"nav-player-wrapper\\\">\\r\\n    <div class=\\\"active-buttons-left\\\">\\r\\n        <span class=\\\"volume icons\\\"></span>\\r\\n        <span class=\\\"play-type-wrapper\\\">\\r\\n               <span class=\\\"repeat icons\\\"></span>\\r\\n        </span>\\r\\n    </div>\\r\\n    <div class=\\\"nav-buttons icons\\\">\\r\\n        <span class=\\\"prev\\\"></span>\\r\\n        <span class=\\\"\";\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.isPlayed : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(1, data),\"inverse\":this.program(3, data),\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"\\\"></span>\\r\\n        <span class=\\\"next\\\"></span>\\r\\n    </div>\\r\\n    <div class=\\\"active-buttons-right\\\">\\r\\n        <!--<span class=\\\"equalizer icons\\\"></span>-->\\r\\n        <span class=\\\"profile icons\\\"></span>\\r\\n        <span class=\\\"shuffle icons\\\"></span>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"song-name-bar\\\">\\r\\n    <span class=\\\"artist-name\\\">\"\n    + escapeExpression(((helper = (helper = helpers.author || (depth0 != null ? depth0.author : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"author\",\"hash\":{},\"data\":data}) : helper)))\n    + \" - \"\n    + escapeExpression(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"title\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n</div>\\r\\n<div class=\\\"progress-bar\\\">\\r\\n    <span class=\\\"start-time\\\">0:00</span>\\r\\n    <span class=\\\"progress-bar-wrapper\\\">\\r\\n        <span class=\\\"progress-trigger\\\"></span>\\r\\n    </span>\\r\\n    <span class=\\\"end-time\\\">\"\n    + escapeExpression(((helper = (helper = helpers.minutes || (depth0 != null ? depth0.minutes : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"minutes\",\"hash\":{},\"data\":data}) : helper)))\n    + \":\"\n    + escapeExpression(((helper = (helper = helpers.seconds || (depth0 != null ? depth0.seconds : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"seconds\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n</div>\\r\\n<div class=\\\"action-button\\\">\\r\\n    <span class=\\\"get-beats\\\"></span>\\r\\n</div>\";\n},\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"PlaylistFooterView.hbs\", this[\"Heartbeat\"][\"PlaylistFooterView.hbs\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  return \"<ul class=\\\"footer-list\\\">\\r\\n    <li class=\\\"online active\\\"> Online</li>\\r\\n    <li class=\\\"downloads\\\">Downloads</li>\\r\\n    <li class=\\\"likes\\\">Likes</li>\\r\\n    <li class=\\\"recommends\\\">Recommends</li>\\r\\n</ul>\";\n  },\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"PlaylistLayout.hbs\", this[\"Heartbeat\"][\"PlaylistLayout.hbs\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  return \"<div id=\\\"layout-search\\\">\\r\\n\\r\\n</div>\\r\\n<div id=\\\"layout-search-result\\\">\\r\\n\\r\\n</div>\\r\\n<div id=\\\"layout-list\\\">\\r\\n\\r\\n</div>\\r\\n<div id=\\\"layout-friends\\\">\\r\\n\\r\\n</div>\";\n  },\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"PlaylistView.hbs\", this[\"Heartbeat\"][\"PlaylistView.hbs\"] = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n  return \"pl-pause\";\n  },\"3\":function(depth0,helpers,partials,data) {\n  return \"pl-play\";\n  },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  var stack1, helper, functionType=\"function\", helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = \"<div class=\\\"\";\n  stack1 = helpers[\'if\'].call(depth0, (depth0 != null ? depth0.isPlayed : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(1, data),\"inverse\":this.program(3, data),\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \" icons\\\"></div>\\r\\n<div class=\\\"song-info\\\">\\r\\n    <span class=\\\"song-name\\\">\"\n    + escapeExpression(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"title\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n    <span class=\\\"author\\\">\"\n    + escapeExpression(((helper = (helper = helpers.artist || (depth0 != null ? depth0.artist : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"artist\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n    <span class=\\\"time-bar\\\">\"\n    + escapeExpression(((helper = (helper = helpers.minutes || (depth0 != null ? depth0.minutes : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"minutes\",\"hash\":{},\"data\":data}) : helper)))\n    + \":\"\n    + escapeExpression(((helper = (helper = helpers.seconds || (depth0 != null ? depth0.seconds : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"seconds\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n</div>\\r\\n<div class=\\\"active-btns icons\\\">\\r\\n    <div class=\\\"active-btns-wrapper\\\">\\r\\n        <div>\\r\\n            <span class=\\\"share\\\"></span>\\r\\n            <span class=\\\"like\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"active-btns-wrapper\\\">\\r\\n        <div>\\r\\n            <span class=\\\"remove\\\"></span>\\r\\n            <span class=\\\"download\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";\n},\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"ProfileView.hbs\", this[\"Heartbeat\"][\"ProfileView.hbs\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  var helper, functionType=\"function\", helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n  return \"<div class=\\\"photo\\\">\\r\\n    <img src=\\\"\"\n    + escapeExpression(((helper = (helper = helpers.src || (depth0 != null ? depth0.src : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"src\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" alt=\\\"\"\n    + escapeExpression(((helper = (helper = helpers.lastName || (depth0 != null ? depth0.lastName : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"lastName\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\"/>\\r\\n</div>\\r\\n<div class=\\\"info-wrapper\\\">\\r\\n    <div class=\\\"personal-info\\\">\\r\\n        <span class=\\\"second-name\\\">\"\n    + escapeExpression(((helper = (helper = helpers.lastName || (depth0 != null ? depth0.lastName : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"lastName\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n        <span class=\\\"first-name\\\">\"\n    + escapeExpression(((helper = (helper = helpers.firstName || (depth0 != null ? depth0.firstName : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"firstName\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n    </div>\\r\\n    <div class=\\\"stats\\\">\\r\\n        <div class=\\\"title-row\\\">\\r\\n            <span class=\\\"songs-title\\\">Songs</span>\\r\\n            <span class=\\\"listeners-title\\\">Listeners</span>\\r\\n            <span class=\\\"rating-title\\\">Rating</span>\\r\\n        </div>\\r\\n        <div class=\\\"stat-row\\\">\\r\\n            <span class=\\\"songs-total\\\">\"\n    + escapeExpression(((helper = (helper = helpers.songsNumber || (depth0 != null ? depth0.songsNumber : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"songsNumber\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n            <span class=\\\"listeners-res\\\">\"\n    + escapeExpression(((helper = (helper = helpers.listenersNumber || (depth0 != null ? depth0.listenersNumber : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"listenersNumber\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n            <span class=\\\"rating-res\\\">\"\n    + escapeExpression(((helper = (helper = helpers.rating || (depth0 != null ? depth0.rating : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"rating\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"beats-main-title\\\">\\r\\n        Beats for today\\r\\n    </div>\\r\\n    <span class=\\\"beats-now-wrapper\\\"><span class=\\\"beats-now\\\">\"\n    + escapeExpression(((helper = (helper = helpers.beatsNow || (depth0 != null ? depth0.beatsNow : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"beatsNow\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span> / \"\n    + escapeExpression(((helper = (helper = helpers.maxBeats || (depth0 != null ? depth0.maxBeats : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"maxBeats\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\r\\n</div>\";\n},\"useData\":true}));\r\n\r\nHandlebars.registerPartial(\"SearchView.hbs\", this[\"Heartbeat\"][\"SearchView.hbs\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  return \"<input type=\\\"text\\\" name=\\\"search\\\" id=\\\"searchInput\\\" placeholder=\\\"Search...\\\"/>\\r\\n\";\n  },\"useData\":true}));\r\n\r\nreturn this[\"Heartbeat\"];\r\n\r\n});\n//# sourceURL=/templates/templateCollection.js");

eval("define(\'layouts/MainLayout\',[\r\n    \'jquery\', \'underscore\', \'backbone\', \'marionette\',\r\n    \'App\',\r\n    \'templates/templateCollection\'\r\n], function ($, _, Backbone, Marionette, App,\r\n             templateFn) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.LayoutView.extend({\r\n        className: \"layout-wrapper\",\r\n        tagName:\"div\",\r\n        template: templateFn[\'MainLayout.hbs\'],\r\n        regions: {\r\n            settings: \'#layout-settings\',\r\n            home: \'#layout-home\',\r\n            playlists: \'#layout-playlists\'\r\n        },\r\n        events: {\r\n          \"touchmove .layout-wrapper\":\"preventDefault\"\r\n        },\r\n        preventDefault: function(e){\r\n            e.preventDefault();\r\n        }\r\n    });\r\n});\n//# sourceURL=/layouts/MainLayout.js");

eval("/**\r\n * Created by Ievgen on 18.01.2015.\r\n */\r\ndefine(\'layouts/HomePageLayout\',[\r\n    \'jquery\', \'underscore\', \'backbone\', \'marionette\',\r\n    \'App\',\r\n    \'templates/templateCollection\'\r\n], function ($, _, Backbone, Marionette, App,\r\n             templateFn) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.LayoutView.extend({\r\n        className: \"layout-wrapper\",\r\n        tagName:\"div\",\r\n        template: templateFn[\'HomePageLayout.hbs\'],\r\n        regions: {\r\n            playerBlock: \'#layout-player-block\',\r\n            notification: \'#layout-notification\',\r\n            info: \'#layout-info\',\r\n            beatsBlock: \'#layout-beats-block\',\r\n            contentBlock: \'#layout-content-block\'\r\n        }\r\n    });\r\n});\n//# sourceURL=/layouts/HomePageLayout.js");

eval("define(\'layouts/PlaylistLayout\',[\'App\',\r\n    \'jquery\', \'underscore\', \'backbone\', \'marionette\',\r\n    \'templates/templateCollection\'\r\n], function (App, $, _, Backbone, Marionette,\r\n             templateFn) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.LayoutView.extend({\r\n        template: templateFn[\'PlaylistLayout.hbs\'],\r\n        regions: {\r\n            search: \'#layout-search\',\r\n            searchResult: \'#layout-search-result\',\r\n            list: \'#layout-list\',\r\n            friends: \'#layout-friends\'\r\n        }\r\n    });\r\n});\n//# sourceURL=/layouts/PlaylistLayout.js");

eval("define(\'App\',[\'jquery\', \'underscore\', \'backbone\', \'../libs/utils\',\r\n        \'layouts/MainLayout\', \'layouts/HomePageLayout\', \'layouts/PlaylistLayout\'\r\n    ],\r\n    function ($, _, Backbone, utils, MainLayout, HomePageLayout, PlaylistLayout) {\r\n        \"use strict\";\r\n        var App = new Backbone.Marionette.Application(),\r\n            layout = new MainLayout(),\r\n            homePageLayout = new HomePageLayout(),\r\n            playlistLayout = new PlaylistLayout();\r\n\r\n        App.addRegions({\r\n            mainRegion:\"#main-layout\",\r\n            header: \"header\",\r\n            footer: \"footer\"\r\n        });\r\n\r\n        App.addInitializer(function () {\r\n            Backbone.history.start({\r\n                pushState: false,\r\n                root: \"\"\r\n            });\r\n        });\r\n\r\n        window.loader = $(document).find(\"#loader\");\r\n        //App.footer.show(footer);\r\n        //window.__ = utils.translate;\r\n\r\n        App.layout = layout;\r\n        App.homePageLayout = homePageLayout;\r\n        App.playlistLayout = playlistLayout;\r\n\r\n        App.mainRegion.show(App.layout);\r\n        App.layout.home.show(App.homePageLayout);\r\n        App.layout.playlists.show(App.playlistLayout);\r\n        return App;\r\n    });\n//# sourceURL=/App.js");

eval("define(\'routers/AppRouter\',[\'backbone\', \'marionette\'],\r\n    function (Backbone, Marionette) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.AppRouter.extend({\r\n\r\n            appRoutes: {\r\n                \"\": \"loginScreen\",\r\n                \"access_token=:query\": \"validationScreen\",\r\n                \"home\": \"homeScreen\",\r\n                \"beats\": \"beatsScreen\",\r\n                \"rating\": \"showRating\",\r\n                \"playlist\": \"showPlaylist\",\r\n                \"friends\": \"showFriends\",\r\n                \"downloads\": \"downloadsPlayList\",\r\n                \"likes\": \"likesPlayList\",\r\n                \"recommends\": \"recommendsPlayList\",\r\n                \"settings\": \"showSettings\"\r\n            }\r\n        });\r\n});\n//# sourceURL=/routers/AppRouter.js");

eval("define(\'models/VkAuthModel\',[\"jquery\", \"underscore\", \"backbone\"],\r\n    function ($, _, Backbone) {\r\n        \"use strict\";\r\n        // Creates a new Backbone Model class object\r\n        var Model = Backbone.Model.extend({\r\n            defaults: {\r\n                \"userId\": \"\",\r\n                \"accessToken\": \"\",\r\n                \"clientId\": \"4790565\",\r\n                \"securityKey\": \"sGkcxJvxfooJf7dHWWd6\",\r\n                \"url\": \"http://oauth.vk.com/authorize?\",\r\n                \"redirectUri\": \"http://192.168.1.100:8010\",\r\n                \"redirectUriWork\": \"http://10.129.171.67:8010\",\r\n                \"scope\": \"friends,audio\",\r\n                \"display\": \"mobile\",\r\n                \"versionApi\": \"5.27\",\r\n                \"response\": \"token\"\r\n            },\r\n            setData: function () {\r\n                var globals = JSON.parse(window.localStorage.getItem(\"userGlobals\")) || {};\r\n                if (this.userId === undefined && this.accessToken === undefined) {\r\n                    this.defaults.userId = globals.user_id;\r\n                    this.defaults.accessToken = globals.access_token;\r\n                }\r\n            },\r\n            url: function (loginMethod) {\r\n                return this.defaults.url +\r\n                    \"client_id=\" + this.defaults.clientId +\r\n                    \"&scope=\" + this.defaults.scope +\r\n                    \"&redirect_uri=\" + this.defaults.redirectUri + \"?loginMethod=\" + loginMethod +\r\n                    \"&display=\" + this.defaults.display +\r\n                    \"&v=\" + this.defaults.versionApi +\r\n                    \"&response_type=\" + this.defaults.response;\r\n            },\r\n            parse: function (data) {\r\n                return data.response;\r\n            }\r\n        });\r\n\r\n        return new Model();\r\n\r\n    }\r\n);\n//# sourceURL=/models/VkAuthModel.js");

eval("define(\'models/FacebookAuthModel\',[\"jquery\", \"underscore\", \"backbone\"],\r\n    function ($, _, Backbone) {\r\n        \"use strict\";\r\n        // Creates a new Backbone Model class object\r\n        var FacebookModel = Backbone.Model.extend({\r\n            defaults: {\r\n\r\n            },\r\n            url: function () {\r\n            }\r\n        });\r\n        // Returns the Model class\r\n        return FacebookModel;\r\n    });\n//# sourceURL=/models/FacebookAuthModel.js");

eval("/**\r\n * Created by Ievgen on 15.01.2015.\r\n */\r\ndefine(\'views/MobileLoginView\',[\'jquery\', \'underscore\', \'backbone\', \'marionette\', \'App\',\r\n        \'models/VkAuthModel\',\'models/FacebookAuthModel\',\r\n        \'templates/templateCollection\'],\r\n    function ($, _, Backbone, Marionette, App,\r\n              VkAuthModel,FacebookAuthModel,\r\n              templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.ItemView.extend({\r\n            tagName: \'div\',\r\n            id: \'mobileLogin\',\r\n\r\n            template: templateFn[\'MobileLogin.hbs\'],\r\n\r\n            ui: {\r\n                \"vk\": \"#vkLogin\",\r\n                \"fb\": \"#fbLogin\"\r\n            },\r\n\r\n            events: {\r\n                \'click @ui.vk\': \'showLogin\',\r\n                \'click @ui.fb\': \'showLogin\',\r\n                \'click @ui.tw\': \'showLogin\'\r\n            },\r\n\r\n            showLogin: function (e) {\r\n                var authUrl, loginMethod = e.currentTarget.id;\r\n                e.preventDefault();\r\n                switch (loginMethod){\r\n                    case \"vkLogin\":\r\n                        authUrl = VkAuthModel.url(loginMethod);\r\n                        break;\r\n                    case \"fbLogin\":\r\n                        authUrl = FacebookAuthModel.url(loginMethod);\r\n                        break;\r\n                    case \"twLogin\":\r\n                        break;\r\n                }\r\n                window.location.href = authUrl;\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/MobileLoginView.js");

eval("/**\r\n * Created by snopp_000 on 22.11.2014.\r\n */\r\ndefine(\'views/HomeHeaderView\',[\'jquery\', \'underscore\', \'backbone\', \'marionette\', \'App\', \'templates/templateCollection\'],\r\n    function ($, _, Backbone, Marionette, App, templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.ItemView.extend({\r\n            className: \"header-wrapper\",\r\n            tagName: \"div\",\r\n            template: templateFn[\'HeaderView.hbs\']({\r\n                showMenu: true,\r\n                showlist: true,\r\n                showSearch: true,\r\n                showMessages: true,\r\n                showHomeNav: true\r\n            }),\r\n\r\n            ui: {\r\n                \"menu\": \"span.menu\",\r\n                \"playlist\": \"span.playlist\",\r\n                \"player\": \"li.player\",\r\n                \"message\": \"span.message\",\r\n                \"search\": \"span.search\",\r\n                \"cancel\": \"span.cancel\",\r\n                \"music\": \"li.music\"\r\n            },\r\n            initialize: function(){\r\n            },\r\n            events: {\r\n                \"touchend @ui.menu\": \"showSettings\",\r\n                \"touchend @ui.search\": \"getSearch\",\r\n                \"touchend @ui.cancel\": \"getSearch\",\r\n                \"touchend @ui.player\": \"showPlayer\",\r\n                \"touchend @ui.music\": \"showPlaylist\"\r\n            },\r\n            showPlayer: function () {\r\n                this.ui.player.addClass(\"active\").siblings().removeClass(\"active\");\r\n                this.ui.search.hide();\r\n                this.ui.message.show();\r\n                Backbone.history.navigate(\"home\", {trigger: true, replace: false});\r\n                $(App.layout.playlists.el).animate({\"margin-left\":100+\"%\"},250, function(){\r\n                    $(this).hide();\r\n                    $(App.footer.el).show().animate({\"margin-bottom\": -45 + \"px\"}, 150, function(){\r\n                    });\r\n                });\r\n            },\r\n            showSettings: function () {\r\n                Backbone.history.navigate(\"settings\", {trigger: true, replace: false});\r\n            },\r\n            showPlaylist: function () {\r\n                this.ui.music.addClass(\"active\").siblings().removeClass(\"active\");\r\n                if(Backbone.history.fragment !== \"playlist\") {\r\n                    this.ui.message.hide();\r\n                    this.ui.search.show();\r\n                    Backbone.history.navigate(\"playlist\", {trigger: true, replace: false});\r\n                    $(App.layout.playlists.el).css({\"margin-left\": \"100%\"});\r\n                    $(App.layout.playlists.el).show().animate({\"margin-left\": 0 + \"%\"}, 300, function () {\r\n                        $(App.footer.el).show().animate({\"margin-bottom\": 0 + \"px\"}, 300, function () {\r\n                        });\r\n                    });\r\n                }\r\n            },\r\n            getSearch: function (e) {\r\n                var margin;\r\n                if(e.currentTarget.attributes.class.value === \"search\"){\r\n                    margin = 0;\r\n                    this.ui.search.hide();\r\n                    this.ui.cancel.show();\r\n                } else{\r\n                    margin = -45;\r\n                    this.ui.search.show();\r\n                    this.ui.cancel.hide();\r\n                }\r\n                App.playlistLayout.search.$el.show().find(\".search-wrapper\").show().animate({\r\n                    \"margin-top\":margin+\"px\"\r\n                },300, function(){\r\n                    if(margin === 0){\r\n                        App.playlistLayout.search.$el.find(\"#searchInput\").focus();\r\n                    } else {\r\n                        App.playlistLayout.search.$el.find(\"#searchInput\").val(\'\');\r\n                        App.playlistLayout.searchResult.$el.empty();\r\n                        App.playlistLayout.search.$el.hide();\r\n                        App.playlistLayout.list.$el.show();\r\n                    }\r\n                });\r\n            },\r\n            onRender: function(){\r\n                this.ui.message.show();\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/HomeHeaderView.js");

eval("/**\r\n * Created by snopp_000 on 22.11.2014.\r\n */\r\ndefine(\'views/SendMusicHeaderVIew\',[\'jquery\', \'underscore\', \'backbone\', \'marionette\', \'App\',\'views/HomeHeaderView\', \'templates/templateCollection\'],\r\n    function ($, _, Backbone, Marionette, App, HomeHeaderView, templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.ItemView.extend({\r\n            className: \"header-wrapper\",\r\n            tagName: \"div\",\r\n            template: templateFn[\'HeaderView.hbs\']({\r\n                showLeftBack: true,\r\n                showSearch: true,\r\n                showSend: true\r\n            }),\r\n            ui: {\r\n                \"back\": \"span.left-back\",\r\n                \"search\": \"span.search\",\r\n                \"cancel\": \"span.cancel\",\r\n                \"send\":\"span.send\"\r\n            },\r\n            events: {\r\n                \"touchend @ui.back\": \"goBack\",\r\n                \"touchend @ui.search\": \"getSearch\",\r\n                \"touchend @ui.cancel\": \"getSearch\"\r\n            },\r\n            goBack: function () {\r\n                App.header.show(new HomeHeaderView());\r\n                $(\".message\").hide();\r\n                $(\".search\").show();\r\n                $(App.footer.el).animate({\"margin-bottom\":-45+\"px\"},150);\r\n                $(App.playlistLayout.list.el).show().animate({\"margin-left\": 0 + \"px\"}, 300, function () {\r\n                    $(App.playlistLayout.friends.el).hide();\r\n                    $(App.footer.el).show().animate({\"margin-bottom\":0+\"px\"},150);\r\n                    $(\"li.music\").addClass(\"active\").siblings().removeClass(\"active\");\r\n                    window.history.back();\r\n                });\r\n            },\r\n            getSearch: function (e) {\r\n              var margin;\r\n              (e.currentTarget.attributes.class.value === \"search\")? margin = 0 : margin = -45;\r\n              $(e.currentTarget).hide().siblings().show();\r\n              App.playlistLayout.search.$el.show().find(\".search-wrapper\").show().animate({\r\n                  \"margin-top\":margin+\"px\"\r\n              },300, function(){\r\n                  if(margin === 0){\r\n                      App.playlistLayout.search.$el.find(\"#searchInput\").focus();\r\n                  } else {\r\n                      App.playlistLayout.search.$el.find(\"#searchInput\").val(\'\');\r\n                      App.playlistLayout.searchResult.$el.empty();\r\n                      App.playlistLayout.search.$el.hide();\r\n                      App.playlistLayout.list.$el.show();\r\n                  }\r\n              });\r\n            },\r\n            onRender: function(){\r\n                this.ui.search.show();\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/SendMusicHeaderVIew.js");

eval("/**\r\n * Created by snopp_000 on 22.11.2014.\r\n */\r\ndefine(\'views/PlaylistFooterView\',[\'jquery\', \'underscore\', \'backbone\',\'marionette\', \'templates/templateCollection\'],\r\n    function ($, _, Backbone, Marionette, templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.LayoutView.extend({\r\n            tagName: \"div\",\r\n            className: \"footer-wrapper\",\r\n            template: templateFn[\'PlaylistFooterView.hbs\'],\r\n            ui:{\r\n                \"listItem\":\"li\"\r\n            },\r\n            events:{\r\n                \"click @ui.listItem\":\"checkPlayList\"\r\n            },\r\n            checkPlayList: function(e){\r\n               $(e.currentTarget).addClass(\"active\").siblings().removeClass(\"active\");\r\n                switch(e.currentTarget.classList[0]){\r\n                    case \"downloads\":\r\n                        Backbone.history.navigate(\"downloads\", {trigger: true, replace:false});\r\n                        break;\r\n                    case \"likes\":\r\n                        Backbone.history.navigate(\"likes\", {trigger: true, replace:false});\r\n                        break;\r\n                    case \"recommends\":\r\n                        Backbone.history.navigate(\"recommends\", {trigger: true, replace:false});\r\n                        break;\r\n                    case \"online\":\r\n                        Backbone.history.navigate(\"playlist\", {trigger: true, replace:false});\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/PlaylistFooterView.js");

eval("/**\r\n * Created by snopp_000 on 22.11.2014.\r\n */\r\ndefine(\'views/FriendsFooterView\',[\'jquery\', \'underscore\', \'backbone\',\'marionette\', \'templates/templateCollection\'],\r\n    function ($, _, Backbone, Marionette, templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.LayoutView.extend({\r\n            tagName: \"div\",\r\n            className: \"footer-wrapper\",\r\n            template: templateFn[\'FriendsFooterView.hbs\'],\r\n            ui:{\r\n\r\n            },\r\n            events:{\r\n\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/FriendsFooterView.js");

eval("/**\n * Created by Евгений on 07.12.2014.\n */\ndefine(\'controllers/MobileLoginController\',[\n    \'jquery\',\n    \'underscore\',\n    \'App\',\n    \'backbone\',\n    \'marionette\',\n    \'models/VkAuthModel\',\n    \'models/FacebookAuthModel\'\n], function ($, _, App, Backbone, Marionette,\n             VkAuthModel, FacebookAuthModel) {\n    \"use strict\";\n    return Backbone.Marionette.Controller.extend({\n        initialize: function () {\n            this.facebookAuthModel = new FacebookAuthModel();\n            //window.loader.show();\n        },\n\n        detectRoute: function () {\n            var method = document.location.search.match(/loginMethod=(.+)/)[1];\n            switch (method) {\n                case \"vkLogin\":\n                    this.vkRoute();\n                    break;\n            }\n        },\n\n        vkRoute: function () {\n            if (Backbone.history.fragment.indexOf(\"error\") !== -1) {\n                Backbone.history.navigate(\"\", {trigger: true, replace: false});\n            } else {\n                this.routeParse(Backbone.history.fragment);\n                Backbone.history.navigate(\"home\", {trigger: true, replace: false});\n            }\n        },\n\n        routeParse: function (url) {\n            this.queryString = _\n                .chain(url.split(\"&\"))\n                .map(function (arg) {\n                    return [arg.split(\"=\")[0], decodeURIComponent(arg.split(\"=\")[1])];\n                })\n                .object()\n                .value();\n            window.localStorage.setItem(\"userGlobals\", JSON.stringify(this.queryString));\n            VkAuthModel.setData();\n        }\n\n    });\n});\n//# sourceURL=/controllers/MobileLoginController.js");

eval("define(\'models/VkAudioModel\',[\"jquery\", \"underscore\", \"backbone\"],\r\n    function ($, _, Backbone) {\r\n        \"use strict\";\r\n        var AudioModel = Backbone.Model.extend({\r\n            defaults: {\r\n                artist: String,\r\n                duration: Number,\r\n                genre: Number,\r\n                lyrics_id: String,\r\n                owner_id:Number,\r\n                title: String,\r\n                url:String,\r\n                isPlayed: Boolean\r\n            }\r\n        });\r\n        return AudioModel;\r\n    }\r\n);\n//# sourceURL=/models/VkAudioModel.js");

eval("/**\r\n * Created by Ievgen on 22.01.2015.\r\n */\r\ndefine(\'helpers/VkRequestHelper\',[\"jquery\", \"underscore\"],\r\n    function ($, _) {\r\n       \"use strict\";\r\n        var vkRequestHelper = function(){\r\n            return {\r\n                defaults: {\r\n                    \"defUrl\": \"http://192.168.1.100:8011/method/\",\r\n                    \"getFriends\": \"friends.get\",\r\n                    \"getFriendsOnline\": \"friends.getOnline\",\r\n                    \"getAudio\": \"audio.get\",\r\n                    \"audioSearch\": \"audio.search\",\r\n                    \"saveAudio\": \"audio.save\",\r\n                    \"deleteAudio\": \"audio.delete\",\r\n                    \"editAudio\": \"audio.edit\",\r\n                    \"countAudio\": \"audio.getCount\",\r\n                    \"userInfo\": \"users.get\"\r\n                },\r\n                getAudioUrl: function (ownerId, songsNum, accessToken) {\r\n                    return this.defaults.defUrl + this.defaults.getAudio + \"?\" +\r\n                        \"owner_id=\" + ownerId + \"&count=\" + songsNum +\r\n                        \"&access_token=\" + accessToken;\r\n                },\r\n                getFriendsUrl: function (userId,friendsNumToReturn,accessToken) {\r\n                    return this.defaults.defUrl + this.defaults.getFriends + \"?\" +\r\n                        \"user_id=\" + userId +\r\n                        \"&order=hints\" + \"&count=\" + friendsNumToReturn +\r\n                        \"&fields=\" + \"photo_50,city,country,online\" +\r\n                        \"&access_token=\" + accessToken;\r\n                },\r\n                getUserInfoUrl: function (userId,accessToken) {\r\n                    return this.defaults.defUrl +\r\n                        this.defaults.userInfo + \"?\" + \"user_id=\" +\r\n                        userId + \"&fields=photo_100,online,counters\"+\"&access_token=\"+accessToken;\r\n                },\r\n                searchAudios: function(keywords,accessToken){\r\n                    return this.defaults.defUrl + this.defaults.audioSearch + \"?\" + \"q=\" + keywords +\r\n                            \"&auto_complete=\"+ 1 + \"&sort=\"+ 2 + \"&search_own=\"+ 0 +\"&count=\"+ 50 +\r\n                            \"&access_token=\" + accessToken;\r\n                }\r\n            };\r\n        };\r\n        return vkRequestHelper();\r\n    });\n//# sourceURL=/helpers/VkRequestHelper.js");

eval("define(\'collections/VkAudioCollection\',[\"jquery\", \"underscore\", \"backbone\", \"models/VkAudioModel\", \"models/VkAuthModel\", \"helpers/VkRequestHelper\"],\r\n    function ($, _, Backbone, VkAudioModel, VkAuthModel, VkRequestHelper) {\r\n        \"use strict\";\r\n        var AudioCollection = Backbone.Collection.extend({\r\n            model: VkAudioModel,\r\n            getUrl: function (songsNumber) {\r\n                VkAuthModel.setData();\r\n                return VkRequestHelper.getAudioUrl(\r\n                    VkAuthModel.defaults.userId,\r\n                    songsNumber,\r\n                    VkAuthModel.defaults.accessToken);\r\n            },\r\n            setData: function () {\r\n                if (window.localStorage.getItem(\"songs\") !== null && window.localStorage.getItem(\"songs\") !== \"\") {\r\n                    var songs = JSON.parse(window.localStorage.getItem(\"songs\"));\r\n                    this.reset(songs);\r\n                }\r\n            },\r\n            url: function () {\r\n                return this.getUrl(this.songsNumber);\r\n            }\r\n        });\r\n        return AudioCollection;\r\n\r\n    }\r\n);\n//# sourceURL=/collections/VkAudioCollection.js");

eval("/**\r\n * Created by Ievgen on 18.01.2015.\r\n */\r\ndefine(\'views/PlayerView\',[\'jquery\', \'underscore\', \'backbone\', \'marionette\', \'templates/templateCollection\'],\r\n    function ($, _, Backbone, Marionette, templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.ItemView.extend({\r\n            className: \"player-wrapper\",\r\n            tagName: \"div\",\r\n            template: templateFn[\'PlayerView.hbs\'],\r\n            initialize: function () {\r\n                this.controller = this.options.controller;\r\n                this.global = Backbone.Wreqr.radio.channel(\'global\');\r\n                this.$content = $(\"#layout-content-block\");\r\n            },\r\n            ui: {\r\n                \"play\": \".play\",\r\n                \"pause\": \".pause\",\r\n                \"next\": \".next\",\r\n                \"prev\": \".prev\",\r\n                \"profile\": \".profile\",\r\n                \"volume\": \".volume\",\r\n                \"volBar\": \".volume-bar\",\r\n                \'volTrigger\': \".volume-trigger-button\",\r\n                \"repeat\":\".repeat\",\r\n                \"shuffle\":\".shuffle\"\r\n            },\r\n            events: {\r\n                \"touchend @ui.play\": \"startMusic\",\r\n                \"touchend @ui.pause\": \"pauseMusic\",\r\n                \"touchend @ui.next\": \"nextSong\",\r\n                \"touchend @ui.prev\": \"prevSong\",\r\n                \"touchend @ui.repeat\": \"repeatSong\",\r\n                \"touchend @ui.shuffle\": \"shuffleSongs\",\r\n                \"touchend @ui.volume\": \"showVolume\",\r\n                \"touchend @ui.profile\": \"showProfile\",\r\n                \"touchstart @ui.volTrigger\": \"startVolumeSwipe\",\r\n                \"touchmove @ui.volBar\": \"swipeVolume\"\r\n            },\r\n            startMusic: function (e) {\r\n                e.preventDefault();\r\n                $(e.currentTarget).removeClass(\"play\").addClass(\"pause\");\r\n                this.controller.playSong();\r\n            },\r\n            pauseMusic: function (e) {\r\n                e.preventDefault();\r\n                $(e.currentTarget).removeClass(\"pause\").addClass(\"play\");\r\n                this.controller.pauseSong();\r\n            },\r\n            nextSong: function (e) {\r\n                e.preventDefault();\r\n                this.ui.play.removeClass(\"play\").addClass(\"pause\");\r\n                this.controller.navigateSong(\"next\");\r\n            },\r\n            prevSong: function (e) {\r\n                e.preventDefault();\r\n                this.ui.play.removeClass(\"play\").addClass(\"pause\");\r\n                this.controller.navigateSong(\"prev\");\r\n            },\r\n            repeatSong: function(e){\r\n                $(e.currentTarget).toggleClass(\"active\");\r\n            },\r\n            shuffleSongs: function(e){\r\n                $(e.currentTarget).toggleClass(\"active\");\r\n            },\r\n            showVolume: function (e) {\r\n                $(e.currentTarget).toggleClass(\"active\");\r\n                var margin = ($(e.currentTarget).hasClass(\"active\")) ? 0 : -30;\r\n                this.$el.find(\".volume-bar\").animate({\"margin-top\": margin + \"px\"}, 200);\r\n            },\r\n            swipeVolume: function (e) {\r\n                var volWrapper = $(e.currentTarget).find(\".volume-wrapper\"),\r\n                    volTrigger = $(e.currentTarget).find(\".volume-trigger\"),\r\n                    dist = Math.round(parseInt(e.originalEvent.changedTouches[0].clientX) - volWrapper.offset().left);\r\n                    this.swipeInPercent = (dist*100)/volWrapper.width();\r\n                    this.global.volume = (this.swipeInPercent/100).toFixed(2);\r\n                if (this.touchStart && this.swipeInPercent < 94.5 && this.swipeInPercent >= 0 ) {\r\n                    volTrigger.css({\"width\": this.swipeInPercent+\"%\"});\r\n                    (this.global.audio)? this.global.audio.volume = this.global.volume : false;\r\n                }\r\n            },\r\n            startVolumeSwipe: function (e) {\r\n                this.touchStart = true;\r\n            },\r\n            showProfile: function(e){\r\n                  $(e.currentTarget).toggleClass(\"active\");\r\n                  var margin = ($(e.currentTarget).hasClass(\"active\"))? 0 : -160;\r\n                  this.$content.show().animate({\"margin-top\": margin+\"px\"},300);\r\n            },\r\n            onRender: function () {\r\n                if (this.global.model !== undefined) {\r\n                    this.$el.empty().append(this.template({\r\n                        author: this.global.model.get(\"artist\"),\r\n                        title: this.global.model.get(\"title\"),\r\n                        minutes: this.global.model.get(\"minutes\"),\r\n                        seconds: this.global.model.get(\"seconds\"),\r\n                        isPlayed: this.global.model.get(\"isPlayed\"),\r\n                        volume: (this.global.volume*100)\r\n                    }));\r\n                } else {\r\n                    this.$el.empty().append(this.template({\r\n                        author: \"No artist\",\r\n                        title: \"No title\",\r\n                        minutes: \"0\",\r\n                        seconds: \"00\"\r\n                    }));\r\n                }\r\n\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/PlayerView.js");

eval("/**\r\n * Created by Ievgen on 31.01.2015.\r\n */\r\ndefine(\'controllers/VkPlayerController\',[\r\n    \'jquery\',\r\n    \'underscore\',\r\n    \'App\',\r\n    \'backbone\',\r\n    \'marionette\',\r\n    \'collections/VkAudioCollection\',\r\n    \'views/PlayerView\'\r\n], function ($, _, App, Backbone, Marionette,\r\n             VkAudioCollection,\r\n             PlayerView) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.Controller.extend({\r\n        initialize: function () {\r\n            this.global = Backbone.Wreqr.radio.channel(\'global\');\r\n            this.user = Backbone.Wreqr.radio.channel(\'user\');\r\n            this.user.beats = (this.user.beats !== undefined)? this.user.beats: 300;\r\n            this.collection = new VkAudioCollection();\r\n            this.collection.setData();\r\n            if(!this.global.model){\r\n                this.global.model = this.collection.models[0];\r\n            }\r\n            this.nextSong = function () {\r\n                return this.collection.models[++this.global.model.id];\r\n            };\r\n            this.prevSong = function () {\r\n                return this.collection.models[--this.global.model.id];\r\n            };\r\n            if (!this.global.volume) {\r\n                this.global.volume = 0.5;\r\n            }\r\n        },\r\n        getPlayer: function () {\r\n            App.homePageLayout.playerBlock.show(new PlayerView({controller: this}));\r\n        },\r\n        loadSong: function () {\r\n            var self = this,\r\n                src = this.global.model.get(\"url\");\r\n            this.global.audio = new window.Audio(src);\r\n            this.global.audio.volume = this.global.volume;\r\n            this.global.audio.addEventListener(\'loadeddata\', function () {\r\n                self.global.model.set(\"loaded\", true);\r\n                self.playerView = new PlayerView({\r\n                    controller: self\r\n                });\r\n                self.playSong();\r\n                $(\".beats-now\").text(--self.user.beats);\r\n                window.localStorage.setItem(\"beats\",JSON.stringify(self.user.beats));\r\n                App.homePageLayout.playerBlock.show(self.playerView);\r\n            }, false);\r\n        },\r\n        playSong: function () {\r\n            this.collection.models[this.global.model.id].set(\"isPlayed\", true);\r\n            window.localStorage.setItem(\"songs\", JSON.stringify(this.collection.models));\r\n            (!this.global.audio)? this.loadSong() : this.global.audio.play();\r\n        },\r\n        pauseSong: function () {\r\n            this.collection.models[this.global.model.id].set(\"isPlayed\", false);\r\n            window.localStorage.setItem(\"songs\", JSON.stringify(this.collection.models));\r\n            (!this.global.audio)? this.loadSong() : this.global.audio.pause();\r\n        },\r\n        stopAudio: function () {\r\n            this.global.audio.pause();\r\n            this.global.audio.currentTime = 0;\r\n            _.each(this.collection.models, function (model) {\r\n                model.set(\"isPlayed\", false);\r\n            });\r\n            window.localStorage.setItem(\"songs\", JSON.stringify(this.collection.models));\r\n        },\r\n        navigateSong: function (elTrigger) {\r\n            this.stopAudio();\r\n            this.global.model = (elTrigger === \"next\")? this.nextSong() : this.prevSong();\r\n            this.loadSong();\r\n        }\r\n    });\r\n});\n//# sourceURL=/controllers/VkPlayerController.js");

eval("/**\r\n * Created by Ievgen on 18.01.2015.\r\n */\r\ndefine(\'views/PlayListView\',[\'App\', \'jquery\', \'underscore\', \'backbone\', \'marionette\', \'models/VkAudioModel\',\r\n        \'controllers/VkPlayerController\',\r\n        \'templates/templateCollection\'],\r\n    function (App, $, _, Backbone, Marionette, VkAudioModel, Player, templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.ItemView.extend({\r\n            tagName: \"li\",\r\n            className: \"song\",\r\n            template: templateFn[\'PlaylistView.hbs\'],\r\n            model: VkAudioModel,\r\n            initialize: function () {\r\n                this.player = new Player();\r\n                this.global = Backbone.Wreqr.radio.channel(\'global\');\r\n                this.user = Backbone.Wreqr.radio.channel(\'user\');\r\n                this.user.beats = (this.user.beats !== undefined)? this.user.beats: 300;\r\n            },\r\n            ui: {\r\n                \"info\": \".song-info\",\r\n                \"play\": \".pl-play\",\r\n                \"pause\": \".pl-pause\",\r\n                \"download\": \".download\",\r\n                \"share\": \'.share\',\r\n                \"like\": \".like\",\r\n                \"remove\": \".remove\"\r\n            },\r\n            events: {\r\n                \"touchend @ui.play\": \"playMusic\",\r\n                \"touchend @ui.pause\": \"pauseMusic\",\r\n                \"touchend @ui.like\": \"likedSong\",\r\n                \"touchend @ui.share\": \"shareSong\",\r\n                \"touchend @ui.download\": \"downloadSong\"\r\n            },\r\n            goBack: function (e) {\r\n                var event = $(e.currentTarget).parent().find(\".pl-play\");\r\n                event.currentTarget = event;\r\n                this.playMusic(event);\r\n                Backbone.history.navigate(\"home\", {trigger: true, replace: false});\r\n                $(App.footer.el);\r\n                App.layout.playlists.$el.css({\"margin-left\":100+\"%\"});\r\n                //App.layout.playlists.$el.hide();\r\n            },\r\n            playMusic: function (e) {\r\n                $(\"li.song\").find(\"div.pl-pause\").removeClass(\"pl-pause\").addClass(\"pl-play\");\r\n                $(e.currentTarget).removeClass(\"pl-play\").addClass(\"pl-pause\");\r\n                if (this.global.audio !== undefined && this.global.model !== undefined &&\r\n                    this.global.model.get(\"artist\") !== this.model.get(\"artist\")) {\r\n                    this.player.stopAudio();\r\n                }\r\n                this.global.model = this.model;\r\n                this.global.model.set(\"isPlayed\",true);\r\n                this.player.loadSong();\r\n               //(this.global.model.get(\"loaded\") === true)? this.player.playSong() : this.player.loadSong();\r\n            },\r\n            pauseMusic: function (e) {\r\n                $(e.currentTarget).removeClass(\"pl-pause\").addClass(\"pl-play\");\r\n                this.player.pauseSong();\r\n            },\r\n            likedSong: function () {\r\n                var self = this;\r\n                this.user.beats = this.user.beats+3;\r\n                window.localStorage.setItem(\"beats\",JSON.stringify(this.user.beats));\r\n                this.ui.share.show().animate({\r\n                    \"margin-left\": 0 + \"px\"\r\n                }, 300, function () {\r\n                    self.ui.like.hide();\r\n                });\r\n            },\r\n            shareSong: function (){\r\n                this.user.beats = this.user.beats+6;\r\n                window.localStorage.setItem(\"beats\",JSON.stringify(this.user.beats));\r\n                Backbone.history.navigate(\"friends\", {trigger: true, replace:false});\r\n                $(App.footer.el).show().animate({\"margin-bottom\":-45+\"px\"},150);\r\n                $(App.playlistLayout.list.el).animate({\"margin-left\": -100 + \"%\"}, 300, function(){\r\n                    $(App.playlistLayout.friends.el).fadeIn(\"slow\");\r\n                    $(App.footer.el).animate({\"margin-bottom\":-0+\"px\"},150);\r\n                    $(this).hide();\r\n                });\r\n            },\r\n            downloadSong: function () {\r\n\r\n            },\r\n            onRender: function () {\r\n                this.template(this.model.toJSON());\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/PlayListView.js");

eval("define(\'models/SearchModel\',[\"jquery\", \"underscore\", \"backbone\",\"models/VkAuthModel\" ,\"helpers/VkRequestHelper\"],\r\n    function ($, _, Backbone, VkAuthModel, VkRequestHelper) {\r\n        \"use strict\";\r\n        var searchModel = Backbone.Model.extend({\r\n            getUrl: function () {\r\n                VkAuthModel.setData();\r\n                var keyWords = window.localStorage.getItem(\"searchItem\");\r\n                return VkRequestHelper.searchAudios(keyWords, VkAuthModel.defaults.accessToken);\r\n            },\r\n            url: function () {\r\n                return this.getUrl();\r\n            }\r\n        });\r\n        return searchModel;\r\n\r\n    }\r\n);\n//# sourceURL=/models/SearchModel.js");

eval("/**\r\n * Created by Ievgen on 18.01.2015.\r\n */\r\ndefine(\'views/SearchListCollectionView\',[\'App\' , \'jquery\', \'underscore\', \'backbone\',\'marionette\',\'collections/VkAudioCollection\', \'views/PlayListView\'],\r\n    function (App, $, _, Backbone, Marionette, VkAudioCollection, PlayListView) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.CollectionView.extend({\r\n            childView: PlayListView,\r\n            className:\"songs-wrapper\",\r\n            tagName: \"ul\",\r\n            collection: VkAudioCollection\r\n        });\r\n    });\n//# sourceURL=/views/SearchListCollectionView.js");

eval("/**\r\n * Created by Ievgen on 21.01.2015.\r\n */\r\ndefine(\'controllers/SearchController\',[\r\n    \'jquery\',\r\n    \'underscore\',\r\n    \'App\',\r\n    \'backbone\',\r\n    \'marionette\',\r\n    \'models/SearchModel\',\r\n    \'collections/VkAudioCollection\',\r\n    \'views/SearchListCollectionView\'\r\n], function ($, _, App, Backbone, Marionette, SearchModel,\r\n             VkAudioCollection, SearchListCollectionView) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.Controller.extend({\r\n        initialize: function () {\r\n            this.model = new SearchModel();\r\n            this.vkAudioCollection = new VkAudioCollection();\r\n        },\r\n        detectRoute: function (route) {\r\n            var method;\r\n            switch (route) {\r\n                case \"playlist\":\r\n                    method = \"online\";\r\n                    break;\r\n                case \"downloads\":\r\n                    method = \"offline\";\r\n                    break;\r\n                case \"likes\":\r\n                    method = \"offline\";\r\n                    break;\r\n                case \"recommends\":\r\n                    method = \"online\";\r\n                    break;\r\n                case \"friends\":\r\n                    method = \"online\";\r\n                    break;\r\n            }\r\n            return method;\r\n        },\r\n        startSearch: function (value) {\r\n            window.loader.show();\r\n            window.localStorage.setItem(\"searchItem\", value);\r\n            this.method = this.detectRoute(Backbone.history.fragment);\r\n            (this.method === \"online\") ? this.onlineSearch() : this.offlineSearch();\r\n        },\r\n        onlineSearch: function () {\r\n            var self = this;\r\n            //TODO realize method for friends search\r\n            this.model.fetch().done(function (result) {\r\n                var songsCount = result.response.shift();\r\n                self.saveData(result.response);\r\n                self.searchListCollectionView = new SearchListCollectionView({\r\n                    collection: self.vkAudioCollection\r\n                });\r\n                App.playlistLayout.list.$el.hide();\r\n                App.playlistLayout.searchResult.show(self.searchListCollectionView);\r\n                window.loader.hide();\r\n            }).fail(function (err) {\r\n                console.log(\"Error: \", err);\r\n            });\r\n        },\r\n        offlineSearch: function () {\r\n\r\n        },\r\n        saveData: function (result) {\r\n            var songs = _.map(result, function (songs) {\r\n                var minutes = parseInt(songs.duration / 60),\r\n                    seconds = songs.duration % 60;\r\n                return {\r\n                    artist: songs.artist,\r\n                    minutes: minutes,\r\n                    seconds: seconds,\r\n                    genre: songs.genre,\r\n                    lyricsId: songs.lyrics_id,\r\n                    ownerId: songs.owner_id,\r\n                    title: songs.title,\r\n                    url: songs.url,\r\n                    showShare: true\r\n                };\r\n            });\r\n            this.vkAudioCollection.reset(songs);\r\n        }\r\n    });\r\n});\n//# sourceURL=/controllers/SearchController.js");

eval("/**\r\n * Created by Ievgen on 18.01.2015.\r\n */\r\ndefine(\'views/SearchView\',[\'jquery\', \'underscore\', \'backbone\',\'marionette\', \'templates/templateCollection\',\r\n        \'controllers/SearchController\'],\r\n    function ($, _, Backbone, Marionette,templateFn, SearchController) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.ItemView.extend({\r\n            className:\"search-wrapper\",\r\n            tagName: \"div\",\r\n            template: templateFn[\'SearchView.hbs\'],\r\n            initialize: function(){\r\n              this.searchController = new SearchController();\r\n            },\r\n            events: {\r\n                \"keyup :input\":\"doSearch\",\r\n                \"keypress :input\":\"doSearch\"\r\n            },\r\n            doSearch: _.debounce(function(e){\r\n                this.searchController.startSearch(e.currentTarget.value);\r\n            },500)\r\n        });\r\n    });\n//# sourceURL=/views/SearchView.js");

eval("/**\r\n * Created by Ievgen on 18.01.2015.\r\n */\r\ndefine(\'views/PlayListCollectionView\',[\'App\', \'jquery\', \'underscore\', \'backbone\', \'marionette\', \'collections/VkAudioCollection\',\r\n        \'views/PlayListView\', \'views/SearchView\'],\r\n    function (App, $, _, Backbone, Marionette, VkAudioCollection, PlayListView, SearchView) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.CollectionView.extend({\r\n            childView: PlayListView,\r\n            className: \"songs-wrapper\",\r\n            tagName: \"ul\",\r\n            collection: VkAudioCollection,\r\n            setContentHeight: function(){\r\n                this.$el.height(function () {\r\n                    // 45px header height and 45px footer height\r\n                    var caculatedHeight = window.innerHeight - 90;\r\n                    return caculatedHeight + \'px\';\r\n                }).css(\'overflow-y\', \'scroll\');\r\n            },\r\n            onRender: function () {\r\n                App.playlistLayout.search.show(new SearchView());\r\n                App.layout.playlists.$el.show();\r\n                this.setContentHeight();\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/PlayListCollectionView.js");

eval("/**\r\n * Created by Ievgen on 21.01.2015.\r\n */\r\ndefine(\'controllers/VkPlayListController\',[\r\n    \'jquery\',\r\n    \'underscore\',\r\n    \'App\',\r\n    \'backbone\',\r\n    \'marionette\',\r\n    \'collections/VkAudioCollection\',\r\n    \'views/PlayListCollectionView\'\r\n], function ($, _, App, Backbone, Marionette,\r\n             VkAudioCollection,\r\n             PlayListCollectionView) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.Controller.extend({\r\n        initialize: function () {\r\n            this.vkAudioCollection = new VkAudioCollection();\r\n            if(window.localStorage.getItem(\"songs\") === null){\r\n               window.localStorage.setItem(\"songs\",\"\");\r\n            }\r\n            this.songs = window.localStorage.getItem(\"songs\");\r\n        },\r\n        getAudio: function (songsNumber) {\r\n            this.vkAudioCollection.songsNumber = songsNumber;\r\n            (this.songs.length > 0)? this.getLocalAudio() : this.getAudioRequest();\r\n        },\r\n        getLocalAudio: function(){\r\n            this.vkAudioCollection.setData();\r\n            this.showView();\r\n        },\r\n        getAudioRequest: function(){\r\n            var self = this;\r\n            window.loader.show();\r\n            this.vkAudioCollection.fetch().done(function (result) {\r\n                var songsCount = result.response.shift();\r\n                self.saveData(result.response);\r\n                self.compareResponse(result.response);\r\n                self.showView();\r\n            });\r\n        },\r\n        showView: function(){\r\n            this.playListCollectionView = new PlayListCollectionView({\r\n                collection: this.vkAudioCollection\r\n            });\r\n            if(!$(App.playlistLayout.list.el).html().trim()){\r\n                App.playlistLayout.list.show(this.playListCollectionView);\r\n            }\r\n            window.loader.hide();\r\n        },\r\n        detectChanges: function(){\r\n            this.getAudioRequest();\r\n        },\r\n        compareResponse: function(response){\r\n            var localData = this.vkAudioCollection;\r\n        },\r\n        saveData: function (result) {\r\n            var id = 0;\r\n            var songs = _.map(result, function (songs) {\r\n                var minutes = parseInt(songs.duration / 60),\r\n                    seconds = songs.duration % 60;\r\n\r\n                return {\r\n                    artist: songs.artist,\r\n                    minutes: minutes,\r\n                    seconds: seconds,\r\n                    genre: songs.genre,\r\n                    lyricsId: songs.lyrics_id,\r\n                    ownerId: songs.owner_id,\r\n                    title: songs.title,\r\n                    url: songs.url,\r\n                    id: id++,\r\n                    isPlayed:false\r\n                };\r\n            });\r\n            window.localStorage.setItem(\"songs\",JSON.stringify(songs));\r\n            this.vkAudioCollection.reset(songs);\r\n        }\r\n    });\r\n\r\n});\n//# sourceURL=/controllers/VkPlayListController.js");

eval("define(\'models/VkFriendModel\',[\"jquery\", \"underscore\", \"backbone\"],\r\n    function ($, _, Backbone) {\r\n        \"use strict\";\r\n        var FriendModel = Backbone.Model.extend({\r\n            defaults: {\r\n                firstName: String,\r\n                lastName: String,\r\n                isOnline: Boolean,\r\n                photo: String,\r\n                country: Number,\r\n                city: Number\r\n            }\r\n        });\r\n        return FriendModel;\r\n    }\r\n);\n//# sourceURL=/models/VkFriendModel.js");

eval("define(\'collections/VkFriendsCollection\',[\"jquery\", \"underscore\", \"backbone\", \"models/VkFriendModel\", \"models/VkAuthModel\", \"helpers/VkRequestHelper\"],\r\n    function ($, _, Backbone, VkFriendModel, VkAuthModel, VkRequestHelper) {\r\n        \"use strict\";\r\n        var FriendsCollection = Backbone.Collection.extend({\r\n            model: VkFriendModel,\r\n            getUrl: function (FriendsNumber) {\r\n                VkAuthModel.setData();\r\n                return VkRequestHelper.getFriendsUrl(\r\n                    VkAuthModel.defaults.userId,\r\n                    FriendsNumber,\r\n                    VkAuthModel.defaults.accessToken);\r\n            },\r\n            url: function () {\r\n                return this.getUrl(this.FriendsNumber);\r\n            }\r\n        });\r\n        return FriendsCollection;\r\n\r\n    }\r\n);\n//# sourceURL=/collections/VkFriendsCollection.js");

eval("/**\r\n * Created by Ievgen on 18.01.2015.\r\n */\r\ndefine(\'views/FriendlistView\',[\'jquery\', \'underscore\', \'backbone\',\'marionette\', \'models/VkFriendModel\',\r\n        \'templates/templateCollection\'],\r\n    function ($, _, Backbone, Marionette, VkFriendModel, templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.ItemView.extend({\r\n            tagName: \"li\",\r\n            className: \"friend\",\r\n            template: templateFn[\'FriendsView.hbs\'],\r\n            model: VkFriendModel,\r\n            ui:{\r\n                \"share\":\".fl-share\",\r\n                \"listen\":\".fl-listen\"\r\n            },\r\n            events: {\r\n\r\n            },\r\n            onRender: function(){\r\n                this.template(this.model.toJSON());\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/FriendlistView.js");

eval("/**\r\n * Created by Ievgen on 18.01.2015.\r\n */\r\ndefine(\'views/FriendsCollectionView\',[\'App\', \'jquery\', \'underscore\', \'backbone\',\'marionette\',\'collections/VkFriendsCollection\', \'views/FriendlistView\'],\r\n    function (App, $, _, Backbone, Marionette, VkFriendsCollection, FriendlistView) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.CollectionView.extend({\r\n            childView: FriendlistView,\r\n            className:\"friends-wrapper\",\r\n            tagName: \"ul\",\r\n            collection: VkFriendsCollection,\r\n            setContentHeight: function(){\r\n                this.$el.height(function () {\r\n                    // 45px header height and 45px footer height\r\n                    var caculatedHeight = window.innerHeight - 90;\r\n                    return caculatedHeight + \'px\';\r\n                }).css(\'overflow-y\', \'scroll\');\r\n            },\r\n            onRender: function(){\r\n                this.setContentHeight();\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/FriendsCollectionView.js");

eval("/**\r\n * Created by Ievgen on 21.01.2015.\r\n */\r\ndefine(\'controllers/VkFriendsController\',[\r\n    \'jquery\',\r\n    \'underscore\',\r\n    \'App\',\r\n    \'backbone\',\r\n    \'marionette\',\r\n    \'collections/VkFriendsCollection\',\r\n    \'views/FriendsCollectionView\'\r\n], function ($, _, App, Backbone, Marionette,\r\n             VkFriendsCollection,\r\n             FriendsCollectionView) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.Controller.extend({\r\n        initialize: function () {\r\n            this.vkFriendsCollection = new VkFriendsCollection();\r\n            if(window.localStorage.getItem(\"friends\") === null){\r\n                window.localStorage.setItem(\"friends\",\"\");\r\n            }\r\n            this.friends = window.localStorage.getItem(\"friends\");\r\n        },\r\n        getFriends: function (FriendsNumber) {\r\n            this.vkFriendsCollection.FriendsNumber = FriendsNumber;\r\n            (this.friends.length > 0)? this.getFriendsLocal() : this.getFriendsRiquest();\r\n        },\r\n        getFriendsLocal: function(){\r\n            var friends = JSON.parse(window.localStorage.getItem(\"friends\"));\r\n            this.vkFriendsCollection.reset(friends);\r\n            this.showView();\r\n        },\r\n        getFriendsRiquest: function(){\r\n            var self = this;\r\n            this.vkFriendsCollection.fetch().done(function (result) {\r\n                self.saveData(result.response);\r\n                self.showView();\r\n            });\r\n        },\r\n        showView: function(){\r\n            this.vkFriendsCollectionView = new FriendsCollectionView({\r\n                collection: this.vkFriendsCollection\r\n            });\r\n            App.playlistLayout.friends.show(this.vkFriendsCollectionView);\r\n        },\r\n        saveData: function (result) {\r\n            var friends = _.map(result, function (friends) {\r\n                return {\r\n                    firstName: friends.first_name,\r\n                    lastName: friends.last_name,\r\n                    isOnline: friends.online,\r\n                    photo: friends.photo_50,\r\n                    country: friends.country,\r\n                    city: friends.city\r\n                };\r\n            });\r\n            window.localStorage.setItem(\"friends\",JSON.stringify(friends));\r\n            this.vkFriendsCollection.reset(friends);\r\n        }\r\n    });\r\n});\n//# sourceURL=/controllers/VkFriendsController.js");

eval("define(\'models/UserModel\',[\"jquery\", \"underscore\", \"backbone\", \"models/VkAuthModel\", \"helpers/VkRequestHelper\"],\r\n    function ($, _, Backbone, VkAuthModel, VkRequestHelper) {\r\n        \"use strict\";\r\n        var userModel = Backbone.Model.extend({\r\n            defaults: {\r\n              \"maxBeats\":\"1500\"\r\n            },\r\n            initialize: function(){\r\n               this.user = Backbone.Wreqr.radio.channel(\'user\');\r\n            },\r\n            setData: function(){\r\n              if(JSON.parse(window.localStorage.getItem(\"userGlobals\")).userInfo !== undefined &&\r\n                 window.localStorage.getItem(\"beats\") !== null\r\n              ){\r\n                      this.user.info = JSON.parse(window.localStorage.getItem(\"userGlobals\")).userInfo;\r\n                      this.user.beats = JSON.parse(window.localStorage.getItem(\"beats\"));\r\n              }\r\n            },\r\n            getUrl: function () {\r\n                VkAuthModel.setData();\r\n                return VkRequestHelper.getUserInfoUrl(\r\n                    VkAuthModel.defaults.userId,VkAuthModel.defaults.accessToken);\r\n            },\r\n            url: function () {\r\n                return this.getUrl();\r\n            }\r\n        });\r\n        return userModel;\r\n\r\n    }\r\n);\n//# sourceURL=/models/UserModel.js");

eval("/**\r\n * Created by Ievgen on 18.01.2015.\r\n */\r\ndefine(\'views/ProfileItemView\',[\'jquery\', \'underscore\', \'backbone\', \'marionette\',\r\n        \'templates/templateCollection\'],\r\n    function ($, _, Backbone, Marionette, templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.ItemView.extend({\r\n            className:\"profile-wrapper\",\r\n            tagName: \"div\",\r\n            template: templateFn[\'ProfileView.hbs\'],\r\n            initialize: function(){\r\n                this.user = Backbone.Wreqr.radio.channel(\'user\');\r\n                this.user.beats = (this.user.beats !== undefined)? this.user.beats: 300;\r\n            },\r\n            ui: {\r\n\r\n            },\r\n\r\n            events: {\r\n\r\n            },\r\n            onRender: function () {\r\n                if(this.user.info !== undefined ){\r\n                    this.$el.empty().append(this.template({\r\n                        src: this.user.info.src,\r\n                        lastName: this.user.info.lastName,\r\n                        firstName: this.user.info.firstName,\r\n                        songsNumber: this.user.info.songsNumber,\r\n                        listenersNumber: this.user.info.listenersNumber,\r\n                        rating: this.user.rating,\r\n                        maxBeats: this.user.info.maxBeats,\r\n                        beatsNow: this.user.beats\r\n                    }));\r\n                } else {\r\n                    this.$el.empty().append(this.template({\r\n                        src: \"\",\r\n                        lastName: \"No\",\r\n                        firstName: \"Name\",\r\n                        SongsNumber: \"0\",\r\n                        ListenersNumber : \"0\",\r\n                        Rating : \"0\",\r\n                        MaxBeats: \"1500\",\r\n                        BeatsNow: \"0\"\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/ProfileItemView.js");

eval("/**\r\n * Created by Ievgen on 29.01.2015.\r\n */\r\ndefine(\'controllers/VkUserController\',[\r\n    \'jquery\',\r\n    \'underscore\',\r\n    \'App\',\r\n    \'backbone\',\r\n    \'marionette\',\r\n    \'models/UserModel\',\r\n    \'views/ProfileItemView\'\r\n], function ($, _, App, Backbone, Marionette,\r\n             UserModel,\r\n             ProfileItemView) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.Controller.extend({\r\n        initialize: function () {\r\n            this.user = Backbone.Wreqr.radio.channel(\'user\');\r\n            this.user.model = new UserModel();\r\n            this.user.model.setData();\r\n            this.user.beats = (this.user.beats !== undefined)? this.user.beats: 300;\r\n            this.userGlobals = JSON.parse(window.localStorage.getItem(\"userGlobals\"));\r\n        },\r\n        userInfoResponse: function(attr){\r\n            return{\r\n                src: attr.photo_100,\r\n                lastName: attr.last_name,\r\n                firstName: attr.first_name,\r\n                songsNumber: attr.counters.audios,\r\n                listenersNumber: attr.counters.followers,\r\n                rating: this.user.rating,\r\n                maxBeats: this.user.model.get(\"maxBeats\")\r\n            };\r\n        },\r\n        getUserInfo: function () {\r\n            (this.user.info !== undefined)? this.showView() : this.getUserRequest();\r\n        },\r\n        showView: function(){\r\n            App.homePageLayout.contentBlock.show(new ProfileItemView());\r\n        },\r\n        getUserRequest: function(){\r\n            var self = this;\r\n            this.user.model.fetch().done(function (result) {\r\n                var userInfo = self.userInfoResponse(result.response[0]);\r\n                self.user.info = userInfo;\r\n                self.userGlobals.userInfo = userInfo;\r\n                window.localStorage.setItem(\"userGlobals\",JSON.stringify(self.userGlobals));\r\n                window.localStorage.setItem(\"beats\",JSON.stringify(self.user.beats));\r\n                self.showView();\r\n            });\r\n        }\r\n    });\r\n});\n//# sourceURL=/controllers/VkUserController.js");

eval("/**\r\n * Created by Ievgen on 17.01.2015.\r\n */\r\ndefine(\'controllers/VkAPIrequestController\',[\r\n    \'jquery\',\r\n    \'underscore\',\r\n    \'App\',\r\n    \'backbone\',\r\n    \'marionette\',\r\n    \'controllers/VkPlayListController\',\r\n    \'controllers/VkFriendsController\',\r\n    \'controllers/VkUserController\',\r\n    \'controllers/VkPlayerController\'\r\n], function ($, _, App, Backbone, Marionette,\r\n             VkPlayListController,VkFriendsController, VkUserController, VkPlayerController) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.Controller.extend({\r\n        initialize: function () {\r\n\r\n        },\r\n        startPlayer: function(){\r\n             this.vkPlayerController = new VkPlayerController();\r\n             this.vkPlayerController.getPlayer();\r\n        },\r\n        startPlayList: function () {\r\n            this.vkPlayListController = new VkPlayListController();\r\n            this.vkPlayListController.getAudio(25);\r\n        },\r\n        startFriends: function(){\r\n            this.vkFriendsController = new VkFriendsController();\r\n            this.vkFriendsController.getFriends(25);\r\n        },\r\n        startUserInfo: function () {\r\n            this.vkUserController = new VkUserController();\r\n            this.vkUserController.getUserInfo();\r\n        }\r\n    });\r\n});\n//# sourceURL=/controllers/VkAPIrequestController.js");

eval("define(\'models/BeatsModel\',[\"jquery\", \"underscore\", \"backbone\", \"models/VkAuthModel\"],\r\n    function ($, _, Backbone, VkAuthModel) {\r\n        \"use strict\";\r\n        var beatsModel = Backbone.Model.extend({\r\n                genre_id: [\r\n                    \"Rock\",\r\n                    \"Pop\",\r\n                    \"Rap & Hip-Hop\",\r\n                    \"Easy Listening\",\r\n                    \"Dance & House\",\r\n                    \"Instrumental\",\r\n                    \"Metal\",\r\n                    \"Alternative\",\r\n                    \"Dubstep\",\r\n                    \"Jazz & Blues\",\r\n                    \"Drum & Bass\",\r\n                    \"Trance\",\r\n                    \"Chanson\",\r\n                    \"Ethnic\",\r\n                    \"Acoustic & Vocal\",\r\n                    \"Reggae\",\r\n                    \"Classical\",\r\n                    \"Indie Pop\",\r\n                    \"Speech\",\r\n                    \"Electropop & Disco\",\r\n                    \"Other\"\r\n                ]\r\n        });\r\n        return beatsModel;\r\n\r\n    }\r\n);\n//# sourceURL=/models/BeatsModel.js");

eval("/**\r\n * Created by Ievgen on 01.02.2015.\r\n */\r\ndefine(\'views/GetBeatsView\',[\'App\', \'jquery\', \'underscore\', \'backbone\', \'marionette\', \'models/UserModel\', \'models/BeatsModel\',\r\n        \'templates/templateCollection\'],\r\n    function (App, $, _, Backbone, Marionette, UserModel, BeatsModel, templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.ItemView.extend({\r\n            tagName: \"div\",\r\n            className: \"get-beats-wrapper\",\r\n            template: templateFn[\'GetBeats.hbs\']({\r\n                showGetBeats: true\r\n            }),\r\n            initialize: function(){\r\n                this.user = Backbone.Wreqr.radio.channel(\'user\');\r\n                this.user.beats = (this.user.beats !== undefined)? this.user.beats: 300;\r\n            },\r\n            ui:{\r\n                \"getBeats\":\"span.get-beats\"\r\n            },\r\n            events:{\r\n                \"click @ui.getBeats\":\"getBeats\"\r\n            },\r\n            getBeats: function(){\r\n               this.user.beats = this.user.beats-100;\r\n                $(\".beats-now\").text(this.user.beats);\r\n                window.localStorage.setItem(\"beats\",JSON.stringify(this.user.beats));\r\n               Backbone.history.navigate(\"beats\", {trigger:true, replace:false});\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/GetBeatsView.js");

eval("/**\r\n * Created by Ievgen on 01.02.2015.\r\n */\r\n/**\r\n * Created by Ievgen on 01.02.2015.\r\n */\r\ndefine(\'views/GetBeatsCategoryView\',[\'App\', \'jquery\', \'underscore\', \'backbone\', \'marionette\', \'models/UserModel\', \'models/BeatsModel\',\r\n        \'templates/templateCollection\'],\r\n    function (App, $, _, Backbone, Marionette, UserModel, BeatsModel, templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.ItemView.extend({\r\n            tagName: \"div\",\r\n            className: \"get-category-wrapper\",\r\n            template: templateFn[\'GetBeats.hbs\'],\r\n            initialize: function(){\r\n                this.model = new BeatsModel();\r\n                this.$contentBlock = $(\"#layout-content-block\").hide();\r\n                this.$el.show().css({\"margin-top\":window.innerHeight+\"px\"});\r\n                this.$el.animate({marginTop: -85+\"px\"}, 200);\r\n            },\r\n            ui:{\r\n                \"done\":\"span.done\"\r\n            },\r\n            events:{\r\n                \"click @ui.done\":\"getStarted\"\r\n            },\r\n            getStarted: function(){\r\n                Backbone.history.navigate(\"start\", {trigger:true, replace:false});\r\n            },\r\n            onRender: function(){\r\n                this.$el.empty().append(this.template({showBeatsCategorys: true, genre_id: this.model.genre_id }));\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/GetBeatsCategoryView.js");

eval("/**\r\n * Created by Ievgen on 29.01.2015.\r\n */\r\ndefine(\'controllers/GetBeatsController\',[\r\n    \'jquery\',\r\n    \'underscore\',\r\n    \'App\',\r\n    \'backbone\',\r\n    \'marionette\',\r\n    \'models/BeatsModel\',\r\n    \'views/GetBeatsView\',\r\n    \'views/GetBeatsCategoryView\'\r\n], function ($, _, App, Backbone, Marionette,\r\n             BeatsModel,\r\n             GetBeatsView,GetBeatsCategoryView) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.Controller.extend({\r\n        initialize: function () {\r\n            this.beatsModel = new BeatsModel();\r\n        },\r\n        startBeats: function(){\r\n            App.homePageLayout.beatsBlock.show(new GetBeatsView());\r\n        },\r\n        getCategory: function(){\r\n            App.homePageLayout.beatsBlock.show(new GetBeatsCategoryView());\r\n        }\r\n    });\r\n});\n//# sourceURL=/controllers/GetBeatsController.js");

eval("/**\r\n * Created by Ievgen on 01.02.2015.\r\n */\r\ndefine(\'views/NotificationView\',[\'App\', \'jquery\', \'underscore\', \'backbone\', \'marionette\', \'models/UserModel\',\r\n        \'templates/templateCollection\'],\r\n    function (App, $, _, Backbone, Marionette, UserModel, templateFn) {\r\n        \"use strict\";\r\n        return Backbone.Marionette.ItemView.extend({\r\n            tagName: \"div\",\r\n            className: \"notification-wrapper\",\r\n            template: templateFn[\'Notifications.hbs\'],\r\n            ui:{\r\n                \"getMessage\":\"span.get-message\"\r\n            },\r\n            events:{\r\n                \"click @ui.getMessage\":\"showMessage\"\r\n            },\r\n            showMessage: function(){\r\n\r\n            }\r\n        });\r\n    });\n//# sourceURL=/views/NotificationView.js");

eval("/**\r\n * Created by Ievgen on 29.01.2015.\r\n */\r\ndefine(\'controllers/NotificationController\',[\r\n    \'jquery\',\r\n    \'underscore\',\r\n    \'App\',\r\n    \'backbone\',\r\n    \'marionette\',\r\n    \'views/NotificationView\'\r\n], function ($, _, App, Backbone, Marionette,\r\n             NotificationView) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.Controller.extend({\r\n        initialize: function () {\r\n        },\r\n        getMessage: function(){\r\n            App.homePageLayout.notification.show(new NotificationView());\r\n        }\r\n    });\r\n});\n//# sourceURL=/controllers/NotificationController.js");

eval("define(\'controllers/MainController\',[\r\n    \'App\',\r\n    \'jquery\',\r\n    \'backbone\',\r\n    \'marionette\',\r\n    \'views/MobileLoginView\', \'views/HomeHeaderView\',\'views/SendMusicHeaderVIew\',\'views/PlaylistFooterView\',\r\n    \'views/FriendsFooterView\',\r\n    \'controllers/MobileLoginController\', \'controllers/VkAPIrequestController\', \'controllers/GetBeatsController\',\r\n    \'controllers/NotificationController\'\r\n], function (App, $, Backbone, Marionette,\r\n             MobileLoginView, HomeHeaderView, SendMusicHeaderVIew,\r\n             PlaylistFooterView, FriendsFooterView,\r\n             MobileLoginController, VkAPIrequestController, GetBeatsController, NotificationController) {\r\n    \"use strict\";\r\n    return Backbone.Marionette.Controller.extend({\r\n        initialize: function (options) {\r\n            this.vkAPIrequestController = new VkAPIrequestController();\r\n        },\r\n        loginScreen: function () {\r\n            if(window.localStorage.getItem(\"userGlobals\") !== null){\r\n                Backbone.history.navigate(\"home\", {trigger: true, replace: false});\r\n            } else {\r\n                App.mainRegion.show(new MobileLoginView());\r\n            }\r\n        },\r\n        validationScreen: function () {\r\n            this.mobileLoginController = new MobileLoginController();\r\n            this.mobileLoginController.detectRoute();\r\n        },\r\n\r\n        homeScreen: function () {\r\n            App.header.show(new HomeHeaderView());\r\n            this.vkAPIrequestController = new VkAPIrequestController();\r\n            this.getBeatsController = new GetBeatsController();\r\n            this.notificationController = new NotificationController();\r\n            this.vkAPIrequestController.startPlayer();\r\n            this.vkAPIrequestController.startUserInfo();\r\n            this.getBeatsController.startBeats();\r\n            this.notificationController.getMessage();\r\n        },\r\n        beatsScreen: function () {\r\n            this.getBeatsController = new GetBeatsController();\r\n            this.getBeatsController.getCategory();\r\n        },\r\n        showRating: function () {\r\n\r\n        },\r\n        showSettings: function () {\r\n\r\n        },\r\n        showPlaylist: function () {\r\n            App.footer.show(new PlaylistFooterView());\r\n            this.vkAPIrequestController.startPlayList();\r\n        },\r\n        downloadsPlayList: function (){\r\n\r\n        },\r\n        likesPlayList: function (){\r\n\r\n        },\r\n        recommendsPlayList: function () {\r\n\r\n        },\r\n        showFriends: function () {\r\n            App.header.show(new SendMusicHeaderVIew());\r\n            App.footer.show(new FriendsFooterView());\r\n            this.vkAPIrequestController.startFriends();\r\n        }\r\n    });\r\n});\n//# sourceURL=/controllers/MainController.js");

eval("// Include Desktop Specific JavaScript files here (or inside of your Desktop Controller, or differentiate based off App.mobile === false)\r\nrequire([\"App\",\"routers/AppRouter\",\"controllers/MainController\"], function (App, AppRouter, AppController) {\r\n    App.appRouter = new AppRouter({\r\n        controller:new AppController()\r\n    });\r\n\r\n    // Start Marionette Application in desktop mode (default)\r\n    App.start();\r\n\r\n});\n//# sourceURL=/init/ApiInit.js");

define("init/ApiInit", function(){});

